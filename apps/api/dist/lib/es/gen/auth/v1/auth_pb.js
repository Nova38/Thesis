"use strict";
// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file auth/v1/auth.proto (package auth, syntax proto3)
/* eslint-disable */
// @ts-nocheck
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Membership = exports.Attribute = exports.Role = exports.HiddenTxList = exports.HiddenTx = exports.Suggestion = exports.User = exports.Collection = exports.Reference = exports.ObjectKey = exports.FullObject = exports.Object$ = exports.ACLEntry = exports.PathPolicy = exports.Operation = exports.History = exports.HistoryEntry = exports.StateActivity = exports.KeySchema = exports.TxError = exports.Action = exports.ObjectKind = exports.TransactionType = void 0;
var protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from enum auth.TransactionType
 */
var TransactionType;
(function (TransactionType) {
    /**
     * @generated from enum value: TRANSACTION_TYPE_UNSPECIFIED = 0;
     */
    TransactionType[TransactionType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: TRANSACTION_TYPE_INVOKE = 1;
     */
    TransactionType[TransactionType["INVOKE"] = 1] = "INVOKE";
    /**
     * @generated from enum value: TRANSACTION_TYPE_QUERY = 2;
     */
    TransactionType[TransactionType["QUERY"] = 2] = "QUERY";
})(TransactionType || (exports.TransactionType = TransactionType = {}));
// Retrieve enum metadata with: proto3.getEnumType(TransactionType)
protobuf_1.proto3.util.setEnumType(TransactionType, "auth.TransactionType", [
    { no: 0, name: "TRANSACTION_TYPE_UNSPECIFIED" },
    { no: 1, name: "TRANSACTION_TYPE_INVOKE" },
    { no: 2, name: "TRANSACTION_TYPE_QUERY" },
]);
/**
 * @generated from enum auth.ObjectKind
 */
var ObjectKind;
(function (ObjectKind) {
    /**
     * @generated from enum value: OBJECT_KIND_UNSPECIFIED = 0;
     */
    ObjectKind[ObjectKind["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: OBJECT_KIND_GLOBAL_OBJECT = 1;
     */
    ObjectKind[ObjectKind["GLOBAL_OBJECT"] = 1] = "GLOBAL_OBJECT";
    /**
     * Object's key := {COLLECTION_ID}{TYPE}[...key_paths]
     *
     * @generated from enum value: OBJECT_KIND_PRIMARY_OBJECT = 2;
     */
    ObjectKind[ObjectKind["PRIMARY_OBJECT"] = 2] = "PRIMARY_OBJECT";
    /**
     * Object's key := {COLLECTION_ID}{TYPE}<PrimaryKey>{...key_paths}
     *
     * @generated from enum value: OBJECT_KIND_SUB_OBJECT = 3;
     */
    ObjectKind[ObjectKind["SUB_OBJECT"] = 3] = "SUB_OBJECT";
    /**
     * @generated from enum value: OBJECT_KIND_REFERENCE = 4;
     */
    ObjectKind[ObjectKind["REFERENCE"] = 4] = "REFERENCE";
})(ObjectKind || (exports.ObjectKind = ObjectKind = {}));
// Retrieve enum metadata with: proto3.getEnumType(ObjectKind)
protobuf_1.proto3.util.setEnumType(ObjectKind, "auth.ObjectKind", [
    { no: 0, name: "OBJECT_KIND_UNSPECIFIED" },
    { no: 1, name: "OBJECT_KIND_GLOBAL_OBJECT" },
    { no: 2, name: "OBJECT_KIND_PRIMARY_OBJECT" },
    { no: 3, name: "OBJECT_KIND_SUB_OBJECT" },
    { no: 4, name: "OBJECT_KIND_REFERENCE" },
]);
/**
 * Action - The action to be performed during the operation
 *
 * # Action Groups
 *   - UNSPECIFIED: null or not set
 *   - REGISTER:    Used to register a new user or collection (always allowed)
 *   - COLLECTION:  Used to manage collections permissions
 *   - MEMBERSHIP:  Used to manage membership of a collection
 *   - OBJECT:      Used to manage objects in a collection
 *
 * @generated from enum auth.Action
 */
var Action;
(function (Action) {
    /**
     * @generated from enum value: ACTION_UNSPECIFIED = 0;
     */
    Action[Action["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: ACTION_UTILITY = 1;
     */
    Action[Action["UTILITY"] = 1] = "UTILITY";
    /**
     * View the contents of an object
     *
     * @generated from enum value: ACTION_VIEW = 10;
     */
    Action[Action["VIEW"] = 10] = "VIEW";
    /**
     * Create a new object
     *  - key must not already exist
     *
     * @generated from enum value: ACTION_CREATE = 11;
     */
    Action[Action["CREATE"] = 11] = "CREATE";
    /**
     * Update an existing object
     *   - key must already exist
     *
     * @generated from enum value: ACTION_UPDATE = 12;
     */
    Action[Action["UPDATE"] = 12] = "UPDATE";
    /**
     * Delete an existing object, key must already exist
     *
     * @generated from enum value: ACTION_DELETE = 13;
     */
    Action[Action["DELETE"] = 13] = "DELETE";
    /**
     * Suggest a change to an object, key must already exist
     *
     * @generated from enum value: ACTION_SUGGEST_VIEW = 14;
     */
    Action[Action["SUGGEST_VIEW"] = 14] = "SUGGEST_VIEW";
    /**
     * Suggest a change to an object, key must already exist
     *
     * @generated from enum value: ACTION_SUGGEST_CREATE = 15;
     */
    Action[Action["SUGGEST_CREATE"] = 15] = "SUGGEST_CREATE";
    /**
     * Delete a suggestion, key must already exist
     *
     * @generated from enum value: ACTION_SUGGEST_DELETE = 16;
     */
    Action[Action["SUGGEST_DELETE"] = 16] = "SUGGEST_DELETE";
    /**
     * Approve a suggestion and apply it to the object, key must already exist
     *
     * @generated from enum value: ACTION_SUGGEST_APPROVE = 17;
     */
    Action[Action["SUGGEST_APPROVE"] = 17] = "SUGGEST_APPROVE";
    /**
     * @generated from enum value: ACTION_VIEW_HISTORY = 18;
     */
    Action[Action["VIEW_HISTORY"] = 18] = "VIEW_HISTORY";
    /**
     * @generated from enum value: ACTION_VIEW_HIDDEN_TXS = 19;
     */
    Action[Action["VIEW_HIDDEN_TXS"] = 19] = "VIEW_HIDDEN_TXS";
    /**
     * @generated from enum value: ACTION_HIDE_TX = 20;
     */
    Action[Action["HIDE_TX"] = 20] = "HIDE_TX";
    /**
     * @generated from enum value: ACTION_REFERENCE_CREATE = 21;
     */
    Action[Action["REFERENCE_CREATE"] = 21] = "REFERENCE_CREATE";
    /**
     * @generated from enum value: ACTION_REFERENCE_DELETE = 22;
     */
    Action[Action["REFERENCE_DELETE"] = 22] = "REFERENCE_DELETE";
    /**
     * @generated from enum value: ACTION_REFERENCE_VIEW = 23;
     */
    Action[Action["REFERENCE_VIEW"] = 23] = "REFERENCE_VIEW";
})(Action || (exports.Action = Action = {}));
// Retrieve enum metadata with: proto3.getEnumType(Action)
protobuf_1.proto3.util.setEnumType(Action, "auth.Action", [
    { no: 0, name: "ACTION_UNSPECIFIED" },
    { no: 1, name: "ACTION_UTILITY" },
    { no: 10, name: "ACTION_VIEW" },
    { no: 11, name: "ACTION_CREATE" },
    { no: 12, name: "ACTION_UPDATE" },
    { no: 13, name: "ACTION_DELETE" },
    { no: 14, name: "ACTION_SUGGEST_VIEW" },
    { no: 15, name: "ACTION_SUGGEST_CREATE" },
    { no: 16, name: "ACTION_SUGGEST_DELETE" },
    { no: 17, name: "ACTION_SUGGEST_APPROVE" },
    { no: 18, name: "ACTION_VIEW_HISTORY" },
    { no: 19, name: "ACTION_VIEW_HIDDEN_TXS" },
    { no: 20, name: "ACTION_HIDE_TX" },
    { no: 21, name: "ACTION_REFERENCE_CREATE" },
    { no: 22, name: "ACTION_REFERENCE_DELETE" },
    { no: 23, name: "ACTION_REFERENCE_VIEW" },
]);
/**
 * @generated from enum auth.TxError
 */
var TxError;
(function (TxError) {
    /**
     * @generated from enum value: UNSPECIFIED = 0;
     */
    TxError[TxError["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: REQUEST_INVALID = 1;
     */
    TxError[TxError["REQUEST_INVALID"] = 1] = "REQUEST_INVALID";
    /**
     * @generated from enum value: RUNTIME = 2;
     */
    TxError[TxError["RUNTIME"] = 2] = "RUNTIME";
    /**
     * @generated from enum value: RUNTIME_BAD_OPS = 3;
     */
    TxError[TxError["RUNTIME_BAD_OPS"] = 3] = "RUNTIME_BAD_OPS";
    /**
     * The provided key is not in the world state
     *
     * @generated from enum value: KEY_NOT_FOUND = 4;
     */
    TxError[TxError["KEY_NOT_FOUND"] = 4] = "KEY_NOT_FOUND";
    /**
     * The provided key is already in the world state
     *
     * @generated from enum value: KEY_ALREADY_EXISTS = 5;
     */
    TxError[TxError["KEY_ALREADY_EXISTS"] = 5] = "KEY_ALREADY_EXISTS";
    /**
     * The collection id is invalid
     *
     * @generated from enum value: COLLECTION_INVALID_ID = 11;
     */
    TxError[TxError["COLLECTION_INVALID_ID"] = 11] = "COLLECTION_INVALID_ID";
    /**
     * The collection is not registered and thus cannot be accessed
     *
     * @generated from enum value: COLLECTION_UNREGISTERED = 12;
     */
    TxError[TxError["COLLECTION_UNREGISTERED"] = 12] = "COLLECTION_UNREGISTERED";
    /**
     * The collection is already registered and thus cannot be registered again
     *
     * @generated from enum value: COLLECTION_ALREADY_REGISTERED = 13;
     */
    TxError[TxError["COLLECTION_ALREADY_REGISTERED"] = 13] = "COLLECTION_ALREADY_REGISTERED";
    /**
     * The collection is invalid (e.g. the collection does not have a default ACLEntry)
     *
     * @generated from enum value: COLLECTION_INVALID = 14;
     */
    TxError[TxError["COLLECTION_INVALID"] = 14] = "COLLECTION_INVALID";
    /**
     * The object type in the collection is invalid
     *
     * @generated from enum value: COLLECTION_INVALID_OBJECT_TYPE = 15;
     */
    TxError[TxError["COLLECTION_INVALID_OBJECT_TYPE"] = 15] = "COLLECTION_INVALID_OBJECT_TYPE";
    /**
     * The role id in the collection is invalid
     *
     * @generated from enum value: COLLECTION_INVALID_ROLE_ID = 16;
     */
    TxError[TxError["COLLECTION_INVALID_ROLE_ID"] = 16] = "COLLECTION_INVALID_ROLE_ID";
    /**
     * The user does not have permission to perform the operation
     *
     * @generated from enum value: USER_INVALID_ID = 20;
     */
    TxError[TxError["USER_INVALID_ID"] = 20] = "USER_INVALID_ID";
    /**
     * The certificate is not registered as a user and thus cannot be used
     *
     * @generated from enum value: USER_UNREGISTERED = 21;
     */
    TxError[TxError["USER_UNREGISTERED"] = 21] = "USER_UNREGISTERED";
    /**
     * The certificate is already registered as a user and thus cannot be registered again
     *
     * @generated from enum value: USER_ALREADY_REGISTERED = 22;
     */
    TxError[TxError["USER_ALREADY_REGISTERED"] = 22] = "USER_ALREADY_REGISTERED";
    /**
     * The user is invalid
     *
     * @generated from enum value: USER_INVALID = 23;
     */
    TxError[TxError["USER_INVALID"] = 23] = "USER_INVALID";
    /**
     * The user does not have a role
     *
     * @generated from enum value: USER_NO_ROLE = 24;
     */
    TxError[TxError["USER_NO_ROLE"] = 24] = "USER_NO_ROLE";
    /**
     * USER_DELETED_ROLE          = 25;
     * The user does not have permission to perform the operation
     *
     * @generated from enum value: USER_PERMISSION_DENIED = 26;
     */
    TxError[TxError["USER_PERMISSION_DENIED"] = 26] = "USER_PERMISSION_DENIED";
    /**
     * The Object's key is invalid
     *
     * @generated from enum value: OBJECT_INVALID_ID = 31;
     */
    TxError[TxError["OBJECT_INVALID_ID"] = 31] = "OBJECT_INVALID_ID";
    /**
     * The Object is not registered and thus cannot be accessed
     *
     * @generated from enum value: OBJECT_UNREGISTERED = 32;
     */
    TxError[TxError["OBJECT_UNREGISTERED"] = 32] = "OBJECT_UNREGISTERED";
    /**
     * The Object is already registered and thus cannot be registered again
     *
     * @generated from enum value: OBJECT_ALREADY_REGISTERED = 33;
     */
    TxError[TxError["OBJECT_ALREADY_REGISTERED"] = 33] = "OBJECT_ALREADY_REGISTERED";
    /**
     * The Object is invalid
     *
     * @generated from enum value: OBJECT_INVALID = 34;
     */
    TxError[TxError["OBJECT_INVALID"] = 34] = "OBJECT_INVALID";
    /**
     * The object field path is invalid for the object type
     *
     * @generated from enum value: INVALID_OBJECT_FIELD_PATH = 35;
     */
    TxError[TxError["INVALID_OBJECT_FIELD_PATH"] = 35] = "INVALID_OBJECT_FIELD_PATH";
    /**
     * The value at the object field path is invalid for the object type
     *
     * @generated from enum value: INVALID_OBJECT_FIELD_VALUE = 36;
     */
    TxError[TxError["INVALID_OBJECT_FIELD_VALUE"] = 36] = "INVALID_OBJECT_FIELD_VALUE";
})(TxError || (exports.TxError = TxError = {}));
// Retrieve enum metadata with: proto3.getEnumType(TxError)
protobuf_1.proto3.util.setEnumType(TxError, "auth.TxError", [
    { no: 0, name: "UNSPECIFIED" },
    { no: 1, name: "REQUEST_INVALID" },
    { no: 2, name: "RUNTIME" },
    { no: 3, name: "RUNTIME_BAD_OPS" },
    { no: 4, name: "KEY_NOT_FOUND" },
    { no: 5, name: "KEY_ALREADY_EXISTS" },
    { no: 11, name: "COLLECTION_INVALID_ID" },
    { no: 12, name: "COLLECTION_UNREGISTERED" },
    { no: 13, name: "COLLECTION_ALREADY_REGISTERED" },
    { no: 14, name: "COLLECTION_INVALID" },
    { no: 15, name: "COLLECTION_INVALID_OBJECT_TYPE" },
    { no: 16, name: "COLLECTION_INVALID_ROLE_ID" },
    { no: 20, name: "USER_INVALID_ID" },
    { no: 21, name: "USER_UNREGISTERED" },
    { no: 22, name: "USER_ALREADY_REGISTERED" },
    { no: 23, name: "USER_INVALID" },
    { no: 24, name: "USER_NO_ROLE" },
    { no: 26, name: "USER_PERMISSION_DENIED" },
    { no: 31, name: "OBJECT_INVALID_ID" },
    { no: 32, name: "OBJECT_UNREGISTERED" },
    { no: 33, name: "OBJECT_ALREADY_REGISTERED" },
    { no: 34, name: "OBJECT_INVALID" },
    { no: 35, name: "INVALID_OBJECT_FIELD_PATH" },
    { no: 36, name: "INVALID_OBJECT_FIELD_VALUE" },
]);
/**
 * @generated from message auth.KeySchema
 */
var KeySchema = /** @class */ (function (_super) {
    __extends(KeySchema, _super);
    function KeySchema(data) {
        var _this = _super.call(this) || this;
        /**
         * The object type of the key
         *
         * @generated from field: string object_type = 1;
         */
        _this.objectType = "";
        /**
         * The kind of object that the key is for
         *
         * @generated from field: auth.ObjectKind object_kind = 2;
         */
        _this.objectKind = ObjectKind.UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    KeySchema.fromBinary = function (bytes, options) {
        return new KeySchema().fromBinary(bytes, options);
    };
    KeySchema.fromJson = function (jsonValue, options) {
        return new KeySchema().fromJson(jsonValue, options);
    };
    KeySchema.fromJsonString = function (jsonString, options) {
        return new KeySchema().fromJsonString(jsonString, options);
    };
    KeySchema.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(KeySchema, a, b);
    };
    KeySchema.runtime = protobuf_1.proto3;
    KeySchema.typeName = "auth.KeySchema";
    KeySchema.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "object_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "object_kind", kind: "enum", T: protobuf_1.proto3.getEnumType(ObjectKind) },
        { no: 3, name: "keys", kind: "message", T: protobuf_1.FieldMask },
    ]; });
    return KeySchema;
}(protobuf_1.Message));
exports.KeySchema = KeySchema;
/**
 * Can be used as the history entry
 *
 * @generated from message auth.StateActivity
 */
var StateActivity = /** @class */ (function (_super) {
    __extends(StateActivity, _super);
    function StateActivity(data) {
        var _this = _super.call(this) || this;
        /**
         * The transaction id that caused the change
         *
         * @generated from field: string tx_id = 1;
         */
        _this.txId = "";
        /**
         * The msp of the user that caused the change
         *
         * @generated from field: string msp_id = 2;
         */
        _this.mspId = "";
        /**
         * The id of the user that caused the change
         *
         * @generated from field: string user_id = 3;
         */
        _this.userId = "";
        /**
         * A note about the change
         *
         * @generated from field: string note = 5;
         */
        _this.note = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    StateActivity.fromBinary = function (bytes, options) {
        return new StateActivity().fromBinary(bytes, options);
    };
    StateActivity.fromJson = function (jsonValue, options) {
        return new StateActivity().fromJson(jsonValue, options);
    };
    StateActivity.fromJsonString = function (jsonString, options) {
        return new StateActivity().fromJsonString(jsonString, options);
    };
    StateActivity.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(StateActivity, a, b);
    };
    StateActivity.runtime = protobuf_1.proto3;
    StateActivity.typeName = "auth.StateActivity";
    StateActivity.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "tx_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "msp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "timestamp", kind: "message", T: protobuf_1.Timestamp },
        { no: 5, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]; });
    return StateActivity;
}(protobuf_1.Message));
exports.StateActivity = StateActivity;
/**
 * @generated from message auth.HistoryEntry
 */
var HistoryEntry = /** @class */ (function (_super) {
    __extends(HistoryEntry, _super);
    function HistoryEntry(data) {
        var _this = _super.call(this) || this;
        /**
         * The transaction id that caused the change
         *
         * @generated from field: string tx_id = 1;
         */
        _this.txId = "";
        /**
         * Whether the object was deleted
         *
         * @generated from field: bool is_delete = 2;
         */
        _this.isDelete = false;
        /**
         * Whether the transaction was hidden
         *
         * @generated from field: bool is_hidden = 3;
         */
        _this.isHidden = false;
        /**
         * A note about the change
         *
         * @generated from field: string note = 5;
         */
        _this.note = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    HistoryEntry.fromBinary = function (bytes, options) {
        return new HistoryEntry().fromBinary(bytes, options);
    };
    HistoryEntry.fromJson = function (jsonValue, options) {
        return new HistoryEntry().fromJson(jsonValue, options);
    };
    HistoryEntry.fromJsonString = function (jsonString, options) {
        return new HistoryEntry().fromJsonString(jsonString, options);
    };
    HistoryEntry.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(HistoryEntry, a, b);
    };
    HistoryEntry.runtime = protobuf_1.proto3;
    HistoryEntry.typeName = "auth.HistoryEntry";
    HistoryEntry.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "tx_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "is_delete", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 3, name: "is_hidden", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 4, name: "timestamp", kind: "message", T: protobuf_1.Timestamp },
        { no: 5, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "value", kind: "message", T: protobuf_1.Any },
    ]; });
    return HistoryEntry;
}(protobuf_1.Message));
exports.HistoryEntry = HistoryEntry;
/**
 * @generated from message auth.History
 */
var History = /** @class */ (function (_super) {
    __extends(History, _super);
    function History(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: repeated auth.HistoryEntry entries = 1;
         */
        _this.entries = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    History.fromBinary = function (bytes, options) {
        return new History().fromBinary(bytes, options);
    };
    History.fromJson = function (jsonValue, options) {
        return new History().fromJson(jsonValue, options);
    };
    History.fromJsonString = function (jsonString, options) {
        return new History().fromJsonString(jsonString, options);
    };
    History.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(History, a, b);
    };
    History.runtime = protobuf_1.proto3;
    History.typeName = "auth.History";
    History.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "entries", kind: "message", T: HistoryEntry, repeated: true },
        { no: 2, name: "hidden_txs", kind: "message", T: HiddenTxList },
    ]; });
    return History;
}(protobuf_1.Message));
exports.History = History;
/**
 * @generated from message auth.Operation
 */
var Operation = /** @class */ (function (_super) {
    __extends(Operation, _super);
    function Operation(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: auth.Action action = 1;
         */
        _this.action = Action.UNSPECIFIED;
        /**
         * @generated from field: string collection_id = 2;
         */
        _this.collectionId = "";
        /**
         * @generated from field: string object_type = 3;
         */
        _this.objectType = "";
        /**
         * @generated from field: string secondary_object_type = 4;
         */
        _this.secondaryObjectType = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Operation.fromBinary = function (bytes, options) {
        return new Operation().fromBinary(bytes, options);
    };
    Operation.fromJson = function (jsonValue, options) {
        return new Operation().fromJson(jsonValue, options);
    };
    Operation.fromJsonString = function (jsonString, options) {
        return new Operation().fromJsonString(jsonString, options);
    };
    Operation.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Operation, a, b);
    };
    Operation.runtime = protobuf_1.proto3;
    Operation.typeName = "auth.Operation";
    Operation.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "action", kind: "enum", T: protobuf_1.proto3.getEnumType(Action) },
        { no: 2, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "object_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "secondary_object_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "paths", kind: "message", T: protobuf_1.FieldMask },
    ]; });
    return Operation;
}(protobuf_1.Message));
exports.Operation = Operation;
/**
 * This message is the tree node for operations on the state object
 *
 * @generated from message auth.PathPolicy
 */
var PathPolicy = /** @class */ (function (_super) {
    __extends(PathPolicy, _super);
    function PathPolicy(data) {
        var _this = _super.call(this) || this;
        /**
         * The path is a sub path of a field mask
         *
         * @generated from field: string path = 1;
         */
        _this.path = "";
        /**
         * @generated from field: string full_path = 2;
         */
        _this.fullPath = "";
        /**
         * @generated from field: bool allow_sub_paths = 3;
         */
        _this.allowSubPaths = false;
        /**
         * The key is a valid sub path in the type of state object
         *
         * @generated from field: map<string, auth.PathPolicy> sub_paths = 4;
         */
        _this.subPaths = {};
        /**
         * If the policy is not set than use a parent policy unless nested policy is set
         *
         * @generated from field: repeated auth.Action actions = 5;
         */
        _this.actions = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    PathPolicy.fromBinary = function (bytes, options) {
        return new PathPolicy().fromBinary(bytes, options);
    };
    PathPolicy.fromJson = function (jsonValue, options) {
        return new PathPolicy().fromJson(jsonValue, options);
    };
    PathPolicy.fromJsonString = function (jsonString, options) {
        return new PathPolicy().fromJsonString(jsonString, options);
    };
    PathPolicy.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(PathPolicy, a, b);
    };
    PathPolicy.runtime = protobuf_1.proto3;
    PathPolicy.typeName = "auth.PathPolicy";
    PathPolicy.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "full_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "allow_sub_paths", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 4, name: "sub_paths", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: PathPolicy } },
        { no: 5, name: "actions", kind: "enum", T: protobuf_1.proto3.getEnumType(Action), repeated: true },
    ]; });
    return PathPolicy;
}(protobuf_1.Message));
exports.PathPolicy = PathPolicy;
/**
 * Access Control Entry for use in Hash Tree
 *
 * ObjectPolicy root                 = 1 [(buf.validate.field).required = true];
 *
 * @generated from message auth.ACLEntry
 */
var ACLEntry = /** @class */ (function (_super) {
    __extends(ACLEntry, _super);
    function ACLEntry(data) {
        var _this = _super.call(this) || this;
        /**
         * key is the object type
         *
         * @generated from field: map<string, auth.PathPolicy> children = 1;
         */
        _this.children = {};
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    ACLEntry.fromBinary = function (bytes, options) {
        return new ACLEntry().fromBinary(bytes, options);
    };
    ACLEntry.fromJson = function (jsonValue, options) {
        return new ACLEntry().fromJson(jsonValue, options);
    };
    ACLEntry.fromJsonString = function (jsonString, options) {
        return new ACLEntry().fromJsonString(jsonString, options);
    };
    ACLEntry.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(ACLEntry, a, b);
    };
    ACLEntry.runtime = protobuf_1.proto3;
    ACLEntry.typeName = "auth.ACLEntry";
    ACLEntry.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "children", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: PathPolicy } },
    ]; });
    return ACLEntry;
}(protobuf_1.Message));
exports.ACLEntry = ACLEntry;
/**
 * @generated from message auth.Object
 */
var Object$ = /** @class */ (function (_super) {
    __extends(Object$, _super);
    function Object$(data) {
        var _this = _super.call(this) || this;
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Object$.fromBinary = function (bytes, options) {
        return new Object$().fromBinary(bytes, options);
    };
    Object$.fromJson = function (jsonValue, options) {
        return new Object$().fromJson(jsonValue, options);
    };
    Object$.fromJsonString = function (jsonString, options) {
        return new Object$().fromJsonString(jsonString, options);
    };
    Object$.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Object$, a, b);
    };
    Object$.runtime = protobuf_1.proto3;
    Object$.typeName = "auth.Object";
    Object$.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "key", kind: "message", T: ObjectKey },
        { no: 2, name: "value", kind: "message", T: protobuf_1.Any },
    ]; });
    return Object$;
}(protobuf_1.Message));
exports.Object$ = Object$;
/**
 * @generated from message auth.FullObject
 */
var FullObject = /** @class */ (function (_super) {
    __extends(FullObject, _super);
    function FullObject(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: repeated auth.Suggestion suggestions = 4;
         */
        _this.suggestions = [];
        /**
         * @generated from field: repeated auth.Reference references = 5;
         */
        _this.references = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    FullObject.fromBinary = function (bytes, options) {
        return new FullObject().fromBinary(bytes, options);
    };
    FullObject.fromJson = function (jsonValue, options) {
        return new FullObject().fromJson(jsonValue, options);
    };
    FullObject.fromJsonString = function (jsonString, options) {
        return new FullObject().fromJsonString(jsonString, options);
    };
    FullObject.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(FullObject, a, b);
    };
    FullObject.runtime = protobuf_1.proto3;
    FullObject.typeName = "auth.FullObject";
    FullObject.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "key", kind: "message", T: ObjectKey },
        { no: 2, name: "value", kind: "message", T: protobuf_1.Any },
        { no: 3, name: "history", kind: "message", T: History },
        { no: 4, name: "suggestions", kind: "message", T: Suggestion, repeated: true },
        { no: 5, name: "references", kind: "message", T: Reference, repeated: true },
    ]; });
    return FullObject;
}(protobuf_1.Message));
exports.FullObject = FullObject;
/**
 * Keys
 * ─────────────────────────────────────────────────────────────────────────────────────
 * Object Keys
 * When converted to its string form it will be:
 * - Key := {OBJECT_TYPE}{COLLECTION_ID}{...OBJECT_ID}
 *
 * Reference Keys
 * Used to store references to objects for case like a user having a role
 * When converted to its string form it will be:
 * {Ref}{REFERENCE_TYPE}{COLLECTION_ID}[{OBJECT1_TYPE}{...OBJECT1_ID}][{OBJECT2_TYPE}{...OBJECT2_ID}]
 *
 *
 * SubKeys
 * When converted to its string form it will be:
 * {SUB_OBJECT_TYPE}{COLLECTION_ID}{OBJECT_TYPE}{...OBJECT_ID}{SUB_OBJECT_ID}
 * Examples
 * - Suggestion := {auth.Suggestion}  {COLLECTION_ID}{OBJECT_TYPE}{...OBJECT_ID}{SUGGESTION_ID}
 * - HiddenTxList := {auth.HiddenTxList}{COLLECTION_ID}{OBJECT_TYPE} {...OBJECT_ID}
 *
 * @generated from message auth.ObjectKey
 */
var ObjectKey = /** @class */ (function (_super) {
    __extends(ObjectKey, _super);
    function ObjectKey(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: string collection_id = 1;
         */
        _this.collectionId = "";
        /**
         * @generated from field: string object_type = 2;
         */
        _this.objectType = "";
        /**
         * @generated from field: repeated string object_id_parts = 3;
         */
        _this.objectIdParts = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    ObjectKey.fromBinary = function (bytes, options) {
        return new ObjectKey().fromBinary(bytes, options);
    };
    ObjectKey.fromJson = function (jsonValue, options) {
        return new ObjectKey().fromJson(jsonValue, options);
    };
    ObjectKey.fromJsonString = function (jsonString, options) {
        return new ObjectKey().fromJsonString(jsonString, options);
    };
    ObjectKey.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(ObjectKey, a, b);
    };
    ObjectKey.runtime = protobuf_1.proto3;
    ObjectKey.typeName = "auth.ObjectKey";
    ObjectKey.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "object_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "object_id_parts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]; });
    return ObjectKey;
}(protobuf_1.Message));
exports.ObjectKey = ObjectKey;
/**
 * Reference Keys
 * {auth.Reference}{REFERENCE_TYPE}{COLLECTION_ID}[{OBJECT1_TYPE}{...OBJECT1_ID}][{OBJECT2_TYPE}{...OBJECT2_ID}]
 *
 * @generated from message auth.Reference
 */
var Reference = /** @class */ (function (_super) {
    __extends(Reference, _super);
    function Reference(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: string collection_id = 1;
         */
        _this.collectionId = "";
        /**
         * @generated from field: string reference_type = 2;
         */
        _this.referenceType = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Reference.fromBinary = function (bytes, options) {
        return new Reference().fromBinary(bytes, options);
    };
    Reference.fromJson = function (jsonValue, options) {
        return new Reference().fromJson(jsonValue, options);
    };
    Reference.fromJsonString = function (jsonString, options) {
        return new Reference().fromJsonString(jsonString, options);
    };
    Reference.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Reference, a, b);
    };
    Reference.runtime = protobuf_1.proto3;
    Reference.typeName = "auth.Reference";
    Reference.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "reference_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "key_1", kind: "message", T: ObjectKey },
        { no: 4, name: "key_2", kind: "message", T: ObjectKey },
    ]; });
    return Reference;
}(protobuf_1.Message));
exports.Reference = Reference;
/**
 * Collection
 * ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
 * Note that the types of objects are stored in the default ACLEntry
 *
 * key := {COLLECTION}{COLLECTION_ID}
 *
 * @generated from message auth.Collection
 */
var Collection = /** @class */ (function (_super) {
    __extends(Collection, _super);
    function Collection(data) {
        var _this = _super.call(this) || this;
        /**
         * The key for the ledger
         *
         * @generated from field: string collection_id = 1;
         */
        _this.collectionId = "";
        /**
         * @generated from field: string name = 2;
         */
        _this.name = "";
        /**
         * @generated from field: string description = 3;
         */
        _this.description = "";
        /**
         * @generated from field: repeated string object_types = 4;
         */
        _this.objectTypes = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Collection.fromBinary = function (bytes, options) {
        return new Collection().fromBinary(bytes, options);
    };
    Collection.fromJson = function (jsonValue, options) {
        return new Collection().fromJson(jsonValue, options);
    };
    Collection.fromJsonString = function (jsonString, options) {
        return new Collection().fromJsonString(jsonString, options);
    };
    Collection.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Collection, a, b);
    };
    Collection.runtime = protobuf_1.proto3;
    Collection.typeName = "auth.Collection";
    Collection.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "object_types", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 5, name: "default", kind: "message", T: ACLEntry },
    ]; });
    return Collection;
}(protobuf_1.Message));
exports.Collection = Collection;
/**
 * User
 * ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
 *
 * key := {USER}{USER_ID.msp_id}{USER_ID.id}
 *
 *
 * @generated from message auth.User
 */
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: string collection_id = 1;
         */
        _this.collectionId = "";
        /**
         * @generated from field: string msp_id = 2;
         */
        _this.mspId = "";
        /**
         * @generated from field: string user_id = 3;
         */
        _this.userId = "";
        /**
         * @generated from field: string name = 4;
         */
        _this.name = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    User.fromBinary = function (bytes, options) {
        return new User().fromBinary(bytes, options);
    };
    User.fromJson = function (jsonValue, options) {
        return new User().fromJson(jsonValue, options);
    };
    User.fromJsonString = function (jsonString, options) {
        return new User().fromJsonString(jsonString, options);
    };
    User.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(User, a, b);
    };
    User.runtime = protobuf_1.proto3;
    User.typeName = "auth.User";
    User.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "msp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]; });
    return User;
}(protobuf_1.Message));
exports.User = User;
/**
 * Key should be
 * {auth.Suggestion}{COLLECTION_ID}{OBJECT_TYPE}{...OBJECT_ID}{SUGGESTION_ID}
 *
 * @generated from message auth.Suggestion
 */
var Suggestion = /** @class */ (function (_super) {
    __extends(Suggestion, _super);
    function Suggestion(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: string suggestion_id = 2;
         */
        _this.suggestionId = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Suggestion.fromBinary = function (bytes, options) {
        return new Suggestion().fromBinary(bytes, options);
    };
    Suggestion.fromJson = function (jsonValue, options) {
        return new Suggestion().fromJson(jsonValue, options);
    };
    Suggestion.fromJsonString = function (jsonString, options) {
        return new Suggestion().fromJsonString(jsonString, options);
    };
    Suggestion.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Suggestion, a, b);
    };
    Suggestion.runtime = protobuf_1.proto3;
    Suggestion.typeName = "auth.Suggestion";
    Suggestion.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "primary_key", kind: "message", T: ObjectKey },
        { no: 2, name: "suggestion_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "paths", kind: "message", T: protobuf_1.FieldMask },
        { no: 6, name: "value", kind: "message", T: protobuf_1.Any },
    ]; });
    return Suggestion;
}(protobuf_1.Message));
exports.Suggestion = Suggestion;
/**
 * @generated from message auth.HiddenTx
 */
var HiddenTx = /** @class */ (function (_super) {
    __extends(HiddenTx, _super);
    function HiddenTx(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: string tx_id = 1;
         */
        _this.txId = "";
        /**
         * @generated from field: string msp_id = 2;
         */
        _this.mspId = "";
        /**
         * @generated from field: string user_id = 3;
         */
        _this.userId = "";
        /**
         * @generated from field: string note = 5;
         */
        _this.note = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    HiddenTx.fromBinary = function (bytes, options) {
        return new HiddenTx().fromBinary(bytes, options);
    };
    HiddenTx.fromJson = function (jsonValue, options) {
        return new HiddenTx().fromJson(jsonValue, options);
    };
    HiddenTx.fromJsonString = function (jsonString, options) {
        return new HiddenTx().fromJsonString(jsonString, options);
    };
    HiddenTx.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(HiddenTx, a, b);
    };
    HiddenTx.runtime = protobuf_1.proto3;
    HiddenTx.typeName = "auth.HiddenTx";
    HiddenTx.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "tx_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "msp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "timestamp", kind: "message", T: protobuf_1.Timestamp },
        { no: 5, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]; });
    return HiddenTx;
}(protobuf_1.Message));
exports.HiddenTx = HiddenTx;
/**
 * Key should be {COLLECTION_ID}{auth.HiddenTxList}{OBJECT_TYPE}{...OBJECT_ID}
 *
 * @generated from message auth.HiddenTxList
 */
var HiddenTxList = /** @class */ (function (_super) {
    __extends(HiddenTxList, _super);
    function HiddenTxList(data) {
        var _this = _super.call(this) || this;
        /**
         * The list of hidden txs by tx_id
         *
         * @generated from field: repeated auth.HiddenTx txs = 4;
         */
        _this.txs = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    HiddenTxList.fromBinary = function (bytes, options) {
        return new HiddenTxList().fromBinary(bytes, options);
    };
    HiddenTxList.fromJson = function (jsonValue, options) {
        return new HiddenTxList().fromJson(jsonValue, options);
    };
    HiddenTxList.fromJsonString = function (jsonString, options) {
        return new HiddenTxList().fromJsonString(jsonString, options);
    };
    HiddenTxList.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(HiddenTxList, a, b);
    };
    HiddenTxList.runtime = protobuf_1.proto3;
    HiddenTxList.typeName = "auth.HiddenTxList";
    HiddenTxList.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "primary_key", kind: "message", T: ObjectKey },
        { no: 4, name: "txs", kind: "message", T: HiddenTx, repeated: true },
    ]; });
    return HiddenTxList;
}(protobuf_1.Message));
exports.HiddenTxList = HiddenTxList;
/**
 * @generated from message auth.Role
 */
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: string collection_id = 1;
         */
        _this.collectionId = "";
        /**
         * @generated from field: string role_id = 2;
         */
        _this.roleId = "";
        /**
         * @generated from field: string description = 5;
         */
        _this.description = "";
        /**
         * @generated from field: repeated string parent_role_ids = 6;
         */
        _this.parentRoleIds = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Role.fromBinary = function (bytes, options) {
        return new Role().fromBinary(bytes, options);
    };
    Role.fromJson = function (jsonValue, options) {
        return new Role().fromJson(jsonValue, options);
    };
    Role.fromJsonString = function (jsonString, options) {
        return new Role().fromJsonString(jsonString, options);
    };
    Role.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Role, a, b);
    };
    Role.runtime = protobuf_1.proto3;
    Role.typeName = "auth.Role";
    Role.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "role_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "ac", kind: "message", T: ACLEntry },
        { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "parent_role_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    ]; });
    return Role;
}(protobuf_1.Message));
exports.Role = Role;
/**
 * An attribute is used to define permissions via the value of the attribute in the
 * users certificate for a given msp
 *
 * @generated from message auth.Attribute
 */
var Attribute = /** @class */ (function (_super) {
    __extends(Attribute, _super);
    function Attribute(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: string collection_id = 1;
         */
        _this.collectionId = "";
        /**
         * The msp of the organization that this attribute applies to
         *
         * @generated from field: string msp_id = 2;
         */
        _this.mspId = "";
        /**
         * The oid of the attribute
         *
         * @generated from field: string oid = 3;
         */
        _this.oid = "";
        /**
         * The value of the attribute required to be satisfied by the user to have the
         * role
         *
         * @generated from field: string value = 4;
         */
        _this.value = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Attribute.fromBinary = function (bytes, options) {
        return new Attribute().fromBinary(bytes, options);
    };
    Attribute.fromJson = function (jsonValue, options) {
        return new Attribute().fromJson(jsonValue, options);
    };
    Attribute.fromJsonString = function (jsonString, options) {
        return new Attribute().fromJsonString(jsonString, options);
    };
    Attribute.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Attribute, a, b);
    };
    Attribute.runtime = protobuf_1.proto3;
    Attribute.typeName = "auth.Attribute";
    Attribute.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "msp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "oid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "ac", kind: "message", T: ACLEntry },
    ]; });
    return Attribute;
}(protobuf_1.Message));
exports.Attribute = Attribute;
/**
 * Membership is used to store permissions for a user in a collection
 *
 * @generated from message auth.Membership
 */
var Membership = /** @class */ (function (_super) {
    __extends(Membership, _super);
    function Membership(data) {
        var _this = _super.call(this) || this;
        /**
         * The collection that the user is a member of
         *
         * @generated from field: string collection_id = 1;
         */
        _this.collectionId = "";
        /**
         * The msp of the organization that the user's certificate is from
         *
         * @generated from field: string msp_id = 2;
         */
        _this.mspId = "";
        /**
         * The id of the user from the certificate
         *
         * @generated from field: string user_id = 3;
         */
        _this.userId = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Membership.fromBinary = function (bytes, options) {
        return new Membership().fromBinary(bytes, options);
    };
    Membership.fromJson = function (jsonValue, options) {
        return new Membership().fromJson(jsonValue, options);
    };
    Membership.fromJsonString = function (jsonString, options) {
        return new Membership().fromJsonString(jsonString, options);
    };
    Membership.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Membership, a, b);
    };
    Membership.runtime = protobuf_1.proto3;
    Membership.typeName = "auth.Membership";
    Membership.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "msp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "ac", kind: "message", T: ACLEntry },
    ]; });
    return Membership;
}(protobuf_1.Message));
exports.Membership = Membership;
