// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file saacs-cc/common/reference.proto (package auth.common, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ReferenceByItemRequest, ReferenceByItemResponse, ReferenceByPartialKeyRequest, ReferenceByPartialKeyResponse, ReferenceCreateRequest, ReferenceCreateResponse, ReferenceDeleteRequest, ReferenceDeleteResponse, ReferenceRequest, ReferenceResponse } from "./reference_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ════════════════════════════════ References ══════════════════════════════════
 * ──────────────────────────────── Query ────────────────────────────────────────
 *
 * @generated from service auth.common.ReferenceService
 */
export const ReferenceService = {
  typeName: "auth.common.ReferenceService",
  methods: {
    /**
     * @generated from rpc auth.common.ReferenceService.Reference
     */
    reference: {
      name: "Reference",
      I: ReferenceRequest,
      O: ReferenceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.ReferenceService.ReferenceByItem
     */
    referenceByItem: {
      name: "ReferenceByItem",
      I: ReferenceByItemRequest,
      O: ReferenceByItemResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.ReferenceService.ReferenceByPartialKey
     */
    referenceByPartialKey: {
      name: "ReferenceByPartialKey",
      I: ReferenceByPartialKeyRequest,
      O: ReferenceByPartialKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.ReferenceService.ReferenceCreate
     */
    referenceCreate: {
      name: "ReferenceCreate",
      I: ReferenceCreateRequest,
      O: ReferenceCreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.ReferenceService.ReferenceDelete
     */
    referenceDelete: {
      name: "ReferenceDelete",
      I: ReferenceDeleteRequest,
      O: ReferenceDeleteResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

