// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file chaincode/common/generic.proto (package auth.common, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodIdempotency, MethodKind } from "@bufbuild/protobuf";
import { AuthorizeOperationRequest, AuthorizeOperationResponse, BootstrapRequest, BootstrapResponse, CreateRequest, CreateResponse, DeleteRequest, DeleteResponse, GetCollectionsListResponse, GetCurrentUserResponse, GetFullRequest, GetFullResponse, GetHiddenTxRequest, GetHiddenTxResponse, GetHistoryRequest, GetHistoryResponse, GetRequest, GetResponse, GetSuggestionRequest, GetSuggestionResponse, HideTxRequest, HideTxResponse, ListByAttrsRequest, ListByAttrsResponse, ListByCollectionRequest, ListByCollectionResponse, ListRequest, ListResponse, SuggestionApproveRequest, SuggestionApproveResponse, SuggestionByPartialKeyRequest, SuggestionByPartialKeyResponse, SuggestionCreateRequest, SuggestionCreateResponse, SuggestionDeleteRequest, SuggestionDeleteResponse, SuggestionListByCollectionRequest, SuggestionListByCollectionResponse, UnHideTxRequest, UnHideTxResponse, UpdateRequest, UpdateResponse } from "./generic_pb.js";

/**
 * @generated from service auth.common.GenericService
 */
export const GenericService = {
  typeName: "auth.common.GenericService",
  methods: {
    /**
     * ══════════════════════════════════ Helper
     * ═════════════════════════════════════ ──────────────────────────────────
     * Query ────────────────────────────────────── rpc
     * GetAllTypes(google.protobuf.Empty) returns (GetAllTypesResponse) {
     *   option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
     *   option (auth.operation) = {action: ACTION_UTILITY};
     * }
     *
     * @generated from rpc auth.common.GenericService.GetCurrentUser
     */
    getCurrentUser: {
      name: "GetCurrentUser",
      I: Empty,
      O: GetCurrentUserResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * ──────────────────────────────── Invoke
     * ───────────────────────────────────────
     *
     * @generated from rpc auth.common.GenericService.Bootstrap
     */
    bootstrap: {
      name: "Bootstrap",
      I: BootstrapRequest,
      O: BootstrapResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.AuthorizeOperation
     */
    authorizeOperation: {
      name: "AuthorizeOperation",
      I: AuthorizeOperationRequest,
      O: AuthorizeOperationResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.GetCollectionsList
     */
    getCollectionsList: {
      name: "GetCollectionsList",
      I: Empty,
      O: GetCollectionsListResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.GetFull
     */
    getFull: {
      name: "GetFull",
      I: GetFullRequest,
      O: GetFullResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.ListByCollection
     */
    listByCollection: {
      name: "ListByCollection",
      I: ListByCollectionRequest,
      O: ListByCollectionResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.ListByAttrs
     */
    listByAttrs: {
      name: "ListByAttrs",
      I: ListByAttrsRequest,
      O: ListByAttrsResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.Create
     */
    create: {
      name: "Create",
      I: CreateRequest,
      O: CreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.GenericService.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.GenericService.Delete
     */
    delete: {
      name: "Delete",
      I: DeleteRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.GenericService.GetHistory
     */
    getHistory: {
      name: "GetHistory",
      I: GetHistoryRequest,
      O: GetHistoryResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.GetHiddenTx
     */
    getHiddenTx: {
      name: "GetHiddenTx",
      I: GetHiddenTxRequest,
      O: GetHiddenTxResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.HideTx
     */
    hideTx: {
      name: "HideTx",
      I: HideTxRequest,
      O: HideTxResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.GenericService.UnHideTx
     */
    unHideTx: {
      name: "UnHideTx",
      I: UnHideTxRequest,
      O: UnHideTxResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.GenericService.GetSuggestion
     */
    getSuggestion: {
      name: "GetSuggestion",
      I: GetSuggestionRequest,
      O: GetSuggestionResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.SuggestionListByCollection
     */
    suggestionListByCollection: {
      name: "SuggestionListByCollection",
      I: SuggestionListByCollectionRequest,
      O: SuggestionListByCollectionResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.common.GenericService.SuggestionByPartialKey
     */
    suggestionByPartialKey: {
      name: "SuggestionByPartialKey",
      I: SuggestionByPartialKeyRequest,
      O: SuggestionByPartialKeyResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * ──────────────────────────────── Invoke
     * ───────────────────────────────────────
     *
     * @generated from rpc auth.common.GenericService.SuggestionCreate
     */
    suggestionCreate: {
      name: "SuggestionCreate",
      I: SuggestionCreateRequest,
      O: SuggestionCreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.GenericService.SuggestionDelete
     */
    suggestionDelete: {
      name: "SuggestionDelete",
      I: SuggestionDeleteRequest,
      O: SuggestionDeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.common.GenericService.SuggestionApprove
     */
    suggestionApprove: {
      name: "SuggestionApprove",
      I: SuggestionApproveRequest,
      O: SuggestionApproveResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

