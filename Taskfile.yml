version: 3
dotenv:
  - ".env"
  - "./infra/network/k8s/.env"

includes:
  # network:
  #   taskfile: ./infra/network/Taskfile.yml
  #   dir: ./infra/network
  # k8s:
  #   taskfile: ./infra/network/k8s/Taskfile.yml
  #   dir: ./infra/network/k8Hi

  caliper:
    taskfile: ./apps/caliper/Taskfile.yml
    dir: ./apps/caliper

tasks:
  cleanup:node:modules:
    desc: Find all the node modules
    cmds:
      - find . -name 'node_modules' -type d -prune -print -exec rm -rf '{}' \;

  install:proto:
    desc: |
      Install all the protoc plugins

    cmds:
      - go install ./cmd/protoc-gen-saacs-go

  gen:clean:
    cmd:
      for:
        - './pkg/saacs-protos/saacs'
        - './libs/saacs-protos-es/src/gen'
        - './libs/saacs-protos-es/src/schema/gen'
      cmd: rm -rf {{ .ITEM }}

  install:bin:
    desc: |
      Install all the binaries

    cmds:
      - bash -c "cd ./infra/network && curl -sSLO
        https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh
        && chmod +x install-fabric.sh && ./install-fabric.sh b d"
      - pip install pyyaml rich
  net:up:
    desc: |
      Start the network

      up:
    cmds:
      - bash -c "cd ./infra/network && ./network.sh up createChannel -ca -s
        couchdb -c mychannel"
      - python ./infra/network/scripts/build_configs.py
      - docker-compose -f ./infra/network/explorer/docker-compose.yaml up -d
      - docker-compose -f ./infra/network/prometheus-grafana/docker-compose.yaml up -d
      - task: cc:deploy

  net:down:
    desc: |
      Stop the network

    cmds:
      - docker-compose -f ./infra/network/explorer/docker-compose.yaml down -v
      - docker-compose -f ./infra/network/prometheus-grafana/docker-compose.yaml down -v
      - bash -c "cd ./infra/network && ./network.sh down"

  net:restart:
    desc: |
      Restart the network

    cmds:
      - task: net:down
      - task: net:up

  cc:reload:
    cmds:
      # - go mod tidy
      - task: cc:build
      # - task: cc:redeploy
      - task: cc:redeploy:biochain

  cc:deploy:
    desc: Deploy saacs-cc to the channel and start the saacs-cc container
    cmds:
      - buf generate
      - for: ["saacs"]
        # cmd: bash -c "echo {{ .ITEM }}"
        cmd:
          bash -c "cd ./infra/network && ./network.sh deployCCAAS -ccn {{
          .ITEM }} -ccp ../../ "

  # cc:redeploy:
  #   desc: Deploy Updated saacs-cc containers
  #   cmds:
  #     - for: ["saacs"]
  #       # cmd: bash -c "echo {{ .ITEM }}"
  #       cmd: bash -c "cd ./infra/network && ./cc_restart/{{ .ITEM }}.sh "

  # cc:deploy:biochain:
  #   desc: Deploy saacs-cc to the channel and start the saacs-cc container
  #   cmds:
  #     - buf generate
  #     - cmd:
  #         bash -c "cd ./infra/network && ./network.sh deployCCAAS -ccn
  #         roles -ccp ../../ "

  cc:redeploy:biochain:
    desc: Deploy saacs-cc to the channel and start the saacs-cc container
    cmd: bash -c "./infra/network/cc_restart/roles.sh "

  cc:build:
    cmds:
      - docker build -t nova38/saacs:latest .
      - docker tag nova38/saacs:latest saacs_ccaas:latest


  build:cc:push:
    cmds:
      - task: cc:build
      - docker tag nova38/saacs:latest nova38/saacs:latest
      - docker push nova38/saacs:latest

  #  build:es-stub:
  #    cmd: cd ./pkg/saacs-es && pnpm run stub

  # build:gen-lint:
  #   cmd: cd ./pkg/web/biochain && pnpm lint-gen:fix

  #es:run:
  #  dir: ./pkg/saacs-es
  #  cmd: pnpm run api
  build:es:
    dir: ./libs/saacs-protos-es
    cmd: pnpm run build

  deploy:prod:api:
    dir: ./pkg/web
    env:
      vars:
        NUXT_API_URL: "https://api-biochain.ittc.ku.edu"
    cmds:
      - pnpm exec nuxi cleanup
      - pnpm run build:prod
      - ssh wisdom  "rm -rf /home/t312a008/projects/server/*"
      # - scp -r .output/* wisdom:/home/t312a008/projects/server

  deploy:prod:static:
    dir: ./pkg/web
    env:
      vars:
        NUXT_API_URL: https://api-biochain.ittc.ku.edu

    cmds:
      - pnpm exec nuxi cleanup
      - pnpm run build:prod-static
      - ssh wisdom  "rm -rf /projects/biochain/website/*"
      - scp -r .output/public/ wisdom:/projects/biochain/website/

  # go:format:
  #   cmds:
  #     - golines --ignore-generated  . -w

  # fabric:getMetadata:
  #   cmds:
  #     - bash -c "cd network && peer saacs-cc query -C default -n Thesis -c
  #       '{"Args":["org.hyperledger.fabric:GetMetadata"]}' "

  build:protoc-saacs-es:
    desc: Cleanup and build the libary needed for the protoc-gen-saacs-es to work
    cmds:
      - rm -rf ./cmd/protoc-gen-saacs-es/src/gen
      - buf generate --template buf.cmd.gen.yaml


  default:
    sources:
      - "proto/**/*"
      # - "tools/**/*"
      - "buf.gen.yaml"
    cmds:
      - buf build -o ./cmd/protoc-gen-saacs-es/src/image.bin
      - buf generate
      - task: build:es
      # - task: build:gen-lint
