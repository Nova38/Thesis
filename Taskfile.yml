version: 3
dotenv:
  - ".env"
  - "./network/k8s/.env"

includes:
  # network:
  #   taskfile: ./network/Taskfile.yml
  #   dir: ./network
  # k8s:
  #   taskfile: ./network/k8s/Taskfile.yml
  #   dir: ./network/k8Hi

  caliper:
    taskfile: ./caliper/Taskfile.yml
    dir: ./caliper

tasks:
  install:
    desc: |
      Install all the protoc plugins

    cmds:
      - go install ./pkg/cmd/protoc-gen-go-saacs

  gen:clean:
    cmds:
      - rm -rf ./lib/go/gen/chaincode/*
      - rm -rf ./lib/go/gen/*
      - rm -rf ./lib/es/gen/*

  net:up:
    desc: |
      Start the network

      up:
    cmds:
      - bash -c "cd ./network && ./network.sh up createChannel -ca -s couchdb -c
        mychannel"
      - python ./network/scripts/build_configs.py
      - docker-compose -f ./network/explorer/docker-compose.yaml up -d
      - docker-compose -f ./network/prometheus-grafana/docker-compose.yaml up -d
      - task: cc:deploy:biochain

  net:down:
    desc: |
      Stop the network

    cmds:
      - docker-compose -f ./network/explorer/docker-compose.yaml down -v
      - docker-compose -f ./network/prometheus-grafana/docker-compose.yaml down
        -v
      - bash -c "cd ./network && ./network.sh down"

  net:restart:
    desc: |
      Restart the network

    cmds:
      - task: net:down
      - task: net:up

  cc:reload:
    cmds:
      - go mod tidy
      - task: cc:build
      - task: cc:redeploy

  cc:deploy:
    desc: Deploy chaincode to the channel and start the chaincode container
    cmds:
      - buf generate
      - for: ["noauth", "noauth-no-sub", "identity", "roles"]
        # cmd: bash -c "echo {{ .ITEM }}"
        cmd:
          bash -c "cd ./network && ./network.sh deployCCAAS -ccn {{ .ITEM }}
          -ccp ../pkg/chaincode/ "

  cc:redeploy:
    desc: Deploy Updated chaincode containers
    cmds:
      - for: ["noauth", "noauth-no-sub", "identity", "roles"]
        # cmd: bash -c "echo {{ .ITEM }}"
        cmd: bash -c "cd ./network && ./cc_restart/{{ .ITEM }}.sh "

  cc:deploy:biochain:
    desc: Deploy chaincode to the channel and start the chaincode container
    cmds:
      - buf generate
      - cmd:
          bash -c "cd ./network && ./network.sh deployCCAAS -ccn roles -ccp
          ../pkg/chaincode/ "
  cc:redeploy:biochain:
    desc: Deploy chaincode to the channel and start the chaincode container
    cmd: bash -c "cd ./network && ./cc_restart/roles.sh "

  cc:build:
    cmd: docker build -t nova38/saacs:latest -f ./pkg/chaincode/Dockerfile .

  build:es-stub:
    cmd: cd ./pkg/saacs-es && pnpm run stub

  es:run:
    dir: ./pkg/saacs-es
    cmd: pnpm run api
  build:es:
    dir: ./pkg/saacs-es
    cmd: pnpm run build
  # go:format:
  #   cmds:
  #     - golines --ignore-generated  . -w

  # fabric:getMetadata:
  #   cmds:
  #     - bash -c "cd network && peer chaincode query -C default -n Thesis -c
  #       '{"Args":["org.hyperledger.fabric:GetMetadata"]}' "

  default:
    sources:
      - "proto/**/*"
      # - "tools/**/*"
      - "./buf.gen.yaml"
    cmds:
      - buf build -o image.bin
      - buf generate
      - task: build:es
