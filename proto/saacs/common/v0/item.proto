syntax = "proto3";

package saacs.common.v0;

import "buf/validate/validate.proto";
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/field_mask.proto";
// import "google/protobuf/timestamp.proto";
import "saacs/common/v0/enums.proto";

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
/* Keys
    ─────────────────────────────────────────────────────────────────────────────────────
   Item Keys
     When converted to its string form it will be:
     - Key := {ITEM_TYPE}{COLLECTION_ID}{...ITEM_ID}

   Reference Keys
     Used to store references to items for case like a user having a role
     When converted to its string form it will be:
     {Ref}{REFERENCE_TYPE}{COLLECTION_ID}[{ITEM1_TYPE}{...ITEM1_ID}][{ITEM2_TYPE}{...ITEM2_ID}]


   SubKeys
     When converted to its string form it will be:
     {SUB_ITEM_TYPE}{COLLECTION_ID}{ITEM_TYPE}{...ITEM_ID}{SUB_ITEM_ID}
         Examples
           - Suggestion := {auth.Suggestion}  {COLLECTION_ID}{ITEM_TYPE}{...ITEM_ID}{SUGGESTION_ID}
           - HiddenTxList := {auth.HiddenTxList}{COLLECTION_ID}{ITEM_TYPE} {...ITEM_ID}
*/
message ItemKey {
  string collection_id = 1 [(buf.validate.field).string.min_len = 1];
  string item_type = 2 [(buf.validate.field).string.min_len = 1];
  ItemKind item_kind = 3;

  repeated string item_key_parts = 4;
}

message Item {
  ItemKey key = 1;
  google.protobuf.Any value = 2 [(buf.validate.field).any = {
    not_in: [
        "type.googleapis.com/auth.Suggestion"
        "type.googleapis.com/auth.HiddenTxList"
        "type.googleapis.com/auth.Polices"
        "type.googleapis.com/auth.PathPolicy"
]
  }];
}

message KeySchema {
  // The item type of the key
  string item_type = 1 [(buf.validate.field).string.min_len = 1];
  // The kind of item that the key is for
  ItemKind item_kind = 2;
  // The paths that make up the key
  google.protobuf.FieldMask properties = 3;
}

message ReadWriteSet {
  repeated Item read_set = 1;
  repeated Item write_set = 2;
}
