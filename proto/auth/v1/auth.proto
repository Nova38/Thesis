syntax = "proto3";

package auth;

import "buf/validate/validate.proto";
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// import "auth/options/options.proto";

// ═════════════════════════════════════════════
// Message Options
// ═════════════════════════════════════════════

enum TransactionType {
  TRANSACTION_TYPE_UNSPECIFIED = 0;
  TRANSACTION_TYPE_INVOKE      = 1;
  TRANSACTION_TYPE_QUERY       = 2;
}
enum ObjectDomain {
  OBJECT_DOMAIN_UNSPECIFIED = 0;
  OBJECT_GLOBAL_OBJECT      = 1;
  // Object's key := {COLLECTION_ID}{TYPE}[...key_paths]
  OBJECT_DOMAIN_PRIMARY_OBJECT = 2;
  // Object's key := {COLLECTION_ID}{TYPE}<PrimaryKey>{...key_paths}
  OBJECT_DOMAIN_SUB_OBJECT = 3;
  OBJECT_DOMAIN_REFERENCE  = 4;
}

message KeySchema {
  string namespace                         = 1;
  ObjectDomain object_domain = 2;
  google.protobuf.FieldMask keys           = 3;
  google.protobuf.FieldMask primary_key     = 4;
  google.protobuf.FieldMask secondary_keys = 5;
}

// Define method options
extend google.protobuf.MethodOptions {
  Operation operation              = 57775;
  TransactionType transaction_type = 50556;
}
extend google.protobuf.MessageOptions {
  KeySchema key_schema       = 54599;
}

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// Misc message options
// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

// Can be used as the history entry
message StateActivity {
  string tx_id   = 1 [(buf.validate.field).string.min_len = 1];
  string msp_id  = 2 [(buf.validate.field).string.min_len = 1];
  string user_id = 3 [(buf.validate.field).string.min_len = 1];
  google.protobuf.Timestamp timestamp = 4
      [(buf.validate.field).required = true];
  string note = 5;
}

message HistoryEntry {
  string tx_id   = 1 [(buf.validate.field).string.min_len = 1];
  bool is_delete = 2;
  bool is_hidden = 3;
  google.protobuf.Timestamp timestamp = 4
      [(buf.validate.field).required = true];
  string note               = 5;
  google.protobuf.Any value = 6;
}

message History {
  repeated HistoryEntry entries = 1;
  HiddenTxList hidden_txs       = 2;
}

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

// ═════════════════════════════════════════════
// Access Control
// ═════════════════════════════════════════════

message Operation {
  Action action                   = 1;
  string collection_id            = 2;
  string namespace                = 3;
  google.protobuf.FieldMask paths = 4;
}

// Action - The action to be performed during the operation
//
// # Action Groups
//   - UNSPECIFIED: null or not set
//   - REGISTER:    Used to register a new user or collection (always allowed)
//   - COLLECTION:  Used to manage collections permissions
//   - MEMBERSHIP:  Used to manage membership of a collection
//   - OBJECT:      Used to manage objects in a collection
enum Action {
  ACTION_UNSPECIFIED                = 0;
  ACTION_REGISTER_USER              = 1;  // Used to register
  ACTION_REGISTER_COLLECTION        = 2;  // Used to register
  // ACTION_MODIFY_DEFAULT_PERMISSIONS = 3;
  // // Used to modify the default permissions of a collection

  ACTION_OBJECT_VIEW            = 10;
  ACTION_OBJECT_CREATE          = 11;
  ACTION_OBJECT_UPDATE          = 12;
  ACTION_OBJECT_DELETE          = 13;
  ACTION_OBJECT_SUGGEST_VIEW    = 14;
  ACTION_OBJECT_SUGGEST_CREATE  = 15;
  ACTION_OBJECT_SUGGEST_DELETE  = 16;
  ACTION_OBJECT_SUGGEST_APPROVE = 17;
  ACTION_OBJECT_VIEW_HISTORY    = 18;
  ACTION_OBJECT_VIEW_HIDDEN_TXS = 19;
  ACTION_OBJECT_HIDE_TX         = 20;
}

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

// ═════════════════════════════════════════════
// Access Control
// ═════════════════════════════════════════════

message PathPolicy {
  string path             = 1 [(buf.validate.field).required = true];
  repeated Action actions = 2 [(buf.validate.field).required = true];
}

message ObjectPolicy {
  string object_type           = 1 [(buf.validate.field).required = true];
  string object_namespace      = 2;
  repeated PathPolicy policies = 3;
}

// Access Control Entry for use in Radix Tree
message ACEntry {
  repeated ObjectPolicy object = 1 [(buf.validate.field).required = true];
  google.protobuf.FieldMask view_mask = 2
      [(buf.validate.field).required = true];
}

// Access Control Entry for use in Hash Tree
message ACEntryTree {
  ObjectPolicy root                 = 1 [(buf.validate.field).required = true];
  bool is_leaf                      = 3;
  map<string, ACEntryTree> children = 2;
}

// Auth Types
// ──────────────────────────────────────────────────
// message Attribute {
//   string msp_id = 1 [(buf.validate.field).string.min_len = 1];
//   string oid    = 2 [(buf.validate.field).string.min_len = 1];
//   string value  = 3 [(buf.validate.field).string.min_len = 1];
// }

// message Role {
//   string role_id = 1 [(buf.validate.field).string.min_len = 1];
//   string name    = 2 [(buf.validate.field).string.min_len = 1];
//   string description = 3 [(buf.validate.field).string.min_len = 1];
//   repeated Attribute attributes = 4;
//   ACEntry default               = 5 [(buf.validate.field).required = true];
// }

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

// ═════════════════════════════════════════════════════════════════════════════
// Collection Object Wrapper Types
// ═════════════════════════════════════════════════════════════════════════════

message Object {
  ObjectKey key             = 1;
  google.protobuf.Any value = 2;
}

message SubObject {
  SubObjectKey key          = 1;
  google.protobuf.Any value = 2;
}

// Lists
// ─────────────────────────────────────────────────────────────────────────────────
// message ObjectList {
//   option (key_schema).object_domain = OBJECT_DOMAIN_PRIMARY_OBJECT;
//   repeated Object objects = 1;
// }
// // message SubObjectList {
// //   option (key_schema).object_domain = OBJECT_DOMAIN_SUB_OBJECT;
// //   repeated SubObject objects = 1;
// // }
// message ReferenceList {
//   option (key_schema).object_domain = OBJECT_DOMAIN_REFERENCE;
//   repeated Reference objects = 1;
// }
// message CombinedList {
//   option (key_schema).object_domain = OBJECT_DOMAIN_PRIMARY_OBJECT;
//   ObjectList objects      = 1;
//   SubObjectList sub_objects = 2;
//   ReferenceList references = 3;
// }

// Keys
// ─────────────────────────────────────────────────────────────────────────────────
// enum KeyParts {
//   KEY_PART_UNSPECIFIED = 0;
//   KEY_PART_COLLECTION  = 1;
//   KEY_PART_OBJECT_TYPE = 2;
//   KEY_PART_OBJECT_ID   = 3;
//   KEY_PART_SUB_OBJECT_TYPE = 4;
//   KEY_PART_SUB_OBJECT_ID   = 5;
// }
// Key := {OBJECT_TYPE}{COLLECTION_ID}||{...OBJECT_ID}
message ObjectKey {
  string collection_id   = 1;
  string object_type     = 2;
  repeated string object_id_parts = 3;
}

// SubKeys {SUB_OBJECT_TYPE}{COLLECTION_ID}{OBJECT_TYPE}{...OBJECT_ID}{SUB_OBJECT_ID}
//    Example := {auth.Suggestion}  {COLLECTION_ID}{OBJECT_TYPE}  {...OBJECT_ID}{SUGGESTION_ID}
//    Example := {auth.HiddenTxList}{COLLECTION_ID}{OBJECT_TYPE} {...OBJECT_ID}
message SubObjectKey {
  string collection_id   = 1;
  string sub_object_type = 2;
  string object_type     = 3;

  // The key is the fields of the object that make up the primary key
  // The value is the value of the field
  repeated string object_id_parts = 4;
  string sub_object_id            = 5;
}

// Reference Keys {REFERENCE_TYPE}{COLLECTION_ID}[{OBJECT1_TYPE}{...OBJECT1_ID}][{OBJECT2_TYPE}{...OBJECT2_ID}]
message Reference {
  option (key_schema).object_domain = OBJECT_DOMAIN_REFERENCE;

  string collection_id  = 1;
  string reference_type = 2;
  ObjectKey key_1       = 3;
  ObjectKey key_2       = 4;
}

// ═════════════════════════════════════════════════════════════════════════════════
// Global Objects
// ═════════════════════════════════════════════════════════════════════════════════

// Collection
// ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
// Note that the types of objects are stored in the default ACEntry
//
// key := {COLLECTION}{COLLECTION_ID}
message Collection {
  option (key_schema).object_domain   = OBJECT_GLOBAL_OBJECT;
  option (key_schema).keys = {
    paths: [ "collection_id" ]
  };

  // The key for the ledger

  string collection_id         = 1 [(buf.validate.field).string.min_len = 1];

  string name                  = 2 [(buf.validate.field).string.min_len = 1];
  string description           = 3 [(buf.validate.field).string.min_len = 1];
  repeated string object_types = 4;
  ACEntry default              = 5 [(buf.validate.field).required = true];
}

// User
// ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
//
// key := {USER}{USER_ID.msp_id}{USER_ID.id}
//
message User {
  option (key_schema).object_domain                  = OBJECT_GLOBAL_OBJECT;
  option (key_schema).keys = {
    paths: [ "msp_id", "user_id" ]
  };

  string collection_id = 1 [(buf.validate.field).string.const = "global"];
  string msp_id        = 2 [(buf.validate.field).string.min_len = 1];
  string user_id       = 3 [(buf.validate.field).string.min_len = 1];
  string name          = 4;
}

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

// ═════════════════════════════════════════════════════════════════════════════════
// Sub Object Types
// ═════════════════════════════════════════════════════════════════════════════════



// Key should be
// {COLLECTION_ID}{auth.Suggestion}{OBJECT_TYPE}{...OBJECT_ID}{SUGGESTION_ID}
message Suggestion {
  option (key_schema).object_domain   = OBJECT_DOMAIN_SUB_OBJECT;

  option (key_schema).keys = {
    paths: ["suggestion_id" ]
  };

  ObjectKey primary_key = 1;
  string suggestion_id = 2;
  google.protobuf.FieldMask paths = 5;
  google.protobuf.Any value       = 6;
}

message HiddenTx {
  string tx_id   = 1 [(buf.validate.field).string.min_len = 1];
  string msp_id  = 2;
  string user_id = 3;
  google.protobuf.Timestamp timestamp = 4
      [(buf.validate.field).required = true];
  string note = 5;
}

// Key should be {COLLECTION_ID}{auth.HiddenTxList}{OBJECT_TYPE}{...OBJECT_ID}
message HiddenTxList {
  option (key_schema).object_domain = OBJECT_DOMAIN_SUB_OBJECT;

  ObjectKey primary_key = 1; // The key that is used to store the object
  repeated HiddenTx txs = 4; // The list of hidden txs by tx_id
}

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

enum TxError {
  UNSPECIFIED        = 0;
  REQUEST_INVALID    = 1;
  RUNTIME            = 2;
  RUNTIME_BAD_OPS    = 3;
  KEY_NOT_FOUND      = 4;
  KEY_ALREADY_EXISTS = 5;

  /* Collection Errors */
  COLLECTION_INVALID_ID          = 11;
  COLLECTION_UNREGISTERED        = 12;
  COLLECTION_ALREADY_REGISTERED  = 13;
  COLLECTION_INVALID             = 14;
  COLLECTION_INVALID_OBJECT_TYPE = 15;
  COLLECTION_INVALID_ROLE_ID     = 16;

  // User Errors

  // The user does not have permission to perform the operation
  USER_INVALID_ID            = 20;
  USER_UNREGISTERED          = 21;
  USER_ALREADY_REGISTERED    = 22;
  USER_INVALID               = 23;
  USER_NO_ROLE               = 24;
  USER_DELETED_ROLE          = 25;
  USER_PERMISSION_DENIED     = 26;
  OBJECT_INVALID_ID          = 31;
  OBJECT_UNREGISTERED        = 32;
  OBJECT_ALREADY_REGISTERED  = 33;
  OBJECT_INVALID             = 34;
  INVALID_OBJECT_FIELD_PATH  = 35;
  INVALID_OBJECT_FIELD_VALUE = 36;
}
