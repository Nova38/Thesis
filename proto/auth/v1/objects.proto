syntax = "proto3";

package auth;

import "auth/v1/auth.proto";
import "buf/validate/validate.proto";
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
/* Keys
    ─────────────────────────────────────────────────────────────────────────────────────
   Item Keys
     When converted to its string form it will be:
     - Key := {ITEM_TYPE}{COLLECTION_ID}{...ITEM_ID}

   Reference Keys
     Used to store references to items for case like a user having a role
     When converted to its string form it will be:
     {Ref}{REFERENCE_TYPE}{COLLECTION_ID}[{ITEM1_TYPE}{...ITEM1_ID}][{ITEM2_TYPE}{...ITEM2_ID}]


   SubKeys
     When converted to its string form it will be:
     {SUB_ITEM_TYPE}{COLLECTION_ID}{ITEM_TYPE}{...ITEM_ID}{SUB_ITEM_ID}
         Examples
           - Suggestion := {auth.Suggestion}  {COLLECTION_ID}{ITEM_TYPE}{...ITEM_ID}{SUGGESTION_ID}
           - HiddenTxList := {auth.HiddenTxList}{COLLECTION_ID}{ITEM_TYPE} {...ITEM_ID}
*/
message ItemKey {
  string collection_id = 1 [(buf.validate.field).string.min_len = 1];
  string item_type = 2 [(buf.validate.field).string.min_len = 1];
  auth.ItemKind item_kind = 3;

  repeated string item_key_parts = 4;
}

message Item {
  ItemKey key = 1;
  google.protobuf.Any value = 2 [(buf.validate.field).any = {
    not_in: [
        "type.googleapis.com/auth.Suggestion"
        "type.googleapis.com/auth.HiddenTxList"
        "type.googleapis.com/auth.Polices"
        "type.googleapis.com/auth.PathPolicy"
]
  }];
}

// Reference Keys
// {auth.Reference}{REFERENCE_TYPE}{COLLECTION_ID}[{ITEM1_TYPE}{...ITEM1_ID}][{ITEM2_TYPE}{...ITEM2_ID}]
message ReferenceKey {
  option (key_schema).item_kind = ITEM_KIND_REFERENCE;

  //  string reference_type = 2;
  ItemKey key1 = 1;
  ItemKey key2 = 2;
}

// ═════════════════════════════════════════════════════════════════════════════════
// Collection Items
// ═════════════════════════════════════════════════════════════════════════════════

// Collection
// ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
// Note that the types of items are stored in the default ACLEntry
//
// key := {COLLECTION}{COLLECTION_ID}
message Collection {
  option (key_schema).item_kind = ITEM_KIND_PRIMARY_ITEM;
  option (key_schema).properties = {
    paths: ["collection_id"]
  };

  // The key for the ledger
  string collection_id = 1 [(buf.validate.field).string.min_len = 1];
  string name = 2 [(buf.validate.field).string.min_len = 1];
  AuthType auth_type = 3;

  repeated string item_types = 4 [(buf.validate.field).repeated = {
    unique: true,
    min_items: 1
  }];

  Polices default = 5 [(buf.validate.field).required = true];
}







// ═════════════════════════════════════════════════════════════════════════════════
// Sub Item Types
// ═════════════════════════════════════════════════════════════════════════════════

// Key should be
// {auth.Suggestion}{COLLECTION_ID}{ITEM_TYPE}{...ITEM_ID}{SUGGESTION_ID}
message Suggestion {
  option (key_schema).item_kind = ITEM_KIND_SUB_ITEM;
  option (key_schema).properties = {
    paths: ["suggestion_id"]
  };

  ItemKey primary_key = 1 [(buf.validate.field).required = true];
  string suggestion_id = 2 [(buf.validate.field).string.min_len = 1];
  google.protobuf.FieldMask paths = 5 [(buf.validate.field).required = true];
  google.protobuf.Any value = 6 [(buf.validate.field).required = true];
}

message HiddenTx {
  string tx_id = 1 [(buf.validate.field).string.min_len = 1];
  string msp_id = 2 [(buf.validate.field).string.min_len = 1];
  string user_id = 3 [(buf.validate.field).string.min_len = 1];
  google.protobuf.Timestamp timestamp = 4 [(buf.validate.field).required = true];
  string note = 5;
}

// Key should be {COLLECTION_ID}{auth.HiddenTxList}{ITEM_TYPE}{...ITEM_ID}
message HiddenTxList {
  option (key_schema).item_kind = ITEM_KIND_SUB_ITEM;
  option (key_schema).properties = {
    paths: []
  };
  ItemKey primary_key = 1 [(buf.validate.field).required = true]; // The key that is used to store the item
  repeated HiddenTx txs = 4; // The list of hidden txs by tx_id
}

// Used to return the values of the items that are referenced
message Reference {
  ReferenceKey reference = 1;
  Item item1 = 2 [(buf.validate.field).required = true];
  Item item2 = 3 [(buf.validate.field).required = true];
}

// ═════════════════════════════════════════════════════════════════════════════
// Collection Item Wrapper Types
// ═════════════════════════════════════════════════════════════════════════════

message FullItem {
  Item item = 1 [(buf.validate.field).required = true];
  History history = 2 [(buf.validate.field).required = true];
  repeated Suggestion suggestions = 3;
  repeated Reference references = 4;
}

message HistoryEntry {
  // The transaction id that caused the change
  string tx_id = 1 [(buf.validate.field).string.min_len = 1];
  // Whether the item was deleted
  bool is_delete = 2;
  // Whether the transaction was hidden
  bool is_hidden = 3;
  // The timestamp of the change
  google.protobuf.Timestamp timestamp = 4 [(buf.validate.field).required = true];
  // A note about the change
  string note = 5;
  // The value of the item
  google.protobuf.Any value = 6;
}

message History {
  repeated HistoryEntry entries = 1;
  HiddenTxList hidden_txs = 2;
}

