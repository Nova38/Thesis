syntax = "proto3";

package ccbio.schema.v2;

import "buf/validate/validate.proto";
// import "google/protobuf/timestamp.proto";

// import "key/v1/key.proto";
import "chaincode/ccbio/schema/v2/state.proto";

import "google/protobuf/field_mask.proto";

import "hlf/utils.proto";
import "auth/v1/auth.proto";
import "auth/v1/utils.proto";

service SpecimenService{
    //  // Specimen functions

    // Evaluated

    rpc SpecimenGet(SpecimenGetRequest) returns (SpecimenGetResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
        action: ACTION_VIEW;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SpecimenGetList(SpecimenGetListRequest) returns (SpecimenGetListResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
        action: ACTION_VIEW;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SpecimenGetByCollection(SpecimenGetByCollectionRequest) returns (SpecimenGetByCollectionResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
        action: ACTION_VIEW;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SpecimenGetHistory(SpecimenGetHistoryRequest) returns (SpecimenGetHistoryResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
          action: ACTION_VIEW;
          domain: DOMAIN_OBJECT;
      };
    };


    rpc SpecimenCreate(SpecimenCreateRequest) returns (SpecimenCreateResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_CREATE;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SpecimenUpdate(SpecimenUpdateRequest) returns (SpecimenUpdateResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_EDIT;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SpecimenDelete(SpecimenDeleteRequest) returns (SpecimenDeleteResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_DELETE;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SpecimenHideTx(SpecimenHideTxRequest) returns (SpecimenHideTxResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_HIDDEN_TX;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SpecimenUnHideTx(SpecimenUnHideTxRequest) returns (SpecimenUnHideTxResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_HIDDEN_TX;
        domain: DOMAIN_OBJECT;
      };
    };


    // Suggest

    rpc GetSuggestedUpdate(GetSuggestedUpdateRequest) returns (GetSuggestedUpdateResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
        action: ACTION_VIEW_SUGGEST;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc GetSuggestedUpdateBySpecimen(GetSuggestedUpdateBySpecimenRequest) returns (GetSuggestedUpdateBySpecimenResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
        action: ACTION_VIEW_SUGGEST;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc GetSuggestedUpdateByCollection(GetSuggestedUpdateByCollectionRequest) returns (GetSuggestedUpdateByCollectionResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
        action: ACTION_VIEW_SUGGEST;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc GetSuggestedUpdateList(GetSuggestedUpdateListRequest) returns (GetSuggestedUpdateListResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_QUERY;
      option (auth.operation) = {
        action: ACTION_VIEW_SUGGEST;
        domain: DOMAIN_OBJECT;
      };
    };

    rpc SuggestedUpdateCreate(SuggestedUpdateCreateRequest) returns (SuggestedUpdateCreateResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_SUGGEST_EDIT;
        domain: DOMAIN_OBJECT;
      };
    };
    rpc SuggestedUpdateApprove(SuggestedUpdateApproveRequest) returns (SuggestedUpdateApproveResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_SUGGEST_APPROVE;
        domain: DOMAIN_OBJECT;
      };
    };
    rpc SuggestedUpdateReject(SuggestedUpdateRejectRequest) returns (SuggestedUpdateRejectResponse){
      option (hlf.transaction_type) = TRANSACTION_TYPE_INVOKE;
      option (auth.operation) = {
        action: ACTION_SUGGEST_REJECT;
        domain: DOMAIN_OBJECT;
      };
    };
}






// Specimen

  // Evaluate
    // SpecimenGet
      message SpecimenGetRequest {
        Specimen.Id id = 1 [(buf.validate.field).required = true];
      }
      message SpecimenGetResponse {
        Specimen specimen = 1 [(buf.validate.field).required = true];
      }

    // SpecimenGetList
      message SpecimenGetListRequest {
        string bookmark = 1;
        int32 page_size = 2;
      }
      message SpecimenGetListResponse {
        string bookmark = 1;
        repeated Specimen specimens = 2;
      }

    // SpecimenGetByCollection
      message SpecimenGetByCollectionRequest {
        auth.Collection.Id id = 1 [(buf.validate.field).required = true];
      }
      message SpecimenGetByCollectionResponse {
        repeated Specimen specimens = 1;
      }

    // SpecimenGetHistory
      message SpecimenGetHistoryRequest {
        Specimen.Id id = 1 [(buf.validate.field).required = true];
        bool include_hidden = 2 [(buf.validate.field).required = true];
      }
      message SpecimenGetHistoryResponse {
        auth.History history = 1;
      }


  // Submit

    // SpecimenCreate
      message SpecimenCreateRequest {
            Specimen specimen = 1 [(buf.validate.field).required = true];
      }
      message SpecimenCreateResponse {
          Specimen specimen = 1 [(buf.validate.field).required = true];
      }

    // SpecimenUpdate
      message SpecimenUpdateRequest {
          Specimen specimen = 1 [(buf.validate.field).required = true];
          google.protobuf.FieldMask update_mask = 2;
      }
      message SpecimenUpdateResponse {
          Specimen specimen = 1 [(buf.validate.field).required = true];
          google.protobuf.FieldMask update_mask = 2;
      }


    // SpecimenDelete
      message SpecimenDeleteRequest {
        Specimen.Id id = 1 [(buf.validate.field).required = true];
      }
      message SpecimenDeleteResponse {
          Specimen specimen = 1 [(buf.validate.field).required = true];
      }

    // SpecimenHideTx
      message SpecimenHideTxRequest {
          Specimen.Id id = 1 [(buf.validate.field).required = true];
          auth.HiddenTx tx = 2 [(buf.validate.field).required = true];
      }
      message SpecimenHideTxResponse {
          Specimen specimen = 1 [(buf.validate.field).required = true];
      }

    // SpecimenUnHideTx
      message SpecimenUnHideTxRequest {
          Specimen.Id id = 1 [(buf.validate.field).required = true];
          auth.HiddenTx tx = 2 [(buf.validate.field).required = true];
      }
      message SpecimenUnHideTxResponse {
          Specimen specimen = 1 [(buf.validate.field).required = true];
      }










// SuggestedUpdate

  // Evaluate

    // GetSuggestedUpdate
      message GetSuggestedUpdateRequest {
        SuggestedUpdate.Id id = 1 [(buf.validate.field).required = true];
      }
      message GetSuggestedUpdateResponse {
        SuggestedUpdate suggested_update = 1;
      }


    // GetSuggestedUpdateBySpecimen
      message GetSuggestedUpdateBySpecimenRequest {
        Specimen.Id id = 1 [(buf.validate.field).required = true];
        string bookmark = 2;
        int32 page_size = 3;

      }
      message GetSuggestedUpdateBySpecimenResponse {
        string bookmark = 1;
        repeated SuggestedUpdate suggested_updates = 2;
      }

    // GetSuggestedUpdateByCollection
      message GetSuggestedUpdateByCollectionRequest {
        auth.Collection.Id id = 1 [(buf.validate.field).required = true];
        string bookmark = 2;
        int32 page_size = 3;

      }
      message GetSuggestedUpdateByCollectionResponse {
        string bookmark = 1;
        repeated SuggestedUpdate suggested_updates = 2;
      }

    // GetSuggestedUpdateListResponse
      message GetSuggestedUpdateListRequest {
        string bookmark = 1;
        int32 page_size = 2;
      }
      message GetSuggestedUpdateListResponse {
        string bookmark = 1;
        repeated SuggestedUpdate suggested_updates = 2;
      }




  // Submit

    // SuggestedUpdateCreate
      message SuggestedUpdateCreateRequest {
          SuggestedUpdate suggested_update = 1 [(buf.validate.field).required = true];
      }
      message SuggestedUpdateCreateResponse {
          SuggestedUpdate suggested_update = 1 [(buf.validate.field).required = true];
      }

    // SpecimenUpdateApprove
      message SuggestedUpdateApproveRequest {
          SuggestedUpdate.Id id = 1 [(buf.validate.field).required = true];
          string comment = 2 [(buf.validate.field).required = true];
      }
      message SuggestedUpdateApproveResponse {
          SuggestedUpdate suggested_update = 1 [(buf.validate.field).required = true];
          Specimen specimen = 2 [(buf.validate.field).required = true];
      }


    // SpecimenUpdateReject
      message SuggestedUpdateRejectRequest {
          SuggestedUpdate.Id id = 1 [(buf.validate.field).required = true];
          string comment = 2 [(buf.validate.field).required = true];
      }
      message SuggestedUpdateRejectResponse {
        SuggestedUpdate suggested_update = 1 [(buf.validate.field).required = true];

      }
