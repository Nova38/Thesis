syntax = "proto3";

package auth.common;

import "auth/v1/auth.proto";
import "auth/v1/objects.proto";
import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";

// import "google/protobuf/any.proto";

service GenericService {
  // ══════════════════════════════════ Helper ═════════════════════════════════════
  // ────────────────────────────────── Query ──────────────────────────────────────
  // rpc GetAllTypes(google.protobuf.Empty) returns (GetAllTypesResponse) {
  //   option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
  //   option (auth.operation) = {action: ACTION_UTILITY};
  // }
  rpc GetCurrentUser(google.protobuf.Empty) returns (GetCurrentUserResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  // ──────────────────────────────── Invoke ───────────────────────────────────────
  rpc Bootstrap(BootstrapRequest) returns (BootstrapResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_UTILITY};
  }

  rpc AuthorizeOperation(AuthorizeOperationRequest) returns (AuthorizeOperationResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_UTILITY};
  }



  // rpc CreateCollection(CreateCollectionRequest) returns (CreateCollectionResponse) {
  //   option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
  //   option (auth.operation) = {action: ACTION_CREATE, item_type: "Collection"};
  // }
  // ══════════════════════════════════ Item ═════════════════════════════════════

  // ────────────────────────────────── Query ──────────────────────────────────────

  rpc Get(GetRequest) returns (GetResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  rpc GetFull(GetFullRequest) returns (GetFullResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  rpc List(ListRequest) returns (ListResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  rpc ListByCollection(ListByCollectionRequest) returns (ListByCollectionResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  rpc ListByAttrs(ListByAttrsRequest) returns (ListByAttrsResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }


  // ──────────────────────────────── Invoke ───────────────────────────────────────

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_CREATE};
  }

  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_UPDATE};
  }

  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_DELETE};
  }

  // ════════════════════════════════ History ══════════════════════════════════════
  // ──────────────────────────────── Query ────────────────────────────────────────

  rpc GetHistory(GetHistoryRequest) returns (GetHistoryResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW_HISTORY};
  }

  rpc GetHiddenTx(GetHiddenTxRequest) returns (GetHiddenTxResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW_HIDDEN_TXS};
  }

  // ──────────────────────────────── Invoke ───────────────────────────────────────

  rpc HideTx(HideTxRequest) returns (HideTxResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_HIDE_TX};
  }

  rpc UnHideTx(UnHideTxRequest) returns (UnHideTxResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_UNHIDE_TX};
  }




  // ════════════════════════════════ Suggestions ══════════════════════════════════
  // ──────────────────────────────── Query ────────────────────────────────────────


  rpc GetSuggestion(GetSuggestionRequest) returns (GetSuggestionResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_SUGGEST_VIEW};
  }

  // rpc SuggestionList(SuggestionListRequest) returns (SuggestionListResponse) {
  //   option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
  //   option (auth.operation) = {action: ACTION_SUGGEST_VIEW};
  // }

  rpc SuggestionListByCollection(SuggestionListByCollectionRequest) returns (SuggestionListByCollectionResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_SUGGEST_VIEW};
  }

  rpc SuggestionByPartialKey(SuggestionByPartialKeyRequest) returns (SuggestionByPartialKeyResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_SUGGEST_VIEW};
  }

  // ──────────────────────────────── Invoke ───────────────────────────────────────
  rpc SuggestionCreate(SuggestionCreateRequest) returns (SuggestionCreateResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_SUGGEST_CREATE};
  }

  rpc SuggestionDelete(SuggestionDeleteRequest) returns (SuggestionDeleteResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_SUGGEST_DELETE};
  }

  rpc SuggestionApprove(SuggestionApproveRequest) returns (SuggestionApproveResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_SUGGEST_CREATE};
  }
}


  // ══════════════════════════════════ Helper ═════════════════════════════════════
  // ────────────────────────────────── Query ──────────────────────────────────────

  message GetCurrentUserResponse {
    auth.User user = 1;
    bool registered = 2;
  }
  message GetCurrentFullUserResponse {
    auth.User user = 1;
    bool registered = 2;

    repeated auth.UserCollectionRoles user_collection_roles = 3;
    repeated auth.UserDirectMembership user_memberships = 4;
  }

  message AuthorizeOperationRequest {
    auth.Operation operation = 1;
  }


  message AuthorizeOperationResponse {
    bool authorized = 1;
  }


  // ──────────────────────────────── Invoke ───────────────────────────────────────




  message BootstrapRequest {
    repeated auth.Collection collections = 1;
  }

  message BootstrapResponse {
    bool success = 1;
  }

  // ──────────────────────────────── Invoke ───────────────────────────────────────

  message CreateCollectionRequest{
    auth.Collection collection = 1;
  }
  message CreateCollectionResponse{
    auth.Collection collection = 1;
  }







// ══════════════════════════════ Generic Item ════════════════════════════════════
// ────────────────────────────── Query ───────────────────────────────────────-

// Get
message GetRequest {
//  auth.Item item = 3;
  auth.ItemKey key = 1;

}

message GetResponse {
  auth.Item item = 1;
}

message GetFullRequest {
  auth.ItemKey key = 1;
  bool show_hidden = 2;
}
message GetFullResponse {
  auth.FullItem full_item = 1;
}



// List of a type
message ListRequest {
  string bookmark = 1;
  uint32 limit = 2;
//  auth.Item item = 3;
   auth.ItemKey key = 3;

}
message ListResponse {
  string bookmark = 1;
  repeated auth.Item items = 2;
}

message ListByCollectionRequest {
  string bookmark = 1;
  uint32 limit = 2;
//  auth.Item item = 3;

  auth.ItemKey key = 3;
}

message ListByCollectionResponse {
  string bookmark = 1;
  repeated auth.Item items = 2;
}

message ListByAttrsRequest {
  string bookmark = 1;
  uint32 limit = 2;
  auth.ItemKey key = 3;
  int32 num_attrs = 4;
}
message ListByAttrsResponse {
  string bookmark = 1;
  repeated auth.Item items = 2;
}



// ──────────────────────────────── Invoke ───────────────────────────────────────
// Create
message CreateRequest {
  auth.Item item = 2;
}
message CreateResponse {
  auth.Item item = 2;
}

message UpdateRequest {
  auth.Item item = 2;
  google.protobuf.FieldMask update_mask = 3;
}
message UpdateResponse {
  auth.Item item = 2;
}

message DeleteRequest {
  auth.ItemKey key = 3;

  string reason = 4;
}
message DeleteResponse {
  auth.Item item = 2;
}

// ══════════════════════════════ History ══════════════════════════════════════════
// ──────────────────────────────── Query ──────────────────────────────────────────

// GetHistory
message GetHistoryRequest {

  //  auth.Item item = 1;

  auth.ItemKey key = 1;
  bool include_hidden = 2;
  string bookmark = 3;

}

message GetHistoryResponse {
  // repeated auth. s = 1;
  auth.ItemKey key = 1;
  auth.History history = 2;
}

// GetHiddenTx
message GetHiddenTxRequest {
  auth.Item item = 1;
}
message GetHiddenTxResponse {
  string collection_id = 1 [(buf.validate.field).string.min_len = 1];
  repeated auth.HiddenTx hidden_txs = 2;
}

// ──────────────────────────────── Invoke ─────────────────────────────────────────

message HideTxRequest {
//  auth.Item item = 1;
  auth.ItemKey key = 1;
  auth.HiddenTx hidden_tx = 2;
}
message HideTxResponse {
  auth.ItemKey key = 1;
  auth.HiddenTxList hidden_txs = 2;
}

message UnHideTxRequest {
//  auth.Item item = 1;
  auth.ItemKey key = 3;
  string tx_id = 2 [(buf.validate.field).string.min_len = 1];
}
message UnHideTxResponse {
  auth.ItemKey key = 1;
  auth.HiddenTxList hidden_txs = 2;
}


// ════════════════════════════════ Suggestions ════════════════════════════════════
// ──────────────────────────────── Query ──────────────────────────────────────────

message GetSuggestionRequest {
  auth.ItemKey item_key = 1;
  string suggestion_id = 2 [(buf.validate.field).string.min_len = 1];
}
message GetSuggestionResponse {
  auth.Suggestion suggestion = 1;
}

message SuggestionListRequest {
  string bookmark = 1;
  uint32 limit = 2;
  auth.ItemKey key = 3;
  // auth.Item item = 3;
}
message SuggestionListResponse {
  string bookmark = 1;
  repeated auth.Suggestion suggestions = 2;
}

message SuggestionListByCollectionRequest {
  string bookmark = 1;
  uint32 limit = 2;
  string collection_id = 3 [(buf.validate.field).string.min_len = 1];
}
message SuggestionListByCollectionResponse {
  string bookmark = 1;
  repeated auth.Suggestion suggestions = 2;
}

message SuggestionListByItemRequest {
  auth.ItemKey item_key = 1;
}
message SuggestionListByItemResponse {
  repeated auth.Suggestion suggestions = 1;
}

message SuggestionByPartialKeyRequest {
  string bookmark = 1;
  uint32 limit = 2;
  int32 num_attrs = 3;

  auth.ItemKey item_key = 4;
  string suggestion_id = 5;
}
message SuggestionByPartialKeyResponse {
  string bookmark = 1;
  repeated auth.Suggestion suggestions = 2;
}

// ───────────────────────────────── Invoke ────────────────────────────────────────
// GetSuggestions

message SuggestionCreateRequest {
  auth.Suggestion suggestion = 1;
}
message SuggestionCreateResponse {
  auth.Suggestion suggestion = 1;
}

message SuggestionDeleteRequest {
  auth.ItemKey item_key = 1;
  string suggestion_id = 2 [(buf.validate.field).string.min_len = 1];
  string reason = 3;
}
message SuggestionDeleteResponse {
  auth.Suggestion suggestion = 4;
}

message SuggestionApproveRequest {
  auth.ItemKey item_key = 1;
  string suggestion_id = 2 [(buf.validate.field).string.min_len = 1];
  string reason = 3;
}

message SuggestionApproveResponse {
  auth.Suggestion suggestion = 1;
  auth.Item item = 2;
}
