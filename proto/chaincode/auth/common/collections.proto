syntax = "proto3";

package auth.common;

import "auth/v1/auth.proto";
import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

// ==================== Collection ====================


service CollectionService {
  // buf:lint:ignore RPC_NO_DELETE

  // -------------------- Query ---------------------

  rpc CollectionGet(CollectionGetRequest) returns (CollectionGetResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_OBJECT_VIEW};
  }

  rpc CollectionGetList(google.protobuf.Empty) returns (CollectionGetListResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_OBJECT_VIEW};
  }

  rpc CollectionGetHistory(CollectionGetHistoryRequest) returns (CollectionGetHistoryResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_OBJECT_VIEW_HISTORY};
  }

  // -------------------- Invoke ------------------------

  rpc CollectionCreate(CollectionCreateRequest) returns (CollectionCreateResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_REGISTER_COLLECTION};
  }

  rpc CollectionUpdate(CollectionUpdateRequest) returns (CollectionUpdateResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_OBJECT_UPDATE};
  }




  rpc CollectionHideTx(CollectionHideTxRequest) returns (CollectionHideTxResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_OBJECT_HIDE_TX};
  }



}


// ==================== Collection ====================
// -------------------- Query -------------------------

  message CollectionGetListRequest {
    string bookmark = 1;
    uint32 limit = 2;
  }
  message CollectionGetListResponse {
    repeated auth.Collection collections = 1;
    string bookmark = 2;
  }

  // CollectionGet
  message CollectionGetRequest {
    string collection_id = 1 [(buf.validate.field).string.min_len = 1];
  }
  message CollectionGetResponse {
    auth.Collection collection = 1;
  }

  // CollectionGetHistory
  message CollectionGetHistoryRequest {
    string collection_id = 1 [(buf.validate.field).string.min_len = 1];
    bool show_hidden = 2;
  }
  message CollectionGetHistoryResponse {
    // repeated auth.Collection collections = 1;
    auth.Collection collection = 1;
    auth.History history = 2;
  }
// -------------------- Invoke ------------------------
// CollectionCreate
  message CollectionCreateRequest {
    auth.Collection collection = 1;
  }
  message CollectionCreateResponse {
    auth.Collection collection = 1;
  }

  message CollectionUpdateRequest {
    auth.Collection collection = 1;

  }
  message CollectionUpdateResponse {
    auth.Collection collection = 1;
  }

  // message CollectionDeleteRequest {
  //   string collection_id = 1;
  // }
  // message CollectionDeleteResponse {
  //   string collection_id = 1;
  // }

  message CollectionHideTxRequest {
    string collection_id = 1 [(buf.validate.field).string.min_len = 1];
    auth.HiddenTx hidden_tx = 2;
  }
  message CollectionHideTxResponse {
    string collection_id = 1 [(buf.validate.field).string.min_len = 1];
  }
