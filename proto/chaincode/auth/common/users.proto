syntax = "proto3";

package auth.common;

import "auth/v1/auth.proto";
import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

// import "google/protobuf/field_mask.proto";



service UserService {

  // ══════════════════== User ═════════════════════=
  // ──────────────────-- Query ─────────────────────



  rpc UserGetCurrent(google.protobuf.Empty) returns (UserGetCurrentResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  rpc UserGet(UserGetRequest) returns (UserGetResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  rpc UserGetList(google.protobuf.Empty) returns (UserGetListResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW};
  }

  rpc UserGetHistory(UserGetHistoryRequest) returns (UserGetHistoryResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW_HISTORY};
  }

  rpc UserGetHiddenTx(UserGetHiddenTxRequest) returns (UserGetHiddenTxResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_QUERY;
    option (auth.operation) = {action: ACTION_VIEW_HIDDEN_TXS};
  }

  // ──────────────────-- Invoke ────────────────────────

  rpc UserCreate(UserCreateRequest) returns (UserCreateResponse) {
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {action: ACTION_CREATE};
  }

  rpc UserDelete(UserDeleteRequest) returns (UserDeleteResponse){
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {
      action: ACTION_DELETE,
    };
  };

  rpc UserUpdate(UserUpdateRequest) returns (UserUpdateResponse){
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {
      action: ACTION_UPDATE
    };
  };

  rpc UserHideTx(UserHideTxRequest) returns (UserHideTxResponse){
    option (auth.transaction_type) = TRANSACTION_TYPE_INVOKE;
    option (auth.operation) = {
      action: ACTION_HIDE_TX
    };
  };



}



// ══════════════════== User ═════════════════════=

// ──────────────────-- Query ─────────────────────
  message UserGetCurrentResponse {
    auth.User user = 1;
  }

  message UserGetCurrentIdResponse {
    string msp_id = 1;
    string user_id = 2;
  }

  message UserGetRequest {
    string msp_id = 1;
    string user_id = 2;
    option (buf.validate.message).cel = {
      id: "UserGetRequest.UserId",
      message: "The User id must have both id and msp_id defined",
      expression: "has(id.msp_id) && has(id.id)"
    };
  }
  message UserGetResponse {
    auth.User user = 1;
  }

  message UserGetListRequest {
    string bookmark = 1;
    uint32 limit = 2;
  }
  message UserGetListResponse {
    repeated auth.User users = 1;
    string bookmark = 2;
  }

  // UserGetHistory
  message UserGetHistoryRequest {
    string msp_id = 1;
    string user_id = 2;
    bool show_hidden = 3;
  }
  message UserGetHistoryResponse {
    auth.User user = 1;
    auth.History history = 3;
  }

  // UserGetHiddenTx
  message UserGetHiddenTxRequest {
    string msp_id = 1;
    string user_id = 2;
  }
  message UserGetHiddenTxResponse {
    string msp_id = 1;
    string user_id = 2;
    auth.HiddenTxList hidden_txs = 3;
  }

// ──────────────────-- Invoke ─────────────────────

  // UserCreate
  message UserCreateRequest {
    string name = 1 [
      (buf.validate.field).string.min_len = 1,
      (buf.validate.field).string.max_len = 150
    ];
  }
  message UserCreateResponse {
    auth.User user = 1;
  }

  message UserDeleteRequest {
    string msp_id = 1;
    string user_id = 2;
    string reason = 3;
  }
  message UserDeleteResponse {
    auth.User user = 1;
  }

  message UserUpdateRequest {
    string msp_id = 1;
    string user_id = 2;
    string name = 3 [
      (buf.validate.field).string.min_len = 1,
      (buf.validate.field).string.max_len = 150
    ];
  }

  message UserUpdateResponse {
    auth.User user = 1;
  }


  message UserHideTxRequest {
    string msp_id = 1 [ (buf.validate.field).string.min_len = 1 ];
    string user_id = 2 [ (buf.validate.field).string.min_len = 1 ];
    auth.HiddenTx hidden_tx = 3;
  }
  message UserHideTxResponse {
    auth.User user = 1;
  }
