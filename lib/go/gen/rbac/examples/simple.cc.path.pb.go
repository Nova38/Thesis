// Code generated by protoc-gen-go-hlf. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: rbac/examples/simple.proto

package examples

func (m *SimpleStateObject_Id) DiffPath(other *SimpleStateObject_Id) (updated []string, all bool) {

	all = true
	// id: is a string
	if m.Id != other.Id {
		updated = append(updated, "id")
	} else {
		all = false
	}

	return updated, all
}

func (m *SimpleStateObject_List) DiffPath(other *SimpleStateObject_List) (updated []string, all bool) {

	all = true
	// ids: is a message
	// TODO: Handle lists

	return updated, all
}

func (m *SimpleStateObject) DiffPath(other *SimpleStateObject) (updated []string, all bool) {

	all = true
	// id: is a message
	if m.Id != nil || other.Id != nil {
		updated_Id, all_Id := m.Id.DiffPath(other.Id)
		if len(updated_Id) > 0 {
			if all_Id {
				updated = append(updated, "id")
			} else {
				for _, u := range updated_Id {
					updated = append(updated, "id."+u)
				}
			}
		} else {
			all = false
		}
	} else {
		all = false
	}
	// strings: is a string
	// TODO: Handle lists
	// int32: is a int32
	if m.Int32 != other.Int32 {
		updated = append(updated, "int32")
	} else {
		all = false
	}

	return updated, all
}
