// Code generated by protoc-gen-go-hlf. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: auth/v1/auth.proto

package v1

func (m *Reference) ItemType() string {
	return "auth.Reference"
}
func (m *Collection) ItemType() string {
	return "auth.Collection"
}
func (m *Collection) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetCollectionId())
	return attr
}

// Global Item
func (m *Collection) IsGlobal() bool {
	return true
}
func (m *Collection) ItemKey() *ItemKey {
	key := &ItemKey{
		CollectionId: "global",
		ItemType:     "auth.Collection",
		ItemIdParts:  m.KeyAttr(),
	}
	return key
}
func (m *User) ItemType() string {
	return "auth.User"
}
func (m *User) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetMspId())
	attr = append(attr, m.GetUserId())
	return attr
}

// Global Item
func (m *User) IsGlobal() bool {
	return true
}
func (m *User) ItemKey() *ItemKey {
	key := &ItemKey{
		CollectionId: "global",
		ItemType:     "auth.User",
		ItemIdParts:  m.KeyAttr(),
	}
	return key
}
func (m *Suggestion) ItemType() string {
	return "auth.Suggestion"
}
func (m *Suggestion) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetSuggestionId())
	return attr
}

// Domain Item
func (m *Suggestion) IsSecondary() bool {
	return true
}
func (m *Suggestion) ItemKey() *ItemKey {
	return m.GetPrimaryKey()
}
func (m *HiddenTxList) ItemType() string {
	return "auth.HiddenTxList"
}
func (m *Role) ItemType() string {
	return "auth.Role"
}
func (m *Role) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetRoleId())
	return attr
}

// Domain Item
func (m *Role) IsPrimary() bool {
	return true
}
func (m *Role) ItemKey() *ItemKey {
	key := &ItemKey{
		CollectionId: m.GetCollectionId(),
		ItemType:     "auth.Role",
		ItemIdParts:  m.KeyAttr(),
	}
	return key
}
func (m *Attribute) ItemType() string {
	return "auth.Attribute"
}
func (m *Membership) ItemType() string {
	return "auth.Membership"
}
func (m *Membership) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetMspId())
	attr = append(attr, m.GetUserId())
	return attr
}

// Domain Item
func (m *Membership) IsPrimary() bool {
	return true
}
func (m *Membership) ItemKey() *ItemKey {
	key := &ItemKey{
		CollectionId: m.GetCollectionId(),
		ItemType:     "auth.Membership",
		ItemIdParts:  m.KeyAttr(),
	}
	return key
}
