// Code generated by protoc-gen-go-hlf. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: chaincode/sample/v0/items.proto

package v0

import (
	v1 "github.com/nova38/thesis/lib/go/gen/auth/v1"
)

func (m *Person) ObjectType() string {
	return "sample.Person"
}
func (m *Person) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetName())
	return attr
}

// Domain Object
func (m *Person) IsPrimary() bool {
	return true
}
func (m *Person) ObjectKey() *v1.ObjectKey {
	key := &v1.ObjectKey{
		CollectionId:  m.GetCollectionId(),
		ObjectType:    "sample.Person",
		ObjectIdParts: m.KeyAttr(),
	}
	return key
}
func (m *Awards) ObjectType() string {
	return "sample.Awards"
}
func (m *Awards) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetAwardName())
	return attr
}

// Domain Object
func (m *Awards) IsPrimary() bool {
	return true
}
func (m *Awards) ObjectKey() *v1.ObjectKey {
	key := &v1.ObjectKey{
		CollectionId:  m.GetCollectionId(),
		ObjectType:    "sample.Awards",
		ObjectIdParts: m.KeyAttr(),
	}
	return key
}
func (m *Author) ObjectType() string {
	return "sample.Author"
}
func (m *Author) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetAuthorId())
	return attr
}

// Domain Object
func (m *Author) IsPrimary() bool {
	return true
}
func (m *Author) ObjectKey() *v1.ObjectKey {
	key := &v1.ObjectKey{
		CollectionId:  m.GetCollectionId(),
		ObjectType:    "sample.Author",
		ObjectIdParts: m.KeyAttr(),
	}
	return key
}
