// Code generated by protoc-gen-go-hlf. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: chaincode/sample/v0/items.proto

package v0

import (
	v1 "github.com/nova38/thesis/lib/go/gen/auth/v1"
)

func (m *Person) ItemType() string {
	return "sample.Person"
}
func (m *Person) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetName())
	return attr
}

// Domain Item
func (m *Person) IsPrimary() bool {
	return true
}
func (m *Person) ItemKey() *v1.ItemKey {
	key := &v1.ItemKey{
		CollectionId: m.GetCollectionId(),
		ItemType:     "sample.Person",
		ItemIdParts:  m.KeyAttr(),
	}
	return key
}
func (m *Awards) ItemType() string {
	return "sample.Awards"
}
func (m *Awards) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetAwardName())
	return attr
}

// Domain Item
func (m *Awards) IsPrimary() bool {
	return true
}
func (m *Awards) ItemKey() *v1.ItemKey {
	key := &v1.ItemKey{
		CollectionId: m.GetCollectionId(),
		ItemType:     "sample.Awards",
		ItemIdParts:  m.KeyAttr(),
	}
	return key
}
func (m *Author) ItemType() string {
	return "sample.Author"
}
func (m *Author) KeyAttr() []string {
	attr := []string{}
	attr = append(attr, m.GetAuthorId())
	return attr
}

// Domain Item
func (m *Author) IsPrimary() bool {
	return true
}
func (m *Author) ItemKey() *v1.ItemKey {
	key := &v1.ItemKey{
		CollectionId: m.GetCollectionId(),
		ItemType:     "sample.Author",
		ItemIdParts:  m.KeyAttr(),
	}
	return key
}
