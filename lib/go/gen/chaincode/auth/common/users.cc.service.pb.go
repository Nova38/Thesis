// Code generated by proto-gen-go-auth_pb. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: chaincode/auth/common/users.proto

package common

import (
	fmt "fmt"
	state "github.com/nova38/thesis/lib/go/fabric/auth/state"
	v1 "github.com/nova38/thesis/lib/go/gen/auth/v1"
)

// Service UserService
type UserServiceInterface[T state.GenericTxCtxInterface] interface {
	// UserGetCurrentId
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_VIEW
	//
	// req is empty
	UserGetCurrentId(ctx T) (res *UserGetCurrentIdResponse, err error)

	// UserGetCurrent
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_VIEW
	//
	// req is empty
	UserGetCurrent(ctx T) (res *UserGetCurrentResponse, err error)

	// UserGet
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_VIEW
	UserGet(ctx T, req *UserGetRequest) (res *UserGetResponse, err error)

	// UserGetList
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_VIEW
	//
	// req is empty
	UserGetList(ctx T) (res *UserGetListResponse, err error)

	// UserGetHistory
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_VIEW_HISTORY
	UserGetHistory(ctx T, req *UserGetHistoryRequest) (res *UserGetHistoryResponse, err error)

	// UserGetHiddenTx
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_VIEW_HIDDEN_TXS
	UserGetHiddenTx(ctx T, req *UserGetHiddenTxRequest) (res *UserGetHiddenTxResponse, err error)

	// UserCreate
	//
	// # Operation:
	//   - Domain: ACTION_REGISTER_USER
	UserCreate(ctx T, req *UserCreateRequest) (res *UserCreateResponse, err error)

	// UserDelete
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_DELETE
	UserDelete(ctx T, req *UserDeleteRequest) (res *UserDeleteResponse, err error)

	// UserUpdate
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_UPDATE
	UserUpdate(ctx T, req *UserUpdateRequest) (res *UserUpdateResponse, err error)

	// UserHideTx
	//
	// # Operation:
	//   - Domain: ACTION_OBJECT_HIDE_TX
	UserHideTx(ctx T, req *UserHideTxRequest) (res *UserHideTxResponse, err error)
}

type UserServiceBase struct {
}

func (s *UserServiceBase) GetEvaluateTransactions() []string {
	return []string{
		"UserGetCurrentId",
		"UserGetCurrent",
		"UserGet",
		"UserGetList",
		"UserGetHistory",
		"UserGetHiddenTx",
	}
}

func UserServiceGetTxOperation(txName string) (op *v1.Operation, err error) {
	switch txName {
	case "UserGetCurrentId":
		// action:ACTION_OBJECT_VIEW
		return &v1.Operation{
			Action: 10,
		}, nil
	case "UserGetCurrent":
		// action:ACTION_OBJECT_VIEW
		return &v1.Operation{
			Action: 10,
		}, nil
	case "UserGet":
		// action:ACTION_OBJECT_VIEW
		return &v1.Operation{
			Action: 10,
		}, nil
	case "UserGetList":
		// action:ACTION_OBJECT_VIEW
		return &v1.Operation{
			Action: 10,
		}, nil
	case "UserGetHistory":
		// action:ACTION_OBJECT_VIEW_HISTORY
		return &v1.Operation{
			Action: 18,
		}, nil
	case "UserGetHiddenTx":
		// action:ACTION_OBJECT_VIEW_HIDDEN_TXS
		return &v1.Operation{
			Action: 19,
		}, nil
	case "UserCreate":
		// action:ACTION_REGISTER_USER
		return &v1.Operation{
			Action: 1,
		}, nil
	case "UserDelete":
		// action:ACTION_OBJECT_DELETE
		return &v1.Operation{
			Action: 13,
		}, nil
	case "UserUpdate":
		// action:ACTION_OBJECT_UPDATE
		return &v1.Operation{
			Action: 12,
		}, nil
	case "UserHideTx":
		// action:ACTION_OBJECT_HIDE_TX
		return &v1.Operation{
			Action: 20,
		}, nil
	default:
		return nil, fmt.Errorf("No operation defined for " + txName)
	}
	return nil, nil
}

func (s *UserServiceBase) GetIgnoredFunctions() []string {
	return []string{"GetTxOperation"}
}
