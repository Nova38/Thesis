// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: chaincode/auth/rbac/schema/v1/rbac.proto

package schemav1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/nova38/thesis/lib/go/gen/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ══════════════════== Roles ════════════════════════=
// Used for setting Role Permissions
// !! key := {ROLE}{COLLECTION_ID}{ROLE_ID.Id}
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId  string      `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId        string      `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Ac            *v1.ACEntry `protobuf:"bytes,4,opt,name=ac,proto3" json:"ac,omitempty"`
	Name          string      `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description   string      `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ParentRoleIds []string    `protobuf:"bytes,7,rep,name=parent_role_ids,json=parentRoleIds,proto3" json:"parent_role_ids,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{0}
}

func (x *Role) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *Role) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *Role) GetAc() *v1.ACEntry {
	if x != nil {
		return x.Ac
	}
	return nil
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetParentRoleIds() []string {
	if x != nil {
		return x.ParentRoleIds
	}
	return nil
}

type RoleGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *RoleGetRequest) Reset() {
	*x = RoleGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetRequest) ProtoMessage() {}

func (x *RoleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetRequest.ProtoReflect.Descriptor instead.
func (*RoleGetRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{1}
}

func (x *RoleGetRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RoleGetRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type RoleGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RoleGetResponse) Reset() {
	*x = RoleGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetResponse) ProtoMessage() {}

func (x *RoleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetResponse.ProtoReflect.Descriptor instead.
func (*RoleGetResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{2}
}

func (x *RoleGetResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type RoleGetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmark string `protobuf:"bytes,1,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *RoleGetListRequest) Reset() {
	*x = RoleGetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetListRequest) ProtoMessage() {}

func (x *RoleGetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetListRequest.ProtoReflect.Descriptor instead.
func (*RoleGetListRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{3}
}

func (x *RoleGetListRequest) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

func (x *RoleGetListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RoleGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles    []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	Bookmark string  `protobuf:"bytes,2,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *RoleGetListResponse) Reset() {
	*x = RoleGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetListResponse) ProtoMessage() {}

func (x *RoleGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetListResponse.ProtoReflect.Descriptor instead.
func (*RoleGetListResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{4}
}

func (x *RoleGetListResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RoleGetListResponse) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

type RoleGetByCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Bookmark     string `protobuf:"bytes,2,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	PageSize     uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *RoleGetByCollectionRequest) Reset() {
	*x = RoleGetByCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetByCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetByCollectionRequest) ProtoMessage() {}

func (x *RoleGetByCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetByCollectionRequest.ProtoReflect.Descriptor instead.
func (*RoleGetByCollectionRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{5}
}

func (x *RoleGetByCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RoleGetByCollectionRequest) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

func (x *RoleGetByCollectionRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RoleGetByCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *v1.Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Roles      []*Role        `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	Bookmark   string         `protobuf:"bytes,3,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *RoleGetByCollectionResponse) Reset() {
	*x = RoleGetByCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetByCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetByCollectionResponse) ProtoMessage() {}

func (x *RoleGetByCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetByCollectionResponse.ProtoReflect.Descriptor instead.
func (*RoleGetByCollectionResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{6}
}

func (x *RoleGetByCollectionResponse) GetCollection() *v1.Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *RoleGetByCollectionResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RoleGetByCollectionResponse) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

type RoleGetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ShowHidden   bool   `protobuf:"varint,5,opt,name=show_hidden,json=showHidden,proto3" json:"show_hidden,omitempty"`
}

func (x *RoleGetHistoryRequest) Reset() {
	*x = RoleGetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetHistoryRequest) ProtoMessage() {}

func (x *RoleGetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetHistoryRequest.ProtoReflect.Descriptor instead.
func (*RoleGetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{7}
}

func (x *RoleGetHistoryRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RoleGetHistoryRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RoleGetHistoryRequest) GetShowHidden() bool {
	if x != nil {
		return x.ShowHidden
	}
	return false
}

type RoleGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History *v1.History `protobuf:"bytes,1,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *RoleGetHistoryResponse) Reset() {
	*x = RoleGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetHistoryResponse) ProtoMessage() {}

func (x *RoleGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*RoleGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{8}
}

func (x *RoleGetHistoryResponse) GetHistory() *v1.History {
	if x != nil {
		return x.History
	}
	return nil
}

// ──────────────────-- Invoke ────────────────────────
type RoleCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId        string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId string `protobuf:"bytes,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *RoleCreateRequest) Reset() {
	*x = RoleCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleCreateRequest) ProtoMessage() {}

func (x *RoleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleCreateRequest.ProtoReflect.Descriptor instead.
func (*RoleCreateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{9}
}

func (x *RoleCreateRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *RoleCreateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoleCreateRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RoleCreateRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type RoleCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RoleCreateResponse) Reset() {
	*x = RoleCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleCreateResponse) ProtoMessage() {}

func (x *RoleCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleCreateResponse.ProtoReflect.Descriptor instead.
func (*RoleCreateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{10}
}

func (x *RoleCreateResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type RoleUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string                 `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string                 `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Update       *Role                  `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	Mask         *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (x *RoleUpdateRequest) Reset() {
	*x = RoleUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdateRequest) ProtoMessage() {}

func (x *RoleUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdateRequest.ProtoReflect.Descriptor instead.
func (*RoleUpdateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{11}
}

func (x *RoleUpdateRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RoleUpdateRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RoleUpdateRequest) GetUpdate() *Role {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *RoleUpdateRequest) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type RoleUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RoleUpdateResponse) Reset() {
	*x = RoleUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdateResponse) ProtoMessage() {}

func (x *RoleUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdateResponse.ProtoReflect.Descriptor instead.
func (*RoleUpdateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{12}
}

func (x *RoleUpdateResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type RoleDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *RoleDeleteRequest) Reset() {
	*x = RoleDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleteRequest) ProtoMessage() {}

func (x *RoleDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleteRequest.ProtoReflect.Descriptor instead.
func (*RoleDeleteRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{13}
}

func (x *RoleDeleteRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RoleDeleteRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type RoleDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RoleDeleteResponse) Reset() {
	*x = RoleDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleteResponse) ProtoMessage() {}

func (x *RoleDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleteResponse.ProtoReflect.Descriptor instead.
func (*RoleDeleteResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{14}
}

func (x *RoleDeleteResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// ══════════════════== Membership ══════════════════==
// Used for Assigning Roles to Users
// !! key := {MEMBERSHIP}{COLLECTION_ID}{ROLE_ID.Id}<{USER_ID.msp_id}{USER_ID.id}>
// !! SecondaryKey := {MEMBERSHIP}<{USER_ID.msp_id}{USER_ID.id}>{COLLECTION_ID}{ROLE_ID.Id}
type Membership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	MspId        string `protobuf:"bytes,2,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *Membership) Reset() {
	*x = Membership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Membership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Membership) ProtoMessage() {}

func (x *Membership) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Membership.ProtoReflect.Descriptor instead.
func (*Membership) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{15}
}

func (x *Membership) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *Membership) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *Membership) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Membership) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type MembershipGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId        string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId string `protobuf:"bytes,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *MembershipGetRequest) Reset() {
	*x = MembershipGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetRequest) ProtoMessage() {}

func (x *MembershipGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetRequest.ProtoReflect.Descriptor instead.
func (*MembershipGetRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{16}
}

func (x *MembershipGetRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *MembershipGetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MembershipGetRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MembershipGetRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type MembershipGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Membership *Membership `protobuf:"bytes,1,opt,name=membership,proto3" json:"membership,omitempty"`
}

func (x *MembershipGetResponse) Reset() {
	*x = MembershipGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetResponse) ProtoMessage() {}

func (x *MembershipGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetResponse.ProtoReflect.Descriptor instead.
func (*MembershipGetResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{17}
}

func (x *MembershipGetResponse) GetMembership() *Membership {
	if x != nil {
		return x.Membership
	}
	return nil
}

type MembershipGetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmark string `protobuf:"bytes,1,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *MembershipGetListRequest) Reset() {
	*x = MembershipGetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetListRequest) ProtoMessage() {}

func (x *MembershipGetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetListRequest.ProtoReflect.Descriptor instead.
func (*MembershipGetListRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{18}
}

func (x *MembershipGetListRequest) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

func (x *MembershipGetListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MembershipGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memberships []*Membership `protobuf:"bytes,1,rep,name=memberships,proto3" json:"memberships,omitempty"`
	Bookmark    string        `protobuf:"bytes,2,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *MembershipGetListResponse) Reset() {
	*x = MembershipGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetListResponse) ProtoMessage() {}

func (x *MembershipGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetListResponse.ProtoReflect.Descriptor instead.
func (*MembershipGetListResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{19}
}

func (x *MembershipGetListResponse) GetMemberships() []*Membership {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *MembershipGetListResponse) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

type MembershipGetByCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Bookmark     string `protobuf:"bytes,2,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	PageSize     uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *MembershipGetByCollectionRequest) Reset() {
	*x = MembershipGetByCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetByCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetByCollectionRequest) ProtoMessage() {}

func (x *MembershipGetByCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetByCollectionRequest.ProtoReflect.Descriptor instead.
func (*MembershipGetByCollectionRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{20}
}

func (x *MembershipGetByCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MembershipGetByCollectionRequest) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

func (x *MembershipGetByCollectionRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MembershipGetByCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection  *v1.Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Memberships []*Membership  `protobuf:"bytes,2,rep,name=memberships,proto3" json:"memberships,omitempty"`
	Bookmark    string         `protobuf:"bytes,3,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *MembershipGetByCollectionResponse) Reset() {
	*x = MembershipGetByCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetByCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetByCollectionResponse) ProtoMessage() {}

func (x *MembershipGetByCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetByCollectionResponse.ProtoReflect.Descriptor instead.
func (*MembershipGetByCollectionResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{21}
}

func (x *MembershipGetByCollectionResponse) GetCollection() *v1.Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *MembershipGetByCollectionResponse) GetMemberships() []*Membership {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *MembershipGetByCollectionResponse) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

type MembershipGetByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	MspId        string `protobuf:"bytes,2,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Bookmark     string `protobuf:"bytes,4,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	PageSize     uint32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *MembershipGetByUserRequest) Reset() {
	*x = MembershipGetByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetByUserRequest) ProtoMessage() {}

func (x *MembershipGetByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetByUserRequest.ProtoReflect.Descriptor instead.
func (*MembershipGetByUserRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{22}
}

func (x *MembershipGetByUserRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MembershipGetByUserRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *MembershipGetByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MembershipGetByUserRequest) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

func (x *MembershipGetByUserRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MembershipGetByUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string        `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	User         *v1.User      `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Memberships  []*Membership `protobuf:"bytes,3,rep,name=memberships,proto3" json:"memberships,omitempty"`
	Bookmark     string        `protobuf:"bytes,4,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *MembershipGetByUserResponse) Reset() {
	*x = MembershipGetByUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetByUserResponse) ProtoMessage() {}

func (x *MembershipGetByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetByUserResponse.ProtoReflect.Descriptor instead.
func (*MembershipGetByUserResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{23}
}

func (x *MembershipGetByUserResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MembershipGetByUserResponse) GetUser() *v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MembershipGetByUserResponse) GetMemberships() []*Membership {
	if x != nil {
		return x.Memberships
	}
	return nil
}

func (x *MembershipGetByUserResponse) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

type MembershipGetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	MspId        string `protobuf:"bytes,2,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *MembershipGetHistoryRequest) Reset() {
	*x = MembershipGetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetHistoryRequest) ProtoMessage() {}

func (x *MembershipGetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetHistoryRequest.ProtoReflect.Descriptor instead.
func (*MembershipGetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{24}
}

func (x *MembershipGetHistoryRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MembershipGetHistoryRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *MembershipGetHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MembershipGetHistoryRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type MembershipGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History *v1.History `protobuf:"bytes,1,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *MembershipGetHistoryResponse) Reset() {
	*x = MembershipGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipGetHistoryResponse) ProtoMessage() {}

func (x *MembershipGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*MembershipGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{25}
}

func (x *MembershipGetHistoryResponse) GetHistory() *v1.History {
	if x != nil {
		return x.History
	}
	return nil
}

// ──────────────────-- Invoke ────────────────────────
type MembershipCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId        string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId string `protobuf:"bytes,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *MembershipCreateRequest) Reset() {
	*x = MembershipCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipCreateRequest) ProtoMessage() {}

func (x *MembershipCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipCreateRequest.ProtoReflect.Descriptor instead.
func (*MembershipCreateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{26}
}

func (x *MembershipCreateRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *MembershipCreateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MembershipCreateRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MembershipCreateRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type MembershipCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Membership *Membership `protobuf:"bytes,1,opt,name=membership,proto3" json:"membership,omitempty"`
}

func (x *MembershipCreateResponse) Reset() {
	*x = MembershipCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipCreateResponse) ProtoMessage() {}

func (x *MembershipCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipCreateResponse.ProtoReflect.Descriptor instead.
func (*MembershipCreateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{27}
}

func (x *MembershipCreateResponse) GetMembership() *Membership {
	if x != nil {
		return x.Membership
	}
	return nil
}

type MembershipDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId        string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId string `protobuf:"bytes,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *MembershipDeleteRequest) Reset() {
	*x = MembershipDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipDeleteRequest) ProtoMessage() {}

func (x *MembershipDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipDeleteRequest.ProtoReflect.Descriptor instead.
func (*MembershipDeleteRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{28}
}

func (x *MembershipDeleteRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *MembershipDeleteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MembershipDeleteRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MembershipDeleteRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type MembershipDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Membership *Membership `protobuf:"bytes,1,opt,name=membership,proto3" json:"membership,omitempty"`
}

func (x *MembershipDeleteResponse) Reset() {
	*x = MembershipDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembershipDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembershipDeleteResponse) ProtoMessage() {}

func (x *MembershipDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembershipDeleteResponse.ProtoReflect.Descriptor instead.
func (*MembershipDeleteResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP(), []int{29}
}

func (x *MembershipDeleteResponse) GetMembership() *Membership {
	if x != nil {
		return x.Membership
	}
	return nil
}

var File_chaincode_auth_rbac_schema_v1_rbac_proto protoreflect.FileDescriptor

var file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x80, 0x02, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x02, 0x61, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x43, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x61, 0x63, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x3a,
	0x11, 0xba, 0xd4, 0x1a, 0x0d, 0x10, 0x02, 0x1a, 0x09, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x22, 0x4e, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x4d, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5d,
	0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x7a, 0x0a,
	0x1a, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x1b, 0x52, 0x6f,
	0x6c, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x76, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x73, 0x68, 0x6f, 0x77, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x41, 0x0a, 0x16, 0x52,
	0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x81,
	0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x6d, 0x61, 0x73, 0x6b, 0x22, 0x3e, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x51, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2c, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x6d,
	0x73, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x3a, 0x22, 0xba, 0xd4, 0x1a, 0x1e, 0x10, 0x02, 0x1a,
	0x1a, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x14,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x53, 0x0a, 0x18, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x75, 0x0a, 0x19,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x80, 0x01, 0x0a, 0x20, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x21, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73,
	0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x47, 0x0a, 0x1c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x17,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x87, 0x01,
	0x0a, 0x17, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x32,
	0xa5, 0x0c, 0x0a, 0x0b, 0x52, 0x42, 0x41, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x74, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa,
	0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x68, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12,
	0x8c, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x7a,
	0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a,
	0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x7d, 0x0a, 0x14, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x2b, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0,
	0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x12, 0x12, 0x71, 0x0a, 0x10, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x12, 0x71, 0x0a, 0x10,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x27, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x12,
	0x62, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c,
	0x02, 0x08, 0x0a, 0x12, 0x56, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x1e,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x7a, 0x0a, 0x13, 0x52,
	0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18,
	0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x6b, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a,
	0x1c, 0x02, 0x08, 0x12, 0x12, 0x5f, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa,
	0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x12, 0x5f, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01,
	0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x12, 0x5f, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18,
	0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x42, 0xc5, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x42, 0x09,
	0x52, 0x62, 0x61, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x61, 0x33, 0x38, 0x2f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f,
	0x72, 0x62, 0x61, 0x63, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x53, 0x58, 0xaa, 0x02, 0x0e,
	0x52, 0x62, 0x61, 0x63, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0e, 0x52, 0x62, 0x61, 0x63, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1a, 0x52, 0x62, 0x61, 0x63, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x52,
	0x62, 0x61, 0x63, 0x3a, 0x3a, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescOnce sync.Once
	file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescData = file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDesc
)

func file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescGZIP() []byte {
	file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescOnce.Do(func() {
		file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescData = protoimpl.X.CompressGZIP(file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescData)
	})
	return file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDescData
}

var file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_chaincode_auth_rbac_schema_v1_rbac_proto_goTypes = []interface{}{
	(*Role)(nil),                              // 0: rbac.schema.v1.Role
	(*RoleGetRequest)(nil),                    // 1: rbac.schema.v1.RoleGetRequest
	(*RoleGetResponse)(nil),                   // 2: rbac.schema.v1.RoleGetResponse
	(*RoleGetListRequest)(nil),                // 3: rbac.schema.v1.RoleGetListRequest
	(*RoleGetListResponse)(nil),               // 4: rbac.schema.v1.RoleGetListResponse
	(*RoleGetByCollectionRequest)(nil),        // 5: rbac.schema.v1.RoleGetByCollectionRequest
	(*RoleGetByCollectionResponse)(nil),       // 6: rbac.schema.v1.RoleGetByCollectionResponse
	(*RoleGetHistoryRequest)(nil),             // 7: rbac.schema.v1.RoleGetHistoryRequest
	(*RoleGetHistoryResponse)(nil),            // 8: rbac.schema.v1.RoleGetHistoryResponse
	(*RoleCreateRequest)(nil),                 // 9: rbac.schema.v1.RoleCreateRequest
	(*RoleCreateResponse)(nil),                // 10: rbac.schema.v1.RoleCreateResponse
	(*RoleUpdateRequest)(nil),                 // 11: rbac.schema.v1.RoleUpdateRequest
	(*RoleUpdateResponse)(nil),                // 12: rbac.schema.v1.RoleUpdateResponse
	(*RoleDeleteRequest)(nil),                 // 13: rbac.schema.v1.RoleDeleteRequest
	(*RoleDeleteResponse)(nil),                // 14: rbac.schema.v1.RoleDeleteResponse
	(*Membership)(nil),                        // 15: rbac.schema.v1.Membership
	(*MembershipGetRequest)(nil),              // 16: rbac.schema.v1.MembershipGetRequest
	(*MembershipGetResponse)(nil),             // 17: rbac.schema.v1.MembershipGetResponse
	(*MembershipGetListRequest)(nil),          // 18: rbac.schema.v1.MembershipGetListRequest
	(*MembershipGetListResponse)(nil),         // 19: rbac.schema.v1.MembershipGetListResponse
	(*MembershipGetByCollectionRequest)(nil),  // 20: rbac.schema.v1.MembershipGetByCollectionRequest
	(*MembershipGetByCollectionResponse)(nil), // 21: rbac.schema.v1.MembershipGetByCollectionResponse
	(*MembershipGetByUserRequest)(nil),        // 22: rbac.schema.v1.MembershipGetByUserRequest
	(*MembershipGetByUserResponse)(nil),       // 23: rbac.schema.v1.MembershipGetByUserResponse
	(*MembershipGetHistoryRequest)(nil),       // 24: rbac.schema.v1.MembershipGetHistoryRequest
	(*MembershipGetHistoryResponse)(nil),      // 25: rbac.schema.v1.MembershipGetHistoryResponse
	(*MembershipCreateRequest)(nil),           // 26: rbac.schema.v1.MembershipCreateRequest
	(*MembershipCreateResponse)(nil),          // 27: rbac.schema.v1.MembershipCreateResponse
	(*MembershipDeleteRequest)(nil),           // 28: rbac.schema.v1.MembershipDeleteRequest
	(*MembershipDeleteResponse)(nil),          // 29: rbac.schema.v1.MembershipDeleteResponse
	(*v1.ACEntry)(nil),                        // 30: auth.ACEntry
	(*v1.Collection)(nil),                     // 31: auth.Collection
	(*v1.History)(nil),                        // 32: auth.History
	(*fieldmaskpb.FieldMask)(nil),             // 33: google.protobuf.FieldMask
	(*v1.User)(nil),                           // 34: auth.User
}
var file_chaincode_auth_rbac_schema_v1_rbac_proto_depIdxs = []int32{
	30, // 0: rbac.schema.v1.Role.ac:type_name -> auth.ACEntry
	0,  // 1: rbac.schema.v1.RoleGetResponse.role:type_name -> rbac.schema.v1.Role
	0,  // 2: rbac.schema.v1.RoleGetListResponse.roles:type_name -> rbac.schema.v1.Role
	31, // 3: rbac.schema.v1.RoleGetByCollectionResponse.collection:type_name -> auth.Collection
	0,  // 4: rbac.schema.v1.RoleGetByCollectionResponse.roles:type_name -> rbac.schema.v1.Role
	32, // 5: rbac.schema.v1.RoleGetHistoryResponse.history:type_name -> auth.History
	0,  // 6: rbac.schema.v1.RoleCreateResponse.role:type_name -> rbac.schema.v1.Role
	0,  // 7: rbac.schema.v1.RoleUpdateRequest.update:type_name -> rbac.schema.v1.Role
	33, // 8: rbac.schema.v1.RoleUpdateRequest.mask:type_name -> google.protobuf.FieldMask
	0,  // 9: rbac.schema.v1.RoleUpdateResponse.role:type_name -> rbac.schema.v1.Role
	0,  // 10: rbac.schema.v1.RoleDeleteResponse.role:type_name -> rbac.schema.v1.Role
	15, // 11: rbac.schema.v1.MembershipGetResponse.membership:type_name -> rbac.schema.v1.Membership
	15, // 12: rbac.schema.v1.MembershipGetListResponse.memberships:type_name -> rbac.schema.v1.Membership
	31, // 13: rbac.schema.v1.MembershipGetByCollectionResponse.collection:type_name -> auth.Collection
	15, // 14: rbac.schema.v1.MembershipGetByCollectionResponse.memberships:type_name -> rbac.schema.v1.Membership
	34, // 15: rbac.schema.v1.MembershipGetByUserResponse.user:type_name -> auth.User
	15, // 16: rbac.schema.v1.MembershipGetByUserResponse.memberships:type_name -> rbac.schema.v1.Membership
	32, // 17: rbac.schema.v1.MembershipGetHistoryResponse.history:type_name -> auth.History
	15, // 18: rbac.schema.v1.MembershipCreateResponse.membership:type_name -> rbac.schema.v1.Membership
	15, // 19: rbac.schema.v1.MembershipDeleteResponse.membership:type_name -> rbac.schema.v1.Membership
	18, // 20: rbac.schema.v1.RBACService.MembershipGetList:input_type -> rbac.schema.v1.MembershipGetListRequest
	16, // 21: rbac.schema.v1.RBACService.MembershipGet:input_type -> rbac.schema.v1.MembershipGetRequest
	20, // 22: rbac.schema.v1.RBACService.MembershipGetByCollection:input_type -> rbac.schema.v1.MembershipGetByCollectionRequest
	22, // 23: rbac.schema.v1.RBACService.MembershipGetByUser:input_type -> rbac.schema.v1.MembershipGetByUserRequest
	24, // 24: rbac.schema.v1.RBACService.MembershipGetHistory:input_type -> rbac.schema.v1.MembershipGetHistoryRequest
	26, // 25: rbac.schema.v1.RBACService.MembershipCreate:input_type -> rbac.schema.v1.MembershipCreateRequest
	28, // 26: rbac.schema.v1.RBACService.MembershipDelete:input_type -> rbac.schema.v1.MembershipDeleteRequest
	3,  // 27: rbac.schema.v1.RBACService.RoleGetList:input_type -> rbac.schema.v1.RoleGetListRequest
	1,  // 28: rbac.schema.v1.RBACService.RoleGet:input_type -> rbac.schema.v1.RoleGetRequest
	5,  // 29: rbac.schema.v1.RBACService.RoleGetByCollection:input_type -> rbac.schema.v1.RoleGetByCollectionRequest
	7,  // 30: rbac.schema.v1.RBACService.RoleGetHistory:input_type -> rbac.schema.v1.RoleGetHistoryRequest
	9,  // 31: rbac.schema.v1.RBACService.RoleCreate:input_type -> rbac.schema.v1.RoleCreateRequest
	13, // 32: rbac.schema.v1.RBACService.RoleDelete:input_type -> rbac.schema.v1.RoleDeleteRequest
	11, // 33: rbac.schema.v1.RBACService.RoleUpdate:input_type -> rbac.schema.v1.RoleUpdateRequest
	19, // 34: rbac.schema.v1.RBACService.MembershipGetList:output_type -> rbac.schema.v1.MembershipGetListResponse
	17, // 35: rbac.schema.v1.RBACService.MembershipGet:output_type -> rbac.schema.v1.MembershipGetResponse
	21, // 36: rbac.schema.v1.RBACService.MembershipGetByCollection:output_type -> rbac.schema.v1.MembershipGetByCollectionResponse
	23, // 37: rbac.schema.v1.RBACService.MembershipGetByUser:output_type -> rbac.schema.v1.MembershipGetByUserResponse
	25, // 38: rbac.schema.v1.RBACService.MembershipGetHistory:output_type -> rbac.schema.v1.MembershipGetHistoryResponse
	27, // 39: rbac.schema.v1.RBACService.MembershipCreate:output_type -> rbac.schema.v1.MembershipCreateResponse
	29, // 40: rbac.schema.v1.RBACService.MembershipDelete:output_type -> rbac.schema.v1.MembershipDeleteResponse
	4,  // 41: rbac.schema.v1.RBACService.RoleGetList:output_type -> rbac.schema.v1.RoleGetListResponse
	2,  // 42: rbac.schema.v1.RBACService.RoleGet:output_type -> rbac.schema.v1.RoleGetResponse
	6,  // 43: rbac.schema.v1.RBACService.RoleGetByCollection:output_type -> rbac.schema.v1.RoleGetByCollectionResponse
	8,  // 44: rbac.schema.v1.RBACService.RoleGetHistory:output_type -> rbac.schema.v1.RoleGetHistoryResponse
	10, // 45: rbac.schema.v1.RBACService.RoleCreate:output_type -> rbac.schema.v1.RoleCreateResponse
	14, // 46: rbac.schema.v1.RBACService.RoleDelete:output_type -> rbac.schema.v1.RoleDeleteResponse
	12, // 47: rbac.schema.v1.RBACService.RoleUpdate:output_type -> rbac.schema.v1.RoleUpdateResponse
	34, // [34:48] is the sub-list for method output_type
	20, // [20:34] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_chaincode_auth_rbac_schema_v1_rbac_proto_init() }
func file_chaincode_auth_rbac_schema_v1_rbac_proto_init() {
	if File_chaincode_auth_rbac_schema_v1_rbac_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetByCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetByCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Membership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetByCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetByCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetByUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembershipDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chaincode_auth_rbac_schema_v1_rbac_proto_goTypes,
		DependencyIndexes: file_chaincode_auth_rbac_schema_v1_rbac_proto_depIdxs,
		MessageInfos:      file_chaincode_auth_rbac_schema_v1_rbac_proto_msgTypes,
	}.Build()
	File_chaincode_auth_rbac_schema_v1_rbac_proto = out.File
	file_chaincode_auth_rbac_schema_v1_rbac_proto_rawDesc = nil
	file_chaincode_auth_rbac_schema_v1_rbac_proto_goTypes = nil
	file_chaincode_auth_rbac_schema_v1_rbac_proto_depIdxs = nil
}
