// Code generated by proto-gen-go-auth_pb. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: chaincode/auth/rbac/schema/v1/auth_service.proto

package schemav1

rbac.schema.v1.TestOperationRequest
	 -rbac.schema.v1.TestOperationRequest.collection_id - <nil>
	 -rbac.schema.v1.TestOperationRequest.operation - MessageDescriptor{Syntax: proto3, FullName: auth.Operation, Fields: [{Name: action, Number: 1, Cardinality: optional, Kind: enum, HasJSONName: true, JSONName: "action", Enum: auth.Action}, {Name: collection_id, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}, {Name: namespace, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "namespace"}, {Name: paths, Number: 4, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "paths", HasPresence: true, Message: google.protobuf.FieldMask}]}
rbac.schema.v1.TestOperationResponse
	 -rbac.schema.v1.TestOperationResponse.result - <nil>
rbac.schema.v1.UserGetCurrentResponse
	 -rbac.schema.v1.UserGetCurrentResponse.user - MessageDescriptor{Syntax: proto3, FullName: auth.User, Fields: [{Name: msp_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "mspId"}, {Name: user_id, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "userId"}, {Name: name, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: collection_id, Number: 4, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}]}
rbac.schema.v1.UserGetCurrentIdResponse
	 -rbac.schema.v1.UserGetCurrentIdResponse.msp_id - <nil>
	 -rbac.schema.v1.UserGetCurrentIdResponse.user_id - <nil>
rbac.schema.v1.UserGetListResponse
	 -rbac.schema.v1.UserGetListResponse.users - MessageDescriptor{Syntax: proto3, FullName: auth.User, Fields: [{Name: msp_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "mspId"}, {Name: user_id, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "userId"}, {Name: name, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: collection_id, Number: 4, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}]}
rbac.schema.v1.UserGetRequest
	 -rbac.schema.v1.UserGetRequest.msp_id - <nil>
	 -rbac.schema.v1.UserGetRequest.user_id - <nil>
rbac.schema.v1.UserGetResponse
	 -rbac.schema.v1.UserGetResponse.user - MessageDescriptor{Syntax: proto3, FullName: auth.User, Fields: [{Name: msp_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "mspId"}, {Name: user_id, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "userId"}, {Name: name, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: collection_id, Number: 4, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}]}
rbac.schema.v1.UserGetHistoryRequest
	 -rbac.schema.v1.UserGetHistoryRequest.msp_id - <nil>
	 -rbac.schema.v1.UserGetHistoryRequest.user_id - <nil>
rbac.schema.v1.UserGetHistoryResponse
	 -rbac.schema.v1.UserGetHistoryResponse.msp_id - <nil>
	 -rbac.schema.v1.UserGetHistoryResponse.user_id - <nil>
	 -rbac.schema.v1.UserGetHistoryResponse.history - MessageDescriptor{Syntax: proto3, FullName: auth.History, Fields: [{Name: entries, Number: 1, Cardinality: repeated, Kind: message, HasJSONName: true, JSONName: "entries", IsList: true, Message: auth.HistoryEntry}, {Name: hidden_txs, Number: 2, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "hiddenTxs", HasPresence: true, Message: auth.HiddenTxList}]}
rbac.schema.v1.UserRegisterRequest
	 -rbac.schema.v1.UserRegisterRequest.name - <nil>
rbac.schema.v1.UserRegisterResponse
	 -rbac.schema.v1.UserRegisterResponse.user - MessageDescriptor{Syntax: proto3, FullName: auth.User, Fields: [{Name: msp_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "mspId"}, {Name: user_id, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "userId"}, {Name: name, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: collection_id, Number: 4, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}]}
rbac.schema.v1.UserUpdateMembershipRequest
	 -rbac.schema.v1.UserUpdateMembershipRequest.msp_id - <nil>
	 -rbac.schema.v1.UserUpdateMembershipRequest.user_id - <nil>
	 -rbac.schema.v1.UserUpdateMembershipRequest.collection_id - <nil>
	 -rbac.schema.v1.UserUpdateMembershipRequest.role_id - <nil>
rbac.schema.v1.UserUpdateMembershipResponse
	 -rbac.schema.v1.UserUpdateMembershipResponse.user - MessageDescriptor{Syntax: proto3, FullName: auth.User, Fields: [{Name: msp_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "mspId"}, {Name: user_id, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "userId"}, {Name: name, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: collection_id, Number: 4, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}]}
rbac.schema.v1.CollectionGetListResponse
	 -rbac.schema.v1.CollectionGetListResponse.collections - MessageDescriptor{Syntax: proto3, FullName: auth.Collection, Fields: [{Name: collection_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}, {Name: name, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: description, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "description"}, {Name: object_types, Number: 4, Cardinality: repeated, Kind: string, HasJSONName: true, JSONName: "objectTypes", IsList: true}, {Name: default, Number: 5, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "default", HasPresence: true, Message: auth.ACEntry}]}
rbac.schema.v1.CollectionGetRequest
	 -rbac.schema.v1.CollectionGetRequest.collection_id - <nil>
rbac.schema.v1.CollectionGetResponse
	 -rbac.schema.v1.CollectionGetResponse.collection - MessageDescriptor{Syntax: proto3, FullName: auth.Collection, Fields: [{Name: collection_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}, {Name: name, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: description, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "description"}, {Name: object_types, Number: 4, Cardinality: repeated, Kind: string, HasJSONName: true, JSONName: "objectTypes", IsList: true}, {Name: default, Number: 5, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "default", HasPresence: true, Message: auth.ACEntry}]}
rbac.schema.v1.CollectionGetHistoryRequest
	 -rbac.schema.v1.CollectionGetHistoryRequest.collection_id - <nil>
rbac.schema.v1.CollectionGetHistoryResponse
	 -rbac.schema.v1.CollectionGetHistoryResponse.history - MessageDescriptor{Syntax: proto3, FullName: auth.History, Fields: [{Name: entries, Number: 1, Cardinality: repeated, Kind: message, HasJSONName: true, JSONName: "entries", IsList: true, Message: auth.HistoryEntry}, {Name: hidden_txs, Number: 2, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "hiddenTxs", HasPresence: true, Message: auth.HiddenTxList}]}
rbac.schema.v1.CollectionCreateRequest
	 -rbac.schema.v1.CollectionCreateRequest.collection - MessageDescriptor{Syntax: proto3, FullName: auth.Collection, Fields: [{Name: collection_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}, {Name: name, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: description, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "description"}, {Name: object_types, Number: 4, Cardinality: repeated, Kind: string, HasJSONName: true, JSONName: "objectTypes", IsList: true}, {Name: default, Number: 5, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "default", HasPresence: true, Message: auth.ACEntry}]}
rbac.schema.v1.CollectionCreateResponse
	 -rbac.schema.v1.CollectionCreateResponse.collection - MessageDescriptor{Syntax: proto3, FullName: auth.Collection, Fields: [{Name: collection_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}, {Name: name, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: description, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "description"}, {Name: object_types, Number: 4, Cardinality: repeated, Kind: string, HasJSONName: true, JSONName: "objectTypes", IsList: true}, {Name: default, Number: 5, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "default", HasPresence: true, Message: auth.ACEntry}]}
rbac.schema.v1.CollectionUpdateRolesRequest
	 -rbac.schema.v1.CollectionUpdateRolesRequest.collection_id - <nil>
	 -rbac.schema.v1.CollectionUpdateRolesRequest.roles_to_add - MessageDescriptor{Syntax: proto3, FullName: rbac.schema.v1.CollectionUpdateRolesRequest.RolesToAddEntry, IsMapEntry: true, Fields: [{Name: key, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "key"}, {Name: value, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "value"}]}
	 -rbac.schema.v1.CollectionUpdateRolesRequest.roles_to_remove - MessageDescriptor{Syntax: proto3, FullName: rbac.schema.v1.CollectionUpdateRolesRequest.RolesToRemoveEntry, IsMapEntry: true, Fields: [{Name: key, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "key"}, {Name: value, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "value"}]}
rbac.schema.v1.CollectionUpdateRolesRequest.RolesToAddEntry
	 -rbac.schema.v1.CollectionUpdateRolesRequest.RolesToAddEntry.key - <nil>
	 -rbac.schema.v1.CollectionUpdateRolesRequest.RolesToAddEntry.value - <nil>
rbac.schema.v1.CollectionUpdateRolesRequest.RolesToRemoveEntry
	 -rbac.schema.v1.CollectionUpdateRolesRequest.RolesToRemoveEntry.key - <nil>
	 -rbac.schema.v1.CollectionUpdateRolesRequest.RolesToRemoveEntry.value - <nil>
rbac.schema.v1.CollectionUpdateRolesResponse
	 -rbac.schema.v1.CollectionUpdateRolesResponse.collection - MessageDescriptor{Syntax: proto3, FullName: auth.Collection, Fields: [{Name: collection_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}, {Name: name, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: description, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "description"}, {Name: object_types, Number: 4, Cardinality: repeated, Kind: string, HasJSONName: true, JSONName: "objectTypes", IsList: true}, {Name: default, Number: 5, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "default", HasPresence: true, Message: auth.ACEntry}]}
	 -rbac.schema.v1.CollectionUpdateRolesResponse.roles_added - MessageDescriptor{Syntax: proto3, FullName: rbac.schema.v1.CollectionUpdateRolesResponse.RolesAddedEntry, IsMapEntry: true, Fields: [{Name: key, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "key"}, {Name: value, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "value"}]}
	 -rbac.schema.v1.CollectionUpdateRolesResponse.roles_removed - MessageDescriptor{Syntax: proto3, FullName: rbac.schema.v1.CollectionUpdateRolesResponse.RolesRemovedEntry, IsMapEntry: true, Fields: [{Name: key, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "key"}, {Name: value, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "value"}]}
rbac.schema.v1.CollectionUpdateRolesResponse.RolesAddedEntry
	 -rbac.schema.v1.CollectionUpdateRolesResponse.RolesAddedEntry.key - <nil>
	 -rbac.schema.v1.CollectionUpdateRolesResponse.RolesAddedEntry.value - <nil>
rbac.schema.v1.CollectionUpdateRolesResponse.RolesRemovedEntry
	 -rbac.schema.v1.CollectionUpdateRolesResponse.RolesRemovedEntry.key - <nil>
	 -rbac.schema.v1.CollectionUpdateRolesResponse.RolesRemovedEntry.value - <nil>
rbac.schema.v1.CollectionUpdatePermissionRequest
	 -rbac.schema.v1.CollectionUpdatePermissionRequest.collection_id - <nil>
rbac.schema.v1.CollectionUpdatePermissionResponse
	 -rbac.schema.v1.CollectionUpdatePermissionResponse.collection - MessageDescriptor{Syntax: proto3, FullName: auth.Collection, Fields: [{Name: collection_id, Number: 1, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "collectionId"}, {Name: name, Number: 2, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "name"}, {Name: description, Number: 3, Cardinality: optional, Kind: string, HasJSONName: true, JSONName: "description"}, {Name: object_types, Number: 4, Cardinality: repeated, Kind: string, HasJSONName: true, JSONName: "objectTypes", IsList: true}, {Name: default, Number: 5, Cardinality: optional, Kind: message, HasJSONName: true, JSONName: "default", HasPresence: true, Message: auth.ACEntry}]}
