// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: chaincode/auth/rbac/schema/v1/auth_service.proto

package schemav1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/nova38/thesis/lib/go/gen/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Test Helpers
type TestOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string        `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Operation    *v1.Operation `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *TestOperationRequest) Reset() {
	*x = TestOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestOperationRequest) ProtoMessage() {}

func (x *TestOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestOperationRequest.ProtoReflect.Descriptor instead.
func (*TestOperationRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{0}
}

func (x *TestOperationRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *TestOperationRequest) GetOperation() *v1.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type TestOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TestOperationResponse) Reset() {
	*x = TestOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestOperationResponse) ProtoMessage() {}

func (x *TestOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestOperationResponse.ProtoReflect.Descriptor instead.
func (*TestOperationResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{1}
}

func (x *TestOperationResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// User
// Query
// UserGetCurrent
type UserGetCurrentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v1.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserGetCurrentResponse) Reset() {
	*x = UserGetCurrentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetCurrentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetCurrentResponse) ProtoMessage() {}

func (x *UserGetCurrentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetCurrentResponse.ProtoReflect.Descriptor instead.
func (*UserGetCurrentResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{2}
}

func (x *UserGetCurrentResponse) GetUser() *v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

// UserGetCurrentId
type UserGetCurrentIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId  string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserGetCurrentIdResponse) Reset() {
	*x = UserGetCurrentIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetCurrentIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetCurrentIdResponse) ProtoMessage() {}

func (x *UserGetCurrentIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetCurrentIdResponse.ProtoReflect.Descriptor instead.
func (*UserGetCurrentIdResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{3}
}

func (x *UserGetCurrentIdResponse) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *UserGetCurrentIdResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// UserGetList
//
//	message UserGetListRequest{
//	  string bookmark = 1;
//	  int32 page_size = 2;
//	}
type UserGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*v1.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"` // string bookmark = 2;
}

func (x *UserGetListResponse) Reset() {
	*x = UserGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetListResponse) ProtoMessage() {}

func (x *UserGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetListResponse.ProtoReflect.Descriptor instead.
func (*UserGetListResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{4}
}

func (x *UserGetListResponse) GetUsers() []*v1.User {
	if x != nil {
		return x.Users
	}
	return nil
}

// UserGet
type UserGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId  string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserGetRequest) Reset() {
	*x = UserGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetRequest) ProtoMessage() {}

func (x *UserGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetRequest.ProtoReflect.Descriptor instead.
func (*UserGetRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{5}
}

func (x *UserGetRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *UserGetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v1.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserGetResponse) Reset() {
	*x = UserGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetResponse) ProtoMessage() {}

func (x *UserGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetResponse.ProtoReflect.Descriptor instead.
func (*UserGetResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{6}
}

func (x *UserGetResponse) GetUser() *v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

// UserGetHistory
type UserGetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId  string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserGetHistoryRequest) Reset() {
	*x = UserGetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetHistoryRequest) ProtoMessage() {}

func (x *UserGetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetHistoryRequest.ProtoReflect.Descriptor instead.
func (*UserGetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{7}
}

func (x *UserGetHistoryRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *UserGetHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId   string            `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId  string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	History *v1.StateActivity `protobuf:"bytes,3,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *UserGetHistoryResponse) Reset() {
	*x = UserGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetHistoryResponse) ProtoMessage() {}

func (x *UserGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*UserGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{8}
}

func (x *UserGetHistoryResponse) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *UserGetHistoryResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserGetHistoryResponse) GetHistory() *v1.StateActivity {
	if x != nil {
		return x.History
	}
	return nil
}

// Invoke
//
// UserRegister
type UserRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserRegisterRequest) Reset() {
	*x = UserRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterRequest) ProtoMessage() {}

func (x *UserRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterRequest.ProtoReflect.Descriptor instead.
func (*UserRegisterRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{9}
}

func (x *UserRegisterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v1.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserRegisterResponse) Reset() {
	*x = UserRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterResponse) ProtoMessage() {}

func (x *UserRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterResponse.ProtoReflect.Descriptor instead.
func (*UserRegisterResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{10}
}

func (x *UserRegisterResponse) GetUser() *v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

// UserUpdateMembership
type UserUpdateMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId        string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId string `protobuf:"bytes,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RoleId       string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *UserUpdateMembershipRequest) Reset() {
	*x = UserUpdateMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateMembershipRequest) ProtoMessage() {}

func (x *UserUpdateMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateMembershipRequest.ProtoReflect.Descriptor instead.
func (*UserUpdateMembershipRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{11}
}

func (x *UserUpdateMembershipRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *UserUpdateMembershipRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserUpdateMembershipRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *UserUpdateMembershipRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type UserUpdateMembershipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *v1.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserUpdateMembershipResponse) Reset() {
	*x = UserUpdateMembershipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateMembershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateMembershipResponse) ProtoMessage() {}

func (x *UserUpdateMembershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateMembershipResponse.ProtoReflect.Descriptor instead.
func (*UserUpdateMembershipResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{12}
}

func (x *UserUpdateMembershipResponse) GetUser() *v1.User {
	if x != nil {
		return x.User
	}
	return nil
}

// Collection
// Query
// CollectionGetList
//
//	message CollectionGetListRequest{
//	  string bookmark = 1;
//	  int32 page_size = 2;
//	}
type CollectionGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*v1.Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"` // string bookmark = 2;
}

func (x *CollectionGetListResponse) Reset() {
	*x = CollectionGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionGetListResponse) ProtoMessage() {}

func (x *CollectionGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionGetListResponse.ProtoReflect.Descriptor instead.
func (*CollectionGetListResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{13}
}

func (x *CollectionGetListResponse) GetCollections() []*v1.Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

// CollectionGet
type CollectionGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
}

func (x *CollectionGetRequest) Reset() {
	*x = CollectionGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionGetRequest) ProtoMessage() {}

func (x *CollectionGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionGetRequest.ProtoReflect.Descriptor instead.
func (*CollectionGetRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{14}
}

func (x *CollectionGetRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type CollectionGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *v1.Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *CollectionGetResponse) Reset() {
	*x = CollectionGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionGetResponse) ProtoMessage() {}

func (x *CollectionGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionGetResponse.ProtoReflect.Descriptor instead.
func (*CollectionGetResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{15}
}

func (x *CollectionGetResponse) GetCollection() *v1.Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

// CollectionGetHistory
type CollectionGetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
}

func (x *CollectionGetHistoryRequest) Reset() {
	*x = CollectionGetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionGetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionGetHistoryRequest) ProtoMessage() {}

func (x *CollectionGetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionGetHistoryRequest.ProtoReflect.Descriptor instead.
func (*CollectionGetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{16}
}

func (x *CollectionGetHistoryRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type CollectionGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*v1.Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *CollectionGetHistoryResponse) Reset() {
	*x = CollectionGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionGetHistoryResponse) ProtoMessage() {}

func (x *CollectionGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*CollectionGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{17}
}

func (x *CollectionGetHistoryResponse) GetCollections() []*v1.Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

// Invoke
// CollectionCreate
type CollectionCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *v1.Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *CollectionCreateRequest) Reset() {
	*x = CollectionCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionCreateRequest) ProtoMessage() {}

func (x *CollectionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionCreateRequest.ProtoReflect.Descriptor instead.
func (*CollectionCreateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{18}
}

func (x *CollectionCreateRequest) GetCollection() *v1.Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

type CollectionCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *v1.Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *CollectionCreateResponse) Reset() {
	*x = CollectionCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionCreateResponse) ProtoMessage() {}

func (x *CollectionCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionCreateResponse.ProtoReflect.Descriptor instead.
func (*CollectionCreateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{19}
}

func (x *CollectionCreateResponse) GetCollection() *v1.Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

// CollectionRolesUpdate
type CollectionUpdateRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId  string            `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RolesToAdd    map[string]string `protobuf:"bytes,2,rep,name=roles_to_add,json=rolesToAdd,proto3" json:"roles_to_add,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RolesToRemove map[string]string `protobuf:"bytes,3,rep,name=roles_to_remove,json=rolesToRemove,proto3" json:"roles_to_remove,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CollectionUpdateRolesRequest) Reset() {
	*x = CollectionUpdateRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionUpdateRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionUpdateRolesRequest) ProtoMessage() {}

func (x *CollectionUpdateRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionUpdateRolesRequest.ProtoReflect.Descriptor instead.
func (*CollectionUpdateRolesRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{20}
}

func (x *CollectionUpdateRolesRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *CollectionUpdateRolesRequest) GetRolesToAdd() map[string]string {
	if x != nil {
		return x.RolesToAdd
	}
	return nil
}

func (x *CollectionUpdateRolesRequest) GetRolesToRemove() map[string]string {
	if x != nil {
		return x.RolesToRemove
	}
	return nil
}

type CollectionUpdateRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection   *v1.Collection    `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	RolesAdded   map[string]string `protobuf:"bytes,2,rep,name=roles_added,json=rolesAdded,proto3" json:"roles_added,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RolesRemoved map[string]string `protobuf:"bytes,3,rep,name=roles_removed,json=rolesRemoved,proto3" json:"roles_removed,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CollectionUpdateRolesResponse) Reset() {
	*x = CollectionUpdateRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionUpdateRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionUpdateRolesResponse) ProtoMessage() {}

func (x *CollectionUpdateRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionUpdateRolesResponse.ProtoReflect.Descriptor instead.
func (*CollectionUpdateRolesResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{21}
}

func (x *CollectionUpdateRolesResponse) GetCollection() *v1.Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *CollectionUpdateRolesResponse) GetRolesAdded() map[string]string {
	if x != nil {
		return x.RolesAdded
	}
	return nil
}

func (x *CollectionUpdateRolesResponse) GetRolesRemoved() map[string]string {
	if x != nil {
		return x.RolesRemoved
	}
	return nil
}

// CollectionPermissionsUpdate
type CollectionUpdatePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // map<string, ACL> acl = 5;
}

func (x *CollectionUpdatePermissionRequest) Reset() {
	*x = CollectionUpdatePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionUpdatePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionUpdatePermissionRequest) ProtoMessage() {}

func (x *CollectionUpdatePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionUpdatePermissionRequest.ProtoReflect.Descriptor instead.
func (*CollectionUpdatePermissionRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{22}
}

func (x *CollectionUpdatePermissionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type CollectionUpdatePermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *v1.Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *CollectionUpdatePermissionResponse) Reset() {
	*x = CollectionUpdatePermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionUpdatePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionUpdatePermissionResponse) ProtoMessage() {}

func (x *CollectionUpdatePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionUpdatePermissionResponse.ProtoReflect.Descriptor instead.
func (*CollectionUpdatePermissionResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP(), []int{23}
}

func (x *CollectionUpdatePermissionResponse) GetCollection() *v1.Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

var File_chaincode_auth_rbac_schema_v1_auth_service_proto protoreflect.FileDescriptor

var file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDesc = []byte{
	0x0a, 0x30, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x1a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f,
	0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x38, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x18, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xae,
	0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x3a, 0x6c, 0xba, 0x48, 0x69, 0x1a, 0x67, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x30, 0x54, 0x68, 0x65, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x69, 0x64, 0x20, 0x6d, 0x75, 0x73,
	0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x69, 0x64, 0x20, 0x61,
	0x6e, 0x64, 0x20, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x1a, 0x1c, 0x68, 0x61, 0x73, 0x28, 0x69, 0x64, 0x2e, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64,
	0x29, 0x20, 0x26, 0x26, 0x20, 0x68, 0x61, 0x73, 0x28, 0x69, 0x64, 0x2e, 0x69, 0x64, 0x29, 0x22,
	0x31, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x47, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x16, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x35, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x3e, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x4f, 0x0a, 0x19, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x3b, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x49, 0x0a, 0x15, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x1b, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x52,
	0x0a, 0x1c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x17, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4c, 0x0a, 0x18, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x03,
	0x0a, 0x1c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f,
	0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x41,
	0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x12, 0x67, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x3d, 0x0a, 0x0f,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb3, 0x03,
	0x0a, 0x1d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x6c, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x9a, 0x01, 0x06, 0x2a, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x72, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x9a, 0x01, 0x06, 0x2a,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x1a, 0x3d, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x21, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a,
	0x22, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xa5, 0x0b, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x26, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c,
	0x02, 0x08, 0x0a, 0x12, 0x60, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x28, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa,
	0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x56, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x56, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa,
	0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x6b, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02,
	0x08, 0x12, 0x12, 0x65, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x23, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0,
	0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x01, 0x12, 0x7d, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x2b, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7,
	0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x12, 0x62, 0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x68, 0x0a, 0x0d,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02,
	0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x7d, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa,
	0x9a, 0x1c, 0x02, 0x08, 0x12, 0x12, 0x71, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7,
	0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x02, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x2c, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x12, 0x8f, 0x01, 0x0a, 0x1a,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x42, 0xcc, 0x01,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x61, 0x33, 0x38, 0x2f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x72, 0x62, 0x61,
	0x63, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x53, 0x58, 0xaa, 0x02, 0x0e, 0x52, 0x62, 0x61,
	0x63, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x52, 0x62,
	0x61, 0x63, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x52,
	0x62, 0x61, 0x63, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x52, 0x62, 0x61, 0x63,
	0x3a, 0x3a, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescOnce sync.Once
	file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescData = file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDesc
)

func file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescGZIP() []byte {
	file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescOnce.Do(func() {
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescData)
	})
	return file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDescData
}

var file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_chaincode_auth_rbac_schema_v1_auth_service_proto_goTypes = []interface{}{
	(*TestOperationRequest)(nil),               // 0: rbac.schema.v1.TestOperationRequest
	(*TestOperationResponse)(nil),              // 1: rbac.schema.v1.TestOperationResponse
	(*UserGetCurrentResponse)(nil),             // 2: rbac.schema.v1.UserGetCurrentResponse
	(*UserGetCurrentIdResponse)(nil),           // 3: rbac.schema.v1.UserGetCurrentIdResponse
	(*UserGetListResponse)(nil),                // 4: rbac.schema.v1.UserGetListResponse
	(*UserGetRequest)(nil),                     // 5: rbac.schema.v1.UserGetRequest
	(*UserGetResponse)(nil),                    // 6: rbac.schema.v1.UserGetResponse
	(*UserGetHistoryRequest)(nil),              // 7: rbac.schema.v1.UserGetHistoryRequest
	(*UserGetHistoryResponse)(nil),             // 8: rbac.schema.v1.UserGetHistoryResponse
	(*UserRegisterRequest)(nil),                // 9: rbac.schema.v1.UserRegisterRequest
	(*UserRegisterResponse)(nil),               // 10: rbac.schema.v1.UserRegisterResponse
	(*UserUpdateMembershipRequest)(nil),        // 11: rbac.schema.v1.UserUpdateMembershipRequest
	(*UserUpdateMembershipResponse)(nil),       // 12: rbac.schema.v1.UserUpdateMembershipResponse
	(*CollectionGetListResponse)(nil),          // 13: rbac.schema.v1.CollectionGetListResponse
	(*CollectionGetRequest)(nil),               // 14: rbac.schema.v1.CollectionGetRequest
	(*CollectionGetResponse)(nil),              // 15: rbac.schema.v1.CollectionGetResponse
	(*CollectionGetHistoryRequest)(nil),        // 16: rbac.schema.v1.CollectionGetHistoryRequest
	(*CollectionGetHistoryResponse)(nil),       // 17: rbac.schema.v1.CollectionGetHistoryResponse
	(*CollectionCreateRequest)(nil),            // 18: rbac.schema.v1.CollectionCreateRequest
	(*CollectionCreateResponse)(nil),           // 19: rbac.schema.v1.CollectionCreateResponse
	(*CollectionUpdateRolesRequest)(nil),       // 20: rbac.schema.v1.CollectionUpdateRolesRequest
	(*CollectionUpdateRolesResponse)(nil),      // 21: rbac.schema.v1.CollectionUpdateRolesResponse
	(*CollectionUpdatePermissionRequest)(nil),  // 22: rbac.schema.v1.CollectionUpdatePermissionRequest
	(*CollectionUpdatePermissionResponse)(nil), // 23: rbac.schema.v1.CollectionUpdatePermissionResponse
	nil,                      // 24: rbac.schema.v1.CollectionUpdateRolesRequest.RolesToAddEntry
	nil,                      // 25: rbac.schema.v1.CollectionUpdateRolesRequest.RolesToRemoveEntry
	nil,                      // 26: rbac.schema.v1.CollectionUpdateRolesResponse.RolesAddedEntry
	nil,                      // 27: rbac.schema.v1.CollectionUpdateRolesResponse.RolesRemovedEntry
	(*v1.Operation)(nil),     // 28: auth.Operation
	(*v1.User)(nil),          // 29: auth.User
	(*v1.StateActivity)(nil), // 30: auth.StateActivity
	(*v1.Collection)(nil),    // 31: auth.Collection
	(*emptypb.Empty)(nil),    // 32: google.protobuf.Empty
}
var file_chaincode_auth_rbac_schema_v1_auth_service_proto_depIdxs = []int32{
	28, // 0: rbac.schema.v1.TestOperationRequest.operation:type_name -> auth.Operation
	29, // 1: rbac.schema.v1.UserGetCurrentResponse.user:type_name -> auth.User
	29, // 2: rbac.schema.v1.UserGetListResponse.users:type_name -> auth.User
	29, // 3: rbac.schema.v1.UserGetResponse.user:type_name -> auth.User
	30, // 4: rbac.schema.v1.UserGetHistoryResponse.history:type_name -> auth.StateActivity
	29, // 5: rbac.schema.v1.UserRegisterResponse.user:type_name -> auth.User
	29, // 6: rbac.schema.v1.UserUpdateMembershipResponse.user:type_name -> auth.User
	31, // 7: rbac.schema.v1.CollectionGetListResponse.collections:type_name -> auth.Collection
	31, // 8: rbac.schema.v1.CollectionGetResponse.collection:type_name -> auth.Collection
	31, // 9: rbac.schema.v1.CollectionGetHistoryResponse.collections:type_name -> auth.Collection
	31, // 10: rbac.schema.v1.CollectionCreateRequest.collection:type_name -> auth.Collection
	31, // 11: rbac.schema.v1.CollectionCreateResponse.collection:type_name -> auth.Collection
	24, // 12: rbac.schema.v1.CollectionUpdateRolesRequest.roles_to_add:type_name -> rbac.schema.v1.CollectionUpdateRolesRequest.RolesToAddEntry
	25, // 13: rbac.schema.v1.CollectionUpdateRolesRequest.roles_to_remove:type_name -> rbac.schema.v1.CollectionUpdateRolesRequest.RolesToRemoveEntry
	31, // 14: rbac.schema.v1.CollectionUpdateRolesResponse.collection:type_name -> auth.Collection
	26, // 15: rbac.schema.v1.CollectionUpdateRolesResponse.roles_added:type_name -> rbac.schema.v1.CollectionUpdateRolesResponse.RolesAddedEntry
	27, // 16: rbac.schema.v1.CollectionUpdateRolesResponse.roles_removed:type_name -> rbac.schema.v1.CollectionUpdateRolesResponse.RolesRemovedEntry
	31, // 17: rbac.schema.v1.CollectionUpdatePermissionResponse.collection:type_name -> auth.Collection
	32, // 18: rbac.schema.v1.AuthService.UserGetCurrent:input_type -> google.protobuf.Empty
	32, // 19: rbac.schema.v1.AuthService.UserGetCurrentId:input_type -> google.protobuf.Empty
	32, // 20: rbac.schema.v1.AuthService.UserGetList:input_type -> google.protobuf.Empty
	5,  // 21: rbac.schema.v1.AuthService.UserGet:input_type -> rbac.schema.v1.UserGetRequest
	7,  // 22: rbac.schema.v1.AuthService.UserGetHistory:input_type -> rbac.schema.v1.UserGetHistoryRequest
	9,  // 23: rbac.schema.v1.AuthService.UserRegister:input_type -> rbac.schema.v1.UserRegisterRequest
	11, // 24: rbac.schema.v1.AuthService.UserUpdateMembership:input_type -> rbac.schema.v1.UserUpdateMembershipRequest
	32, // 25: rbac.schema.v1.AuthService.CollectionGetList:input_type -> google.protobuf.Empty
	14, // 26: rbac.schema.v1.AuthService.CollectionGet:input_type -> rbac.schema.v1.CollectionGetRequest
	16, // 27: rbac.schema.v1.AuthService.CollectionGetHistory:input_type -> rbac.schema.v1.CollectionGetHistoryRequest
	18, // 28: rbac.schema.v1.AuthService.CollectionCreate:input_type -> rbac.schema.v1.CollectionCreateRequest
	20, // 29: rbac.schema.v1.AuthService.CollectionUpdateRoles:input_type -> rbac.schema.v1.CollectionUpdateRolesRequest
	22, // 30: rbac.schema.v1.AuthService.CollectionUpdatePermission:input_type -> rbac.schema.v1.CollectionUpdatePermissionRequest
	2,  // 31: rbac.schema.v1.AuthService.UserGetCurrent:output_type -> rbac.schema.v1.UserGetCurrentResponse
	3,  // 32: rbac.schema.v1.AuthService.UserGetCurrentId:output_type -> rbac.schema.v1.UserGetCurrentIdResponse
	4,  // 33: rbac.schema.v1.AuthService.UserGetList:output_type -> rbac.schema.v1.UserGetListResponse
	6,  // 34: rbac.schema.v1.AuthService.UserGet:output_type -> rbac.schema.v1.UserGetResponse
	8,  // 35: rbac.schema.v1.AuthService.UserGetHistory:output_type -> rbac.schema.v1.UserGetHistoryResponse
	10, // 36: rbac.schema.v1.AuthService.UserRegister:output_type -> rbac.schema.v1.UserRegisterResponse
	12, // 37: rbac.schema.v1.AuthService.UserUpdateMembership:output_type -> rbac.schema.v1.UserUpdateMembershipResponse
	13, // 38: rbac.schema.v1.AuthService.CollectionGetList:output_type -> rbac.schema.v1.CollectionGetListResponse
	15, // 39: rbac.schema.v1.AuthService.CollectionGet:output_type -> rbac.schema.v1.CollectionGetResponse
	17, // 40: rbac.schema.v1.AuthService.CollectionGetHistory:output_type -> rbac.schema.v1.CollectionGetHistoryResponse
	19, // 41: rbac.schema.v1.AuthService.CollectionCreate:output_type -> rbac.schema.v1.CollectionCreateResponse
	21, // 42: rbac.schema.v1.AuthService.CollectionUpdateRoles:output_type -> rbac.schema.v1.CollectionUpdateRolesResponse
	23, // 43: rbac.schema.v1.AuthService.CollectionUpdatePermission:output_type -> rbac.schema.v1.CollectionUpdatePermissionResponse
	31, // [31:44] is the sub-list for method output_type
	18, // [18:31] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_chaincode_auth_rbac_schema_v1_auth_service_proto_init() }
func file_chaincode_auth_rbac_schema_v1_auth_service_proto_init() {
	if File_chaincode_auth_rbac_schema_v1_auth_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetCurrentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetCurrentIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateMembershipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionGetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionUpdateRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionUpdateRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionUpdatePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionUpdatePermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chaincode_auth_rbac_schema_v1_auth_service_proto_goTypes,
		DependencyIndexes: file_chaincode_auth_rbac_schema_v1_auth_service_proto_depIdxs,
		MessageInfos:      file_chaincode_auth_rbac_schema_v1_auth_service_proto_msgTypes,
	}.Build()
	File_chaincode_auth_rbac_schema_v1_auth_service_proto = out.File
	file_chaincode_auth_rbac_schema_v1_auth_service_proto_rawDesc = nil
	file_chaincode_auth_rbac_schema_v1_auth_service_proto_goTypes = nil
	file_chaincode_auth_rbac_schema_v1_auth_service_proto_depIdxs = nil
}
