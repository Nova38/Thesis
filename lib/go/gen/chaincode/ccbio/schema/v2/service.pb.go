// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: chaincode/ccbio/schema/v2/service.proto

package schemav2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/nova38/thesis/lib/go/gen/hlf"
	rbac "github.com/nova38/thesis/lib/go/gen/rbac"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Evaluate
// SpecimenGet
type SpecimenGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Specimen_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SpecimenGetRequest) Reset() {
	*x = SpecimenGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetRequest) ProtoMessage() {}

func (x *SpecimenGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetRequest.ProtoReflect.Descriptor instead.
func (*SpecimenGetRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{0}
}

func (x *SpecimenGetRequest) GetId() *Specimen_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

type SpecimenGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenGetResponse) Reset() {
	*x = SpecimenGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetResponse) ProtoMessage() {}

func (x *SpecimenGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{1}
}

func (x *SpecimenGetResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenGetList
type SpecimenGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimens []*Specimen `protobuf:"bytes,1,rep,name=specimens,proto3" json:"specimens,omitempty"`
}

func (x *SpecimenGetListResponse) Reset() {
	*x = SpecimenGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetListResponse) ProtoMessage() {}

func (x *SpecimenGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetListResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetListResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{2}
}

func (x *SpecimenGetListResponse) GetSpecimens() []*Specimen {
	if x != nil {
		return x.Specimens
	}
	return nil
}

// SpecimenGetByCollection
type SpecimenGetByCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *rbac.Collection_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SpecimenGetByCollectionRequest) Reset() {
	*x = SpecimenGetByCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetByCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetByCollectionRequest) ProtoMessage() {}

func (x *SpecimenGetByCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetByCollectionRequest.ProtoReflect.Descriptor instead.
func (*SpecimenGetByCollectionRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{3}
}

func (x *SpecimenGetByCollectionRequest) GetId() *rbac.Collection_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

type SpecimenGetByCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimens []*Specimen `protobuf:"bytes,1,rep,name=specimens,proto3" json:"specimens,omitempty"`
}

func (x *SpecimenGetByCollectionResponse) Reset() {
	*x = SpecimenGetByCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetByCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetByCollectionResponse) ProtoMessage() {}

func (x *SpecimenGetByCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetByCollectionResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetByCollectionResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{4}
}

func (x *SpecimenGetByCollectionResponse) GetSpecimens() []*Specimen {
	if x != nil {
		return x.Specimens
	}
	return nil
}

// SpecimenGetHistory
type SpecimenGetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *Specimen_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IncludeHidden bool         `protobuf:"varint,2,opt,name=include_hidden,json=includeHidden,proto3" json:"include_hidden,omitempty"`
}

func (x *SpecimenGetHistoryRequest) Reset() {
	*x = SpecimenGetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetHistoryRequest) ProtoMessage() {}

func (x *SpecimenGetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetHistoryRequest.ProtoReflect.Descriptor instead.
func (*SpecimenGetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{5}
}

func (x *SpecimenGetHistoryRequest) GetId() *Specimen_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SpecimenGetHistoryRequest) GetIncludeHidden() bool {
	if x != nil {
		return x.IncludeHidden
	}
	return false
}

type SpecimenGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History *Specimen_History `protobuf:"bytes,1,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *SpecimenGetHistoryResponse) Reset() {
	*x = SpecimenGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetHistoryResponse) ProtoMessage() {}

func (x *SpecimenGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{6}
}

func (x *SpecimenGetHistoryResponse) GetHistory() *Specimen_History {
	if x != nil {
		return x.History
	}
	return nil
}

// SpecimenCreate
type SpecimenCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenCreateRequest) Reset() {
	*x = SpecimenCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenCreateRequest) ProtoMessage() {}

func (x *SpecimenCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenCreateRequest.ProtoReflect.Descriptor instead.
func (*SpecimenCreateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{7}
}

func (x *SpecimenCreateRequest) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

type SpecimenCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenCreateResponse) Reset() {
	*x = SpecimenCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenCreateResponse) ProtoMessage() {}

func (x *SpecimenCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenCreateResponse.ProtoReflect.Descriptor instead.
func (*SpecimenCreateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{8}
}

func (x *SpecimenCreateResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenUpdate
type SpecimenUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen   *Specimen              `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *SpecimenUpdateRequest) Reset() {
	*x = SpecimenUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUpdateRequest) ProtoMessage() {}

func (x *SpecimenUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUpdateRequest.ProtoReflect.Descriptor instead.
func (*SpecimenUpdateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{9}
}

func (x *SpecimenUpdateRequest) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

func (x *SpecimenUpdateRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type SpecimenUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen   *Specimen              `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *SpecimenUpdateResponse) Reset() {
	*x = SpecimenUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUpdateResponse) ProtoMessage() {}

func (x *SpecimenUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUpdateResponse.ProtoReflect.Descriptor instead.
func (*SpecimenUpdateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{10}
}

func (x *SpecimenUpdateResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

func (x *SpecimenUpdateResponse) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// SpecimenDelete
type SpecimenDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Specimen_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SpecimenDeleteRequest) Reset() {
	*x = SpecimenDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenDeleteRequest) ProtoMessage() {}

func (x *SpecimenDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenDeleteRequest.ProtoReflect.Descriptor instead.
func (*SpecimenDeleteRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{11}
}

func (x *SpecimenDeleteRequest) GetId() *Specimen_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

type SpecimenDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenDeleteResponse) Reset() {
	*x = SpecimenDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenDeleteResponse) ProtoMessage() {}

func (x *SpecimenDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenDeleteResponse.ProtoReflect.Descriptor instead.
func (*SpecimenDeleteResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{12}
}

func (x *SpecimenDeleteResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenHideTx
type SpecimenHideTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Specimen_Id       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tx *Specimen_HiddenTx `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *SpecimenHideTxRequest) Reset() {
	*x = SpecimenHideTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenHideTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenHideTxRequest) ProtoMessage() {}

func (x *SpecimenHideTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenHideTxRequest.ProtoReflect.Descriptor instead.
func (*SpecimenHideTxRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{13}
}

func (x *SpecimenHideTxRequest) GetId() *Specimen_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SpecimenHideTxRequest) GetTx() *Specimen_HiddenTx {
	if x != nil {
		return x.Tx
	}
	return nil
}

type SpecimenHideTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenHideTxResponse) Reset() {
	*x = SpecimenHideTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenHideTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenHideTxResponse) ProtoMessage() {}

func (x *SpecimenHideTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenHideTxResponse.ProtoReflect.Descriptor instead.
func (*SpecimenHideTxResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{14}
}

func (x *SpecimenHideTxResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenUnHideTx
type SpecimenUnHideTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Specimen_Id       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tx *Specimen_HiddenTx `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *SpecimenUnHideTxRequest) Reset() {
	*x = SpecimenUnHideTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUnHideTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUnHideTxRequest) ProtoMessage() {}

func (x *SpecimenUnHideTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUnHideTxRequest.ProtoReflect.Descriptor instead.
func (*SpecimenUnHideTxRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{15}
}

func (x *SpecimenUnHideTxRequest) GetId() *Specimen_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SpecimenUnHideTxRequest) GetTx() *Specimen_HiddenTx {
	if x != nil {
		return x.Tx
	}
	return nil
}

type SpecimenUnHideTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenUnHideTxResponse) Reset() {
	*x = SpecimenUnHideTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUnHideTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUnHideTxResponse) ProtoMessage() {}

func (x *SpecimenUnHideTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUnHideTxResponse.ProtoReflect.Descriptor instead.
func (*SpecimenUnHideTxResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{16}
}

func (x *SpecimenUnHideTxResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// GetSuggestedUpdate
type GetSuggestedUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *SuggestedUpdate_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSuggestedUpdateRequest) Reset() {
	*x = GetSuggestedUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestedUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestedUpdateRequest) ProtoMessage() {}

func (x *GetSuggestedUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestedUpdateRequest.ProtoReflect.Descriptor instead.
func (*GetSuggestedUpdateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetSuggestedUpdateRequest) GetId() *SuggestedUpdate_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetSuggestedUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdate *SuggestedUpdate `protobuf:"bytes,1,opt,name=suggested_update,json=suggestedUpdate,proto3" json:"suggested_update,omitempty"`
}

func (x *GetSuggestedUpdateResponse) Reset() {
	*x = GetSuggestedUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestedUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestedUpdateResponse) ProtoMessage() {}

func (x *GetSuggestedUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestedUpdateResponse.ProtoReflect.Descriptor instead.
func (*GetSuggestedUpdateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetSuggestedUpdateResponse) GetSuggestedUpdate() *SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdate
	}
	return nil
}

// GetSuggestedUpdateBySpecimen
type GetSuggestedUpdateBySpecimenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Specimen_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSuggestedUpdateBySpecimenRequest) Reset() {
	*x = GetSuggestedUpdateBySpecimenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestedUpdateBySpecimenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestedUpdateBySpecimenRequest) ProtoMessage() {}

func (x *GetSuggestedUpdateBySpecimenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestedUpdateBySpecimenRequest.ProtoReflect.Descriptor instead.
func (*GetSuggestedUpdateBySpecimenRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetSuggestedUpdateBySpecimenRequest) GetId() *Specimen_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetSuggestedUpdateBySpecimenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdates []*SuggestedUpdate `protobuf:"bytes,1,rep,name=suggested_updates,json=suggestedUpdates,proto3" json:"suggested_updates,omitempty"`
}

func (x *GetSuggestedUpdateBySpecimenResponse) Reset() {
	*x = GetSuggestedUpdateBySpecimenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestedUpdateBySpecimenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestedUpdateBySpecimenResponse) ProtoMessage() {}

func (x *GetSuggestedUpdateBySpecimenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestedUpdateBySpecimenResponse.ProtoReflect.Descriptor instead.
func (*GetSuggestedUpdateBySpecimenResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetSuggestedUpdateBySpecimenResponse) GetSuggestedUpdates() []*SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdates
	}
	return nil
}

// GetSuggestedUpdateByCollection
type GetSuggestedUpdateByCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *rbac.Collection_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSuggestedUpdateByCollectionRequest) Reset() {
	*x = GetSuggestedUpdateByCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestedUpdateByCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestedUpdateByCollectionRequest) ProtoMessage() {}

func (x *GetSuggestedUpdateByCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestedUpdateByCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetSuggestedUpdateByCollectionRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetSuggestedUpdateByCollectionRequest) GetId() *rbac.Collection_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetSuggestedUpdateByCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdates []*SuggestedUpdate `protobuf:"bytes,1,rep,name=suggested_updates,json=suggestedUpdates,proto3" json:"suggested_updates,omitempty"`
}

func (x *GetSuggestedUpdateByCollectionResponse) Reset() {
	*x = GetSuggestedUpdateByCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestedUpdateByCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestedUpdateByCollectionResponse) ProtoMessage() {}

func (x *GetSuggestedUpdateByCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestedUpdateByCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetSuggestedUpdateByCollectionResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetSuggestedUpdateByCollectionResponse) GetSuggestedUpdates() []*SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdates
	}
	return nil
}

// GetSuggestedUpdateListResponse
type GetSuggestedUpdateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdates []*SuggestedUpdate `protobuf:"bytes,1,rep,name=suggested_updates,json=suggestedUpdates,proto3" json:"suggested_updates,omitempty"`
}

func (x *GetSuggestedUpdateListResponse) Reset() {
	*x = GetSuggestedUpdateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestedUpdateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestedUpdateListResponse) ProtoMessage() {}

func (x *GetSuggestedUpdateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestedUpdateListResponse.ProtoReflect.Descriptor instead.
func (*GetSuggestedUpdateListResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetSuggestedUpdateListResponse) GetSuggestedUpdates() []*SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdates
	}
	return nil
}

// SuggestedUpdateCreate
type SuggestedUpdateCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdate *SuggestedUpdate `protobuf:"bytes,1,opt,name=suggested_update,json=suggestedUpdate,proto3" json:"suggested_update,omitempty"`
}

func (x *SuggestedUpdateCreateRequest) Reset() {
	*x = SuggestedUpdateCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestedUpdateCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedUpdateCreateRequest) ProtoMessage() {}

func (x *SuggestedUpdateCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedUpdateCreateRequest.ProtoReflect.Descriptor instead.
func (*SuggestedUpdateCreateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{24}
}

func (x *SuggestedUpdateCreateRequest) GetSuggestedUpdate() *SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdate
	}
	return nil
}

type SuggestedUpdateCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdate *SuggestedUpdate `protobuf:"bytes,1,opt,name=suggested_update,json=suggestedUpdate,proto3" json:"suggested_update,omitempty"`
}

func (x *SuggestedUpdateCreateResponse) Reset() {
	*x = SuggestedUpdateCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestedUpdateCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedUpdateCreateResponse) ProtoMessage() {}

func (x *SuggestedUpdateCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedUpdateCreateResponse.ProtoReflect.Descriptor instead.
func (*SuggestedUpdateCreateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{25}
}

func (x *SuggestedUpdateCreateResponse) GetSuggestedUpdate() *SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdate
	}
	return nil
}

// SpecimenUpdateApprove
type SuggestedUpdateApproveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *SuggestedUpdate_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment string              `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *SuggestedUpdateApproveRequest) Reset() {
	*x = SuggestedUpdateApproveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestedUpdateApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedUpdateApproveRequest) ProtoMessage() {}

func (x *SuggestedUpdateApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedUpdateApproveRequest.ProtoReflect.Descriptor instead.
func (*SuggestedUpdateApproveRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{26}
}

func (x *SuggestedUpdateApproveRequest) GetId() *SuggestedUpdate_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SuggestedUpdateApproveRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type SuggestedUpdateApproveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdate *SuggestedUpdate `protobuf:"bytes,1,opt,name=suggested_update,json=suggestedUpdate,proto3" json:"suggested_update,omitempty"`
	Specimen        *Specimen        `protobuf:"bytes,2,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SuggestedUpdateApproveResponse) Reset() {
	*x = SuggestedUpdateApproveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestedUpdateApproveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedUpdateApproveResponse) ProtoMessage() {}

func (x *SuggestedUpdateApproveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedUpdateApproveResponse.ProtoReflect.Descriptor instead.
func (*SuggestedUpdateApproveResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{27}
}

func (x *SuggestedUpdateApproveResponse) GetSuggestedUpdate() *SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdate
	}
	return nil
}

func (x *SuggestedUpdateApproveResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenUpdateReject
type SuggestedUpdateRejectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *SuggestedUpdate_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment string              `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *SuggestedUpdateRejectRequest) Reset() {
	*x = SuggestedUpdateRejectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestedUpdateRejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedUpdateRejectRequest) ProtoMessage() {}

func (x *SuggestedUpdateRejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedUpdateRejectRequest.ProtoReflect.Descriptor instead.
func (*SuggestedUpdateRejectRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{28}
}

func (x *SuggestedUpdateRejectRequest) GetId() *SuggestedUpdate_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SuggestedUpdateRejectRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type SuggestedUpdateRejectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuggestedUpdate *SuggestedUpdate `protobuf:"bytes,1,opt,name=suggested_update,json=suggestedUpdate,proto3" json:"suggested_update,omitempty"`
}

func (x *SuggestedUpdateRejectResponse) Reset() {
	*x = SuggestedUpdateRejectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestedUpdateRejectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedUpdateRejectResponse) ProtoMessage() {}

func (x *SuggestedUpdateRejectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v2_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedUpdateRejectResponse.ProtoReflect.Descriptor instead.
func (*SuggestedUpdateRejectResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP(), []int{29}
}

func (x *SuggestedUpdateRejectResponse) GetSuggestedUpdate() *SuggestedUpdate {
	if x != nil {
		return x.SuggestedUpdate
	}
	return nil
}

var File_chaincode_ccbio_schema_v2_service_proto protoreflect.FileDescriptor

var file_chaincode_ccbio_schema_v2_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x63, 0x63, 0x62, 0x69,
	0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x63, 0x62, 0x69, 0x6f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x32, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x68,
	0x6c, 0x66, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f,
	0x72, 0x62, 0x61, 0x63, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4a, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x49, 0x64, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x13, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x22, 0x52, 0x0a, 0x17, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x22, 0x4d, 0x0a, 0x1e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x1f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x22, 0x80, 0x01, 0x0a, 0x19, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x48, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x1a, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x56,
	0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69,
	0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22,
	0x93, 0x01, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63,
	0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4d, 0x0a, 0x15,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x49, 0x64, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x16, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x54, 0x78, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x74, 0x78,
	0x22, 0x57, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x49, 0x64, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x02, 0x74,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x02, 0x74, 0x78, 0x22, 0x59, 0x0a, 0x18, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x22, 0x58, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x63,
	0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x64,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5b, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x75, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x11,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x10, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x25, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x77, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x10, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x11,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x10, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x1c, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x0f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x74, 0x0a, 0x1d, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x10, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63,
	0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x7e, 0x0a, 0x1d, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x1e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0f, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d,
	0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22, 0x7d, 0x0a,
	0x1c, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x63, 0x62, 0x69,
	0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x64, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x1d,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x10, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x0f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x32, 0xe5, 0x0f, 0x0a, 0x0f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x01, 0x12, 0x61,
	0x0a, 0x0f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x63, 0x63, 0x62, 0x69,
	0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10,
	0x01, 0x12, 0x8a, 0x01, 0x0a, 0x17, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x01, 0x12, 0x7b,
	0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0,
	0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x01, 0x12, 0x6f, 0x0a, 0x0e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c,
	0xe0, 0xd7, 0x18, 0x01, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x02, 0x12, 0x6f, 0x0a, 0x0e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0c, 0xe0, 0xd7, 0x18, 0x01, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x04, 0x12, 0x6f, 0x0a,
	0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x26, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x01, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x03, 0x12, 0x6f,
	0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78,
	0x12, 0x26, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x01, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x0a, 0x12,
	0x75, 0x0a, 0x10, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64,
	0x65, 0x54, 0x78, 0x12, 0x28, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e,
	0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x01, 0x8a, 0x9b,
	0x1c, 0x04, 0x08, 0x06, 0x10, 0x0a, 0x12, 0x7b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x63,
	0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08,
	0x06, 0x10, 0x05, 0x12, 0x99, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x12, 0x34, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x05, 0x12,
	0x9f, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10,
	0x05, 0x12, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x02, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06,
	0x10, 0x05, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x63,
	0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x63,
	0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18,
	0x01, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x06, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7, 0x18, 0x01, 0x8a, 0x9b, 0x1c, 0x04, 0x08,
	0x06, 0x10, 0x07, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63,
	0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xe0, 0xd7,
	0x18, 0x01, 0x8a, 0x9b, 0x1c, 0x04, 0x08, 0x06, 0x10, 0x08, 0x42, 0xc9, 0x01, 0x0a, 0x13, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x32, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e,
	0x6f, 0x76, 0x61, 0x33, 0x38, 0x2f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x6c, 0x69, 0x62,
	0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x2f, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76,
	0x32, 0x3b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x58,
	0xaa, 0x02, 0x0f, 0x43, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x56, 0x32, 0xca, 0x02, 0x0f, 0x43, 0x63, 0x62, 0x69, 0x6f, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1b, 0x43, 0x63, 0x62, 0x69, 0x6f, 0x5c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x63, 0x62, 0x69, 0x6f, 0x3a, 0x3a, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chaincode_ccbio_schema_v2_service_proto_rawDescOnce sync.Once
	file_chaincode_ccbio_schema_v2_service_proto_rawDescData = file_chaincode_ccbio_schema_v2_service_proto_rawDesc
)

func file_chaincode_ccbio_schema_v2_service_proto_rawDescGZIP() []byte {
	file_chaincode_ccbio_schema_v2_service_proto_rawDescOnce.Do(func() {
		file_chaincode_ccbio_schema_v2_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_chaincode_ccbio_schema_v2_service_proto_rawDescData)
	})
	return file_chaincode_ccbio_schema_v2_service_proto_rawDescData
}

var file_chaincode_ccbio_schema_v2_service_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_chaincode_ccbio_schema_v2_service_proto_goTypes = []interface{}{
	(*SpecimenGetRequest)(nil),                     // 0: ccbio.schema.v2.SpecimenGetRequest
	(*SpecimenGetResponse)(nil),                    // 1: ccbio.schema.v2.SpecimenGetResponse
	(*SpecimenGetListResponse)(nil),                // 2: ccbio.schema.v2.SpecimenGetListResponse
	(*SpecimenGetByCollectionRequest)(nil),         // 3: ccbio.schema.v2.SpecimenGetByCollectionRequest
	(*SpecimenGetByCollectionResponse)(nil),        // 4: ccbio.schema.v2.SpecimenGetByCollectionResponse
	(*SpecimenGetHistoryRequest)(nil),              // 5: ccbio.schema.v2.SpecimenGetHistoryRequest
	(*SpecimenGetHistoryResponse)(nil),             // 6: ccbio.schema.v2.SpecimenGetHistoryResponse
	(*SpecimenCreateRequest)(nil),                  // 7: ccbio.schema.v2.SpecimenCreateRequest
	(*SpecimenCreateResponse)(nil),                 // 8: ccbio.schema.v2.SpecimenCreateResponse
	(*SpecimenUpdateRequest)(nil),                  // 9: ccbio.schema.v2.SpecimenUpdateRequest
	(*SpecimenUpdateResponse)(nil),                 // 10: ccbio.schema.v2.SpecimenUpdateResponse
	(*SpecimenDeleteRequest)(nil),                  // 11: ccbio.schema.v2.SpecimenDeleteRequest
	(*SpecimenDeleteResponse)(nil),                 // 12: ccbio.schema.v2.SpecimenDeleteResponse
	(*SpecimenHideTxRequest)(nil),                  // 13: ccbio.schema.v2.SpecimenHideTxRequest
	(*SpecimenHideTxResponse)(nil),                 // 14: ccbio.schema.v2.SpecimenHideTxResponse
	(*SpecimenUnHideTxRequest)(nil),                // 15: ccbio.schema.v2.SpecimenUnHideTxRequest
	(*SpecimenUnHideTxResponse)(nil),               // 16: ccbio.schema.v2.SpecimenUnHideTxResponse
	(*GetSuggestedUpdateRequest)(nil),              // 17: ccbio.schema.v2.GetSuggestedUpdateRequest
	(*GetSuggestedUpdateResponse)(nil),             // 18: ccbio.schema.v2.GetSuggestedUpdateResponse
	(*GetSuggestedUpdateBySpecimenRequest)(nil),    // 19: ccbio.schema.v2.GetSuggestedUpdateBySpecimenRequest
	(*GetSuggestedUpdateBySpecimenResponse)(nil),   // 20: ccbio.schema.v2.GetSuggestedUpdateBySpecimenResponse
	(*GetSuggestedUpdateByCollectionRequest)(nil),  // 21: ccbio.schema.v2.GetSuggestedUpdateByCollectionRequest
	(*GetSuggestedUpdateByCollectionResponse)(nil), // 22: ccbio.schema.v2.GetSuggestedUpdateByCollectionResponse
	(*GetSuggestedUpdateListResponse)(nil),         // 23: ccbio.schema.v2.GetSuggestedUpdateListResponse
	(*SuggestedUpdateCreateRequest)(nil),           // 24: ccbio.schema.v2.SuggestedUpdateCreateRequest
	(*SuggestedUpdateCreateResponse)(nil),          // 25: ccbio.schema.v2.SuggestedUpdateCreateResponse
	(*SuggestedUpdateApproveRequest)(nil),          // 26: ccbio.schema.v2.SuggestedUpdateApproveRequest
	(*SuggestedUpdateApproveResponse)(nil),         // 27: ccbio.schema.v2.SuggestedUpdateApproveResponse
	(*SuggestedUpdateRejectRequest)(nil),           // 28: ccbio.schema.v2.SuggestedUpdateRejectRequest
	(*SuggestedUpdateRejectResponse)(nil),          // 29: ccbio.schema.v2.SuggestedUpdateRejectResponse
	(*Specimen_Id)(nil),                            // 30: ccbio.schema.v2.Specimen.Id
	(*Specimen)(nil),                               // 31: ccbio.schema.v2.Specimen
	(*rbac.Collection_Id)(nil),                     // 32: rbac.Collection.Id
	(*Specimen_History)(nil),                       // 33: ccbio.schema.v2.Specimen.History
	(*fieldmaskpb.FieldMask)(nil),                  // 34: google.protobuf.FieldMask
	(*Specimen_HiddenTx)(nil),                      // 35: ccbio.schema.v2.Specimen.HiddenTx
	(*SuggestedUpdate_Id)(nil),                     // 36: ccbio.schema.v2.SuggestedUpdate.Id
	(*SuggestedUpdate)(nil),                        // 37: ccbio.schema.v2.SuggestedUpdate
	(*emptypb.Empty)(nil),                          // 38: google.protobuf.Empty
}
var file_chaincode_ccbio_schema_v2_service_proto_depIdxs = []int32{
	30, // 0: ccbio.schema.v2.SpecimenGetRequest.id:type_name -> ccbio.schema.v2.Specimen.Id
	31, // 1: ccbio.schema.v2.SpecimenGetResponse.specimen:type_name -> ccbio.schema.v2.Specimen
	31, // 2: ccbio.schema.v2.SpecimenGetListResponse.specimens:type_name -> ccbio.schema.v2.Specimen
	32, // 3: ccbio.schema.v2.SpecimenGetByCollectionRequest.id:type_name -> rbac.Collection.Id
	31, // 4: ccbio.schema.v2.SpecimenGetByCollectionResponse.specimens:type_name -> ccbio.schema.v2.Specimen
	30, // 5: ccbio.schema.v2.SpecimenGetHistoryRequest.id:type_name -> ccbio.schema.v2.Specimen.Id
	33, // 6: ccbio.schema.v2.SpecimenGetHistoryResponse.history:type_name -> ccbio.schema.v2.Specimen.History
	31, // 7: ccbio.schema.v2.SpecimenCreateRequest.specimen:type_name -> ccbio.schema.v2.Specimen
	31, // 8: ccbio.schema.v2.SpecimenCreateResponse.specimen:type_name -> ccbio.schema.v2.Specimen
	31, // 9: ccbio.schema.v2.SpecimenUpdateRequest.specimen:type_name -> ccbio.schema.v2.Specimen
	34, // 10: ccbio.schema.v2.SpecimenUpdateRequest.update_mask:type_name -> google.protobuf.FieldMask
	31, // 11: ccbio.schema.v2.SpecimenUpdateResponse.specimen:type_name -> ccbio.schema.v2.Specimen
	34, // 12: ccbio.schema.v2.SpecimenUpdateResponse.update_mask:type_name -> google.protobuf.FieldMask
	30, // 13: ccbio.schema.v2.SpecimenDeleteRequest.id:type_name -> ccbio.schema.v2.Specimen.Id
	31, // 14: ccbio.schema.v2.SpecimenDeleteResponse.specimen:type_name -> ccbio.schema.v2.Specimen
	30, // 15: ccbio.schema.v2.SpecimenHideTxRequest.id:type_name -> ccbio.schema.v2.Specimen.Id
	35, // 16: ccbio.schema.v2.SpecimenHideTxRequest.tx:type_name -> ccbio.schema.v2.Specimen.HiddenTx
	31, // 17: ccbio.schema.v2.SpecimenHideTxResponse.specimen:type_name -> ccbio.schema.v2.Specimen
	30, // 18: ccbio.schema.v2.SpecimenUnHideTxRequest.id:type_name -> ccbio.schema.v2.Specimen.Id
	35, // 19: ccbio.schema.v2.SpecimenUnHideTxRequest.tx:type_name -> ccbio.schema.v2.Specimen.HiddenTx
	31, // 20: ccbio.schema.v2.SpecimenUnHideTxResponse.specimen:type_name -> ccbio.schema.v2.Specimen
	36, // 21: ccbio.schema.v2.GetSuggestedUpdateRequest.id:type_name -> ccbio.schema.v2.SuggestedUpdate.Id
	37, // 22: ccbio.schema.v2.GetSuggestedUpdateResponse.suggested_update:type_name -> ccbio.schema.v2.SuggestedUpdate
	30, // 23: ccbio.schema.v2.GetSuggestedUpdateBySpecimenRequest.id:type_name -> ccbio.schema.v2.Specimen.Id
	37, // 24: ccbio.schema.v2.GetSuggestedUpdateBySpecimenResponse.suggested_updates:type_name -> ccbio.schema.v2.SuggestedUpdate
	32, // 25: ccbio.schema.v2.GetSuggestedUpdateByCollectionRequest.id:type_name -> rbac.Collection.Id
	37, // 26: ccbio.schema.v2.GetSuggestedUpdateByCollectionResponse.suggested_updates:type_name -> ccbio.schema.v2.SuggestedUpdate
	37, // 27: ccbio.schema.v2.GetSuggestedUpdateListResponse.suggested_updates:type_name -> ccbio.schema.v2.SuggestedUpdate
	37, // 28: ccbio.schema.v2.SuggestedUpdateCreateRequest.suggested_update:type_name -> ccbio.schema.v2.SuggestedUpdate
	37, // 29: ccbio.schema.v2.SuggestedUpdateCreateResponse.suggested_update:type_name -> ccbio.schema.v2.SuggestedUpdate
	36, // 30: ccbio.schema.v2.SuggestedUpdateApproveRequest.id:type_name -> ccbio.schema.v2.SuggestedUpdate.Id
	37, // 31: ccbio.schema.v2.SuggestedUpdateApproveResponse.suggested_update:type_name -> ccbio.schema.v2.SuggestedUpdate
	31, // 32: ccbio.schema.v2.SuggestedUpdateApproveResponse.specimen:type_name -> ccbio.schema.v2.Specimen
	36, // 33: ccbio.schema.v2.SuggestedUpdateRejectRequest.id:type_name -> ccbio.schema.v2.SuggestedUpdate.Id
	37, // 34: ccbio.schema.v2.SuggestedUpdateRejectResponse.suggested_update:type_name -> ccbio.schema.v2.SuggestedUpdate
	0,  // 35: ccbio.schema.v2.SpecimenService.SpecimenGet:input_type -> ccbio.schema.v2.SpecimenGetRequest
	38, // 36: ccbio.schema.v2.SpecimenService.SpecimenGetList:input_type -> google.protobuf.Empty
	3,  // 37: ccbio.schema.v2.SpecimenService.SpecimenGetByCollection:input_type -> ccbio.schema.v2.SpecimenGetByCollectionRequest
	5,  // 38: ccbio.schema.v2.SpecimenService.SpecimenGetHistory:input_type -> ccbio.schema.v2.SpecimenGetHistoryRequest
	7,  // 39: ccbio.schema.v2.SpecimenService.SpecimenCreate:input_type -> ccbio.schema.v2.SpecimenCreateRequest
	9,  // 40: ccbio.schema.v2.SpecimenService.SpecimenUpdate:input_type -> ccbio.schema.v2.SpecimenUpdateRequest
	11, // 41: ccbio.schema.v2.SpecimenService.SpecimenDelete:input_type -> ccbio.schema.v2.SpecimenDeleteRequest
	13, // 42: ccbio.schema.v2.SpecimenService.SpecimenHideTx:input_type -> ccbio.schema.v2.SpecimenHideTxRequest
	15, // 43: ccbio.schema.v2.SpecimenService.SpecimenUnHideTx:input_type -> ccbio.schema.v2.SpecimenUnHideTxRequest
	17, // 44: ccbio.schema.v2.SpecimenService.GetSuggestedUpdate:input_type -> ccbio.schema.v2.GetSuggestedUpdateRequest
	19, // 45: ccbio.schema.v2.SpecimenService.GetSuggestedUpdateBySpecimen:input_type -> ccbio.schema.v2.GetSuggestedUpdateBySpecimenRequest
	21, // 46: ccbio.schema.v2.SpecimenService.GetSuggestedUpdateByCollection:input_type -> ccbio.schema.v2.GetSuggestedUpdateByCollectionRequest
	38, // 47: ccbio.schema.v2.SpecimenService.GetSuggestedUpdateList:input_type -> google.protobuf.Empty
	24, // 48: ccbio.schema.v2.SpecimenService.SuggestedUpdateCreate:input_type -> ccbio.schema.v2.SuggestedUpdateCreateRequest
	26, // 49: ccbio.schema.v2.SpecimenService.SuggestedUpdateApprove:input_type -> ccbio.schema.v2.SuggestedUpdateApproveRequest
	28, // 50: ccbio.schema.v2.SpecimenService.SuggestedUpdateReject:input_type -> ccbio.schema.v2.SuggestedUpdateRejectRequest
	1,  // 51: ccbio.schema.v2.SpecimenService.SpecimenGet:output_type -> ccbio.schema.v2.SpecimenGetResponse
	2,  // 52: ccbio.schema.v2.SpecimenService.SpecimenGetList:output_type -> ccbio.schema.v2.SpecimenGetListResponse
	4,  // 53: ccbio.schema.v2.SpecimenService.SpecimenGetByCollection:output_type -> ccbio.schema.v2.SpecimenGetByCollectionResponse
	6,  // 54: ccbio.schema.v2.SpecimenService.SpecimenGetHistory:output_type -> ccbio.schema.v2.SpecimenGetHistoryResponse
	8,  // 55: ccbio.schema.v2.SpecimenService.SpecimenCreate:output_type -> ccbio.schema.v2.SpecimenCreateResponse
	10, // 56: ccbio.schema.v2.SpecimenService.SpecimenUpdate:output_type -> ccbio.schema.v2.SpecimenUpdateResponse
	12, // 57: ccbio.schema.v2.SpecimenService.SpecimenDelete:output_type -> ccbio.schema.v2.SpecimenDeleteResponse
	14, // 58: ccbio.schema.v2.SpecimenService.SpecimenHideTx:output_type -> ccbio.schema.v2.SpecimenHideTxResponse
	16, // 59: ccbio.schema.v2.SpecimenService.SpecimenUnHideTx:output_type -> ccbio.schema.v2.SpecimenUnHideTxResponse
	18, // 60: ccbio.schema.v2.SpecimenService.GetSuggestedUpdate:output_type -> ccbio.schema.v2.GetSuggestedUpdateResponse
	20, // 61: ccbio.schema.v2.SpecimenService.GetSuggestedUpdateBySpecimen:output_type -> ccbio.schema.v2.GetSuggestedUpdateBySpecimenResponse
	22, // 62: ccbio.schema.v2.SpecimenService.GetSuggestedUpdateByCollection:output_type -> ccbio.schema.v2.GetSuggestedUpdateByCollectionResponse
	23, // 63: ccbio.schema.v2.SpecimenService.GetSuggestedUpdateList:output_type -> ccbio.schema.v2.GetSuggestedUpdateListResponse
	25, // 64: ccbio.schema.v2.SpecimenService.SuggestedUpdateCreate:output_type -> ccbio.schema.v2.SuggestedUpdateCreateResponse
	27, // 65: ccbio.schema.v2.SpecimenService.SuggestedUpdateApprove:output_type -> ccbio.schema.v2.SuggestedUpdateApproveResponse
	29, // 66: ccbio.schema.v2.SpecimenService.SuggestedUpdateReject:output_type -> ccbio.schema.v2.SuggestedUpdateRejectResponse
	51, // [51:67] is the sub-list for method output_type
	35, // [35:51] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_chaincode_ccbio_schema_v2_service_proto_init() }
func file_chaincode_ccbio_schema_v2_service_proto_init() {
	if File_chaincode_ccbio_schema_v2_service_proto != nil {
		return
	}
	file_chaincode_ccbio_schema_v2_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetByCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetByCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenHideTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenHideTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUnHideTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUnHideTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestedUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestedUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestedUpdateBySpecimenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestedUpdateBySpecimenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestedUpdateByCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestedUpdateByCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestedUpdateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestedUpdateCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestedUpdateCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestedUpdateApproveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestedUpdateApproveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestedUpdateRejectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v2_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestedUpdateRejectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chaincode_ccbio_schema_v2_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chaincode_ccbio_schema_v2_service_proto_goTypes,
		DependencyIndexes: file_chaincode_ccbio_schema_v2_service_proto_depIdxs,
		MessageInfos:      file_chaincode_ccbio_schema_v2_service_proto_msgTypes,
	}.Build()
	File_chaincode_ccbio_schema_v2_service_proto = out.File
	file_chaincode_ccbio_schema_v2_service_proto_rawDesc = nil
	file_chaincode_ccbio_schema_v2_service_proto_goTypes = nil
	file_chaincode_ccbio_schema_v2_service_proto_depIdxs = nil
}
