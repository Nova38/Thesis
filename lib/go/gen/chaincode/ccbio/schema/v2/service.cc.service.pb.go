// Code generated by proto-gen-go-hlf. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: chaincode/ccbio/schema/v2/service.proto

package schemav2

import (
	fmt "fmt"
	rbac "github.com/nova38/thesis/lib/go/fabric/rbac"
	rbac1 "github.com/nova38/thesis/lib/go/gen/rbac"
)

// Service SpecimenService
type SpecimenServiceInterface interface {
	// SpecimenGet
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	SpecimenGet(ctx rbac.AuthTxCtx, req *SpecimenGetRequest) (res *SpecimenGetResponse, err error)

	// SpecimenGetList
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	//
	// req is empty
	SpecimenGetList(ctx rbac.AuthTxCtx) (res *SpecimenGetListResponse, err error)

	// SpecimenGetByCollection
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	SpecimenGetByCollection(ctx rbac.AuthTxCtx, req *SpecimenGetByCollectionRequest) (res *SpecimenGetByCollectionResponse, err error)

	// SpecimenGetHistory
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	SpecimenGetHistory(ctx rbac.AuthTxCtx, req *SpecimenGetHistoryRequest) (res *SpecimenGetHistoryResponse, err error)

	// SpecimenCreate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_CREATE
	SpecimenCreate(ctx rbac.AuthTxCtx, req *SpecimenCreateRequest) (res *SpecimenCreateResponse, err error)

	// SpecimenUpdate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_EDIT
	SpecimenUpdate(ctx rbac.AuthTxCtx, req *SpecimenUpdateRequest) (res *SpecimenUpdateResponse, err error)

	// SpecimenDelete
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_DELETE
	SpecimenDelete(ctx rbac.AuthTxCtx, req *SpecimenDeleteRequest) (res *SpecimenDeleteResponse, err error)

	// SpecimenHideTx
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_HIDDEN_TX
	SpecimenHideTx(ctx rbac.AuthTxCtx, req *SpecimenHideTxRequest) (res *SpecimenHideTxResponse, err error)

	// SpecimenUnHideTx
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_HIDDEN_TX
	SpecimenUnHideTx(ctx rbac.AuthTxCtx, req *SpecimenUnHideTxRequest) (res *SpecimenUnHideTxResponse, err error)

	// GetSuggestedUpdate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	GetSuggestedUpdate(ctx rbac.AuthTxCtx, req *GetSuggestedUpdateRequest) (res *GetSuggestedUpdateResponse, err error)

	// GetSuggestedUpdateBySpecimen
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	GetSuggestedUpdateBySpecimen(ctx rbac.AuthTxCtx, req *GetSuggestedUpdateBySpecimenRequest) (res *GetSuggestedUpdateBySpecimenResponse, err error)

	// GetSuggestedUpdateByCollection
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	GetSuggestedUpdateByCollection(ctx rbac.AuthTxCtx, req *GetSuggestedUpdateByCollectionRequest) (res *GetSuggestedUpdateByCollectionResponse, err error)

	// GetSuggestedUpdateList
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	//
	// req is empty
	GetSuggestedUpdateList(ctx rbac.AuthTxCtx) (res *GetSuggestedUpdateListResponse, err error)

	// SuggestedUpdateCreate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_SUGGEST_EDIT
	SuggestedUpdateCreate(ctx rbac.AuthTxCtx, req *SuggestedUpdateCreateRequest) (res *SuggestedUpdateCreateResponse, err error)

	// SuggestedUpdateApprove
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_SUGGEST_APPROVE
	SuggestedUpdateApprove(ctx rbac.AuthTxCtx, req *SuggestedUpdateApproveRequest) (res *SuggestedUpdateApproveResponse, err error)

	// SuggestedUpdateReject
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_SUGGEST_REJECT
	SuggestedUpdateReject(ctx rbac.AuthTxCtx, req *SuggestedUpdateRejectRequest) (res *SuggestedUpdateRejectResponse, err error)
}

type SpecimenServiceBase struct {
}

func (s *SpecimenServiceBase) GetEvaluateTransactions() []string {
	return []string{
		"SpecimenGet",
		"SpecimenGetList",
		"SpecimenGetByCollection",
		"SpecimenGetHistory",
		"GetSuggestedUpdate",
		"GetSuggestedUpdateBySpecimen",
		"GetSuggestedUpdateByCollection",
		"GetSuggestedUpdateList",
	}
}

func SpecimenServiceGetTxOperation(txName string) (op *rbac1.ACL_Operation, err error) {
	switch txName {
	case "SpecimenGet":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "SpecimenGetList":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "SpecimenGetByCollection":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "SpecimenGetHistory":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "SpecimenCreate":
		// domain:DOMAIN_OBJECT action:ACTION_CREATE
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 2,
		}, nil
	case "SpecimenUpdate":
		// domain:DOMAIN_OBJECT action:ACTION_EDIT
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 4,
		}, nil
	case "SpecimenDelete":
		// domain:DOMAIN_OBJECT action:ACTION_DELETE
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 3,
		}, nil
	case "SpecimenHideTx":
		// domain:DOMAIN_OBJECT action:ACTION_HIDDEN_TX
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 10,
		}, nil
	case "SpecimenUnHideTx":
		// domain:DOMAIN_OBJECT action:ACTION_HIDDEN_TX
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 10,
		}, nil
	case "GetSuggestedUpdate":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW_SUGGEST
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "GetSuggestedUpdateBySpecimen":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW_SUGGEST
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "GetSuggestedUpdateByCollection":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW_SUGGEST
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "GetSuggestedUpdateList":
		// domain:DOMAIN_OBJECT action:ACTION_VIEW_SUGGEST
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "SuggestedUpdateCreate":
		// domain:DOMAIN_OBJECT action:ACTION_SUGGEST_EDIT
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 6,
		}, nil
	case "SuggestedUpdateApprove":
		// domain:DOMAIN_OBJECT action:ACTION_SUGGEST_APPROVE
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 7,
		}, nil
	case "SuggestedUpdateReject":
		// domain:DOMAIN_OBJECT action:ACTION_SUGGEST_REJECT
		return &rbac1.ACL_Operation{
			Domain: 6,
			Action: 8,
		}, nil
	default:
		return nil, fmt.Errorf("No operation defined for " + txName)
	}
	return nil, nil
}

func (s *SpecimenServiceBase) GetIgnoredFunctions() []string {
	return []string{"GetTxOperation"}
}
