// Code generated by protoc-gen-go-hlf. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: chaincode/ccbio/schema/v2/service.proto

package schemav2

import (
	fmt "fmt"
	state "github.com/nova38/thesis/lib/go/fabric/state"
	rbac "github.com/nova38/thesis/lib/go/gen/rbac"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Service BiochainSpecimenService
type BiochainSpecimenServiceInterface interface {
	// GetSpecimen
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	GetSpecimen(ctx state.LoggedTxCtxInterface, req *GetSpecimenRequest) (res *GetSpecimenResponse, err error)

	// GetSpecimenList
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	GetSpecimenList(ctx state.LoggedTxCtxInterface, req *emptypb.Empty) (res *GetSpecimenListResponse, err error)

	// GetSpecimenByCollection
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	GetSpecimenByCollection(ctx state.LoggedTxCtxInterface, req *GetSpecimenByCollectionRequest) (res *GetSpecimenByCollectionResponse, err error)

	// GetSpecimenHistory
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW
	GetSpecimenHistory(ctx state.LoggedTxCtxInterface, req *GetSpecimenHistoryRequest) (res *GetSpecimenHistoryResponse, err error)

	// SpecimenCreate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_CREATE
	SpecimenCreate(ctx state.LoggedTxCtxInterface, req *SpecimenCreateRequest) (res *SpecimenCreateResponse, err error)

	// SpecimenUpdate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_EDIT
	SpecimenUpdate(ctx state.LoggedTxCtxInterface, req *SpecimenUpdateRequest) (res *SpecimenUpdateResponse, err error)

	// SpecimenDelete
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_DELETE
	SpecimenDelete(ctx state.LoggedTxCtxInterface, req *SpecimenDeleteRequest) (res *SpecimenDeleteRequest, err error)

	// SpecimenHideTransaction
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_HIDDEN_TX
	SpecimenHideTransaction(ctx state.LoggedTxCtxInterface, req *SpecimenHideTxRequest) (res *SpecimenHideTxResponse, err error)

	// SpecimenUnHideTransaction
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_HIDDEN_TX
	SpecimenUnHideTransaction(ctx state.LoggedTxCtxInterface, req *SpecimenUnHideTxRequest) (res *SpecimenUnHideTxResponse, err error)

	// GetSuggestedUpdate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	GetSuggestedUpdate(ctx state.LoggedTxCtxInterface, req *GetSuggestedUpdateRequest) (res *GetSuggestedUpdateResponse, err error)

	// GetSuggestedUpdateBySpecimen
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	GetSuggestedUpdateBySpecimen(ctx state.LoggedTxCtxInterface, req *GetSuggestedUpdateBySpecimenRequest) (res *GetSuggestedUpdateBySpecimenResponse, err error)

	// GetSuggestedUpdateByCollection
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	GetSuggestedUpdateByCollection(ctx state.LoggedTxCtxInterface, req *GetSuggestedUpdateByCollectionRequest) (res *GetSuggestedUpdateByCollectionResponse, err error)

	// GetSuggestedUpdateList
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_VIEW_SUGGEST
	GetSuggestedUpdateList(ctx state.LoggedTxCtxInterface, req *emptypb.Empty) (res *GetSuggestedUpdateListResponse, err error)

	// SuggestedUpdateCreate
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_SUGGEST_EDIT
	SuggestedUpdateCreate(ctx state.LoggedTxCtxInterface, req *SuggestedUpdateCreateRequest) (res *SuggestedUpdateCreateResponse, err error)

	// SpecimenUpdateApprove
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_SUGGEST_APPROVE
	SpecimenUpdateApprove(ctx state.LoggedTxCtxInterface, req *SuggestedUpdateApproveRequest) (res *SuggestedUpdateApproveResponse, err error)

	// SpecimenUpdateReject
	//
	// # Operation:
	//   - Domain: DOMAIN_OBJECT
	//   - Action: ACTION_SUGGEST_REJECT
	SpecimenUpdateReject(ctx state.LoggedTxCtxInterface, req *SuggestedUpdateRejectRequest) (res *SuggestedUpdateRejectResponse, err error)
}

type BiochainSpecimenServiceBase struct {
}

func (s *BiochainSpecimenServiceBase) GetEvaluateTransactions() []string {
	return []string{
		"GetSpecimen",
		"GetSpecimenList",
		"GetSpecimenByCollection",
		"GetSpecimenHistory",
		"GetSuggestedUpdate",
		"GetSuggestedUpdateBySpecimen",
		"GetSuggestedUpdateByCollection",
		"GetSuggestedUpdateList",
	}
}

func BiochainSpecimenServiceGetTxOperation(txName string) (op *rbac.ACL_Operation, err error) {
	switch txName {
	case "GetSpecimen":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "GetSpecimenList":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "GetSpecimenByCollection":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "GetSpecimenHistory":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 1,
		}, nil
	case "SpecimenCreate":
		// domain:DOMAIN_OBJECT  action:ACTION_CREATE
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 2,
		}, nil
	case "SpecimenUpdate":
		// domain:DOMAIN_OBJECT  action:ACTION_EDIT
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 4,
		}, nil
	case "SpecimenDelete":
		// domain:DOMAIN_OBJECT  action:ACTION_DELETE
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 3,
		}, nil
	case "SpecimenHideTransaction":
		// domain:DOMAIN_OBJECT  action:ACTION_HIDDEN_TX
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 10,
		}, nil
	case "SpecimenUnHideTransaction":
		// domain:DOMAIN_OBJECT  action:ACTION_HIDDEN_TX
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 10,
		}, nil
	case "GetSuggestedUpdate":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW_SUGGEST
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "GetSuggestedUpdateBySpecimen":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW_SUGGEST
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "GetSuggestedUpdateByCollection":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW_SUGGEST
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "GetSuggestedUpdateList":
		// domain:DOMAIN_OBJECT  action:ACTION_VIEW_SUGGEST
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 5,
		}, nil
	case "SuggestedUpdateCreate":
		// domain:DOMAIN_OBJECT  action:ACTION_SUGGEST_EDIT
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 6,
		}, nil
	case "SpecimenUpdateApprove":
		// domain:DOMAIN_OBJECT  action:ACTION_SUGGEST_APPROVE
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 7,
		}, nil
	case "SpecimenUpdateReject":
		// domain:DOMAIN_OBJECT  action:ACTION_SUGGEST_REJECT
		return &rbac.ACL_Operation{
			Domain: 6,
			Action: 8,
		}, nil
	default:
		return nil, fmt.Errorf("No operation defined for " + txName)
	}
	return nil, nil
}

func (s *BiochainSpecimenServiceBase) GetIgnoredFunctions() []string {
	return []string{"GetTxOperation"}
}
