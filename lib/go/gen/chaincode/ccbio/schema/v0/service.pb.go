// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: chaincode/ccbio/schema/v0/service.proto

package v0

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/nova38/thesis/lib/go/gen/auth/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Evaluate
// SpecimenGet
type SpecimenGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specimen.Id id = 1 [(buf.validate.field).required = true];
	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	SpecimenId   string `protobuf:"bytes,2,opt,name=specimen_id,json=specimenId,proto3" json:"specimen_id,omitempty"`
}

func (x *SpecimenGetRequest) Reset() {
	*x = SpecimenGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetRequest) ProtoMessage() {}

func (x *SpecimenGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetRequest.ProtoReflect.Descriptor instead.
func (*SpecimenGetRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{0}
}

func (x *SpecimenGetRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *SpecimenGetRequest) GetSpecimenId() string {
	if x != nil {
		return x.SpecimenId
	}
	return ""
}

type SpecimenGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenGetResponse) Reset() {
	*x = SpecimenGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetResponse) ProtoMessage() {}

func (x *SpecimenGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{1}
}

func (x *SpecimenGetResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenGetList
type SpecimenGetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmark string `protobuf:"bytes,1,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SpecimenGetListRequest) Reset() {
	*x = SpecimenGetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetListRequest) ProtoMessage() {}

func (x *SpecimenGetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetListRequest.ProtoReflect.Descriptor instead.
func (*SpecimenGetListRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{2}
}

func (x *SpecimenGetListRequest) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

func (x *SpecimenGetListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SpecimenGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmark  string      `protobuf:"bytes,1,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
	Specimens []*Specimen `protobuf:"bytes,2,rep,name=specimens,proto3" json:"specimens,omitempty"`
}

func (x *SpecimenGetListResponse) Reset() {
	*x = SpecimenGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetListResponse) ProtoMessage() {}

func (x *SpecimenGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetListResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetListResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{3}
}

func (x *SpecimenGetListResponse) GetBookmark() string {
	if x != nil {
		return x.Bookmark
	}
	return ""
}

func (x *SpecimenGetListResponse) GetSpecimens() []*Specimen {
	if x != nil {
		return x.Specimens
	}
	return nil
}

// SpecimenGetByCollection
type SpecimenGetByCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
}

func (x *SpecimenGetByCollectionRequest) Reset() {
	*x = SpecimenGetByCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetByCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetByCollectionRequest) ProtoMessage() {}

func (x *SpecimenGetByCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetByCollectionRequest.ProtoReflect.Descriptor instead.
func (*SpecimenGetByCollectionRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{4}
}

func (x *SpecimenGetByCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type SpecimenGetByCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimens []*Specimen `protobuf:"bytes,1,rep,name=specimens,proto3" json:"specimens,omitempty"`
}

func (x *SpecimenGetByCollectionResponse) Reset() {
	*x = SpecimenGetByCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetByCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetByCollectionResponse) ProtoMessage() {}

func (x *SpecimenGetByCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetByCollectionResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetByCollectionResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{5}
}

func (x *SpecimenGetByCollectionResponse) GetSpecimens() []*Specimen {
	if x != nil {
		return x.Specimens
	}
	return nil
}

// SpecimenGetHistory
type SpecimenGetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId  string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	SpecimenId    string `protobuf:"bytes,2,opt,name=specimen_id,json=specimenId,proto3" json:"specimen_id,omitempty"`
	IncludeHidden bool   `protobuf:"varint,3,opt,name=include_hidden,json=includeHidden,proto3" json:"include_hidden,omitempty"`
}

func (x *SpecimenGetHistoryRequest) Reset() {
	*x = SpecimenGetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetHistoryRequest) ProtoMessage() {}

func (x *SpecimenGetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetHistoryRequest.ProtoReflect.Descriptor instead.
func (*SpecimenGetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{6}
}

func (x *SpecimenGetHistoryRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *SpecimenGetHistoryRequest) GetSpecimenId() string {
	if x != nil {
		return x.SpecimenId
	}
	return ""
}

func (x *SpecimenGetHistoryRequest) GetIncludeHidden() bool {
	if x != nil {
		return x.IncludeHidden
	}
	return false
}

type SpecimenGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History *v1.StateActivity `protobuf:"bytes,1,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *SpecimenGetHistoryResponse) Reset() {
	*x = SpecimenGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenGetHistoryResponse) ProtoMessage() {}

func (x *SpecimenGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*SpecimenGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{7}
}

func (x *SpecimenGetHistoryResponse) GetHistory() *v1.StateActivity {
	if x != nil {
		return x.History
	}
	return nil
}

// SpecimenCreate
type SpecimenCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenCreateRequest) Reset() {
	*x = SpecimenCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenCreateRequest) ProtoMessage() {}

func (x *SpecimenCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenCreateRequest.ProtoReflect.Descriptor instead.
func (*SpecimenCreateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{8}
}

func (x *SpecimenCreateRequest) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

type SpecimenCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenCreateResponse) Reset() {
	*x = SpecimenCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenCreateResponse) ProtoMessage() {}

func (x *SpecimenCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenCreateResponse.ProtoReflect.Descriptor instead.
func (*SpecimenCreateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{9}
}

func (x *SpecimenCreateResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenUpdate
type SpecimenUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen   *Specimen              `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *SpecimenUpdateRequest) Reset() {
	*x = SpecimenUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUpdateRequest) ProtoMessage() {}

func (x *SpecimenUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUpdateRequest.ProtoReflect.Descriptor instead.
func (*SpecimenUpdateRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{10}
}

func (x *SpecimenUpdateRequest) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

func (x *SpecimenUpdateRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type SpecimenUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen   *Specimen              `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *SpecimenUpdateResponse) Reset() {
	*x = SpecimenUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUpdateResponse) ProtoMessage() {}

func (x *SpecimenUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUpdateResponse.ProtoReflect.Descriptor instead.
func (*SpecimenUpdateResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{11}
}

func (x *SpecimenUpdateResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

func (x *SpecimenUpdateResponse) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// SpecimenDelete
type SpecimenDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	SpecimenId   string `protobuf:"bytes,2,opt,name=specimen_id,json=specimenId,proto3" json:"specimen_id,omitempty"`
}

func (x *SpecimenDeleteRequest) Reset() {
	*x = SpecimenDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenDeleteRequest) ProtoMessage() {}

func (x *SpecimenDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenDeleteRequest.ProtoReflect.Descriptor instead.
func (*SpecimenDeleteRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{12}
}

func (x *SpecimenDeleteRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *SpecimenDeleteRequest) GetSpecimenId() string {
	if x != nil {
		return x.SpecimenId
	}
	return ""
}

type SpecimenDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenDeleteResponse) Reset() {
	*x = SpecimenDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenDeleteResponse) ProtoMessage() {}

func (x *SpecimenDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenDeleteResponse.ProtoReflect.Descriptor instead.
func (*SpecimenDeleteResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{13}
}

func (x *SpecimenDeleteResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenHideTx
type SpecimenHideTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string            `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	SpecimenId   string            `protobuf:"bytes,2,opt,name=specimen_id,json=specimenId,proto3" json:"specimen_id,omitempty"`
	Tx           *v1.StateActivity `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *SpecimenHideTxRequest) Reset() {
	*x = SpecimenHideTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenHideTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenHideTxRequest) ProtoMessage() {}

func (x *SpecimenHideTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenHideTxRequest.ProtoReflect.Descriptor instead.
func (*SpecimenHideTxRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{14}
}

func (x *SpecimenHideTxRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *SpecimenHideTxRequest) GetSpecimenId() string {
	if x != nil {
		return x.SpecimenId
	}
	return ""
}

func (x *SpecimenHideTxRequest) GetTx() *v1.StateActivity {
	if x != nil {
		return x.Tx
	}
	return nil
}

type SpecimenHideTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenHideTxResponse) Reset() {
	*x = SpecimenHideTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenHideTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenHideTxResponse) ProtoMessage() {}

func (x *SpecimenHideTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenHideTxResponse.ProtoReflect.Descriptor instead.
func (*SpecimenHideTxResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{15}
}

func (x *SpecimenHideTxResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

// SpecimenUnHideTx
type SpecimenUnHideTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string            `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	SpecimenId   string            `protobuf:"bytes,2,opt,name=specimen_id,json=specimenId,proto3" json:"specimen_id,omitempty"`
	Tx           *v1.StateActivity `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *SpecimenUnHideTxRequest) Reset() {
	*x = SpecimenUnHideTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUnHideTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUnHideTxRequest) ProtoMessage() {}

func (x *SpecimenUnHideTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUnHideTxRequest.ProtoReflect.Descriptor instead.
func (*SpecimenUnHideTxRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{16}
}

func (x *SpecimenUnHideTxRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *SpecimenUnHideTxRequest) GetSpecimenId() string {
	if x != nil {
		return x.SpecimenId
	}
	return ""
}

func (x *SpecimenUnHideTxRequest) GetTx() *v1.StateActivity {
	if x != nil {
		return x.Tx
	}
	return nil
}

type SpecimenUnHideTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specimen *Specimen `protobuf:"bytes,1,opt,name=specimen,proto3" json:"specimen,omitempty"`
}

func (x *SpecimenUnHideTxResponse) Reset() {
	*x = SpecimenUnHideTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecimenUnHideTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecimenUnHideTxResponse) ProtoMessage() {}

func (x *SpecimenUnHideTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_ccbio_schema_v0_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecimenUnHideTxResponse.ProtoReflect.Descriptor instead.
func (*SpecimenUnHideTxResponse) Descriptor() ([]byte, []int) {
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP(), []int{17}
}

func (x *SpecimenUnHideTxResponse) GetSpecimen() *Specimen {
	if x != nil {
		return x.Specimen
	}
	return nil
}

var File_chaincode_ccbio_schema_v0_service_proto protoreflect.FileDescriptor

var file_chaincode_ccbio_schema_v0_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x63, 0x63, 0x62, 0x69,
	0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x30, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x63, 0x62, 0x69, 0x6f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2f, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f,
	0x76, 0x30, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x49, 0x64,
	0x22, 0x54, 0x0a, 0x13, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69,
	0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22, 0x51, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6e, 0x0a, 0x17, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x52, 0x09,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x22, 0x4d, 0x0a, 0x1e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1f, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x19, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x4b, 0x0a, 0x1a, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x56, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22, 0x57, 0x0a, 0x16,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x94, 0x01, 0x0a, 0x16,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x22, 0x6d, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x02, 0x74, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x02, 0x74, 0x78, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x22, 0x9c, 0x01, 0x0a, 0x17, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48,
	0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x74, 0x78, 0x22,
	0x59, 0x0a, 0x18, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64,
	0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x32, 0xa0, 0x08, 0x0a, 0x0f, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64,
	0x0a, 0x0b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x23, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a,
	0x1c, 0x02, 0x08, 0x0a, 0x12, 0x70, 0x0a, 0x0f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02,
	0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x12, 0x88, 0x01, 0x0a, 0x17, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08,
	0x0a, 0x12, 0x79, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x12, 0x12, 0x6d, 0x0a, 0x0e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0b, 0x12, 0x6d, 0x0a, 0x0e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e,
	0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a,
	0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c, 0x12, 0x6d, 0x0a, 0x0e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x63,
	0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0,
	0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0d, 0x12, 0x6d, 0x0a, 0x0e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x12, 0x26, 0x2e, 0x63, 0x63,
	0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x48, 0x69,
	0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7,
	0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x14, 0x12, 0x73, 0x0a, 0x10, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x12, 0x28, 0x2e, 0x63,
	0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x14, 0x42, 0xc0, 0x01,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x30, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x61, 0x33, 0x38, 0x2f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2f,
	0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x2f, 0x63, 0x63, 0x62, 0x69, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2f, 0x76, 0x30, 0xa2, 0x02, 0x03, 0x43, 0x53, 0x56, 0xaa, 0x02, 0x0f, 0x43, 0x63, 0x62,
	0x69, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x56, 0x30, 0xca, 0x02, 0x0f, 0x43,
	0x63, 0x62, 0x69, 0x6f, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x30, 0xe2, 0x02,
	0x1b, 0x43, 0x63, 0x62, 0x69, 0x6f, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x30,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x43,
	0x63, 0x62, 0x69, 0x6f, 0x3a, 0x3a, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x3a, 0x3a, 0x56, 0x30,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chaincode_ccbio_schema_v0_service_proto_rawDescOnce sync.Once
	file_chaincode_ccbio_schema_v0_service_proto_rawDescData = file_chaincode_ccbio_schema_v0_service_proto_rawDesc
)

func file_chaincode_ccbio_schema_v0_service_proto_rawDescGZIP() []byte {
	file_chaincode_ccbio_schema_v0_service_proto_rawDescOnce.Do(func() {
		file_chaincode_ccbio_schema_v0_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_chaincode_ccbio_schema_v0_service_proto_rawDescData)
	})
	return file_chaincode_ccbio_schema_v0_service_proto_rawDescData
}

var file_chaincode_ccbio_schema_v0_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_chaincode_ccbio_schema_v0_service_proto_goTypes = []interface{}{
	(*SpecimenGetRequest)(nil),              // 0: ccbio.schema.v0.SpecimenGetRequest
	(*SpecimenGetResponse)(nil),             // 1: ccbio.schema.v0.SpecimenGetResponse
	(*SpecimenGetListRequest)(nil),          // 2: ccbio.schema.v0.SpecimenGetListRequest
	(*SpecimenGetListResponse)(nil),         // 3: ccbio.schema.v0.SpecimenGetListResponse
	(*SpecimenGetByCollectionRequest)(nil),  // 4: ccbio.schema.v0.SpecimenGetByCollectionRequest
	(*SpecimenGetByCollectionResponse)(nil), // 5: ccbio.schema.v0.SpecimenGetByCollectionResponse
	(*SpecimenGetHistoryRequest)(nil),       // 6: ccbio.schema.v0.SpecimenGetHistoryRequest
	(*SpecimenGetHistoryResponse)(nil),      // 7: ccbio.schema.v0.SpecimenGetHistoryResponse
	(*SpecimenCreateRequest)(nil),           // 8: ccbio.schema.v0.SpecimenCreateRequest
	(*SpecimenCreateResponse)(nil),          // 9: ccbio.schema.v0.SpecimenCreateResponse
	(*SpecimenUpdateRequest)(nil),           // 10: ccbio.schema.v0.SpecimenUpdateRequest
	(*SpecimenUpdateResponse)(nil),          // 11: ccbio.schema.v0.SpecimenUpdateResponse
	(*SpecimenDeleteRequest)(nil),           // 12: ccbio.schema.v0.SpecimenDeleteRequest
	(*SpecimenDeleteResponse)(nil),          // 13: ccbio.schema.v0.SpecimenDeleteResponse
	(*SpecimenHideTxRequest)(nil),           // 14: ccbio.schema.v0.SpecimenHideTxRequest
	(*SpecimenHideTxResponse)(nil),          // 15: ccbio.schema.v0.SpecimenHideTxResponse
	(*SpecimenUnHideTxRequest)(nil),         // 16: ccbio.schema.v0.SpecimenUnHideTxRequest
	(*SpecimenUnHideTxResponse)(nil),        // 17: ccbio.schema.v0.SpecimenUnHideTxResponse
	(*Specimen)(nil),                        // 18: ccbio.schema.v0.Specimen
	(*v1.StateActivity)(nil),                // 19: auth.StateActivity
	(*fieldmaskpb.FieldMask)(nil),           // 20: google.protobuf.FieldMask
}
var file_chaincode_ccbio_schema_v0_service_proto_depIdxs = []int32{
	18, // 0: ccbio.schema.v0.SpecimenGetResponse.specimen:type_name -> ccbio.schema.v0.Specimen
	18, // 1: ccbio.schema.v0.SpecimenGetListResponse.specimens:type_name -> ccbio.schema.v0.Specimen
	18, // 2: ccbio.schema.v0.SpecimenGetByCollectionResponse.specimens:type_name -> ccbio.schema.v0.Specimen
	19, // 3: ccbio.schema.v0.SpecimenGetHistoryResponse.history:type_name -> auth.StateActivity
	18, // 4: ccbio.schema.v0.SpecimenCreateRequest.specimen:type_name -> ccbio.schema.v0.Specimen
	18, // 5: ccbio.schema.v0.SpecimenCreateResponse.specimen:type_name -> ccbio.schema.v0.Specimen
	18, // 6: ccbio.schema.v0.SpecimenUpdateRequest.specimen:type_name -> ccbio.schema.v0.Specimen
	20, // 7: ccbio.schema.v0.SpecimenUpdateRequest.update_mask:type_name -> google.protobuf.FieldMask
	18, // 8: ccbio.schema.v0.SpecimenUpdateResponse.specimen:type_name -> ccbio.schema.v0.Specimen
	20, // 9: ccbio.schema.v0.SpecimenUpdateResponse.update_mask:type_name -> google.protobuf.FieldMask
	18, // 10: ccbio.schema.v0.SpecimenDeleteResponse.specimen:type_name -> ccbio.schema.v0.Specimen
	19, // 11: ccbio.schema.v0.SpecimenHideTxRequest.tx:type_name -> auth.StateActivity
	18, // 12: ccbio.schema.v0.SpecimenHideTxResponse.specimen:type_name -> ccbio.schema.v0.Specimen
	19, // 13: ccbio.schema.v0.SpecimenUnHideTxRequest.tx:type_name -> auth.StateActivity
	18, // 14: ccbio.schema.v0.SpecimenUnHideTxResponse.specimen:type_name -> ccbio.schema.v0.Specimen
	0,  // 15: ccbio.schema.v0.SpecimenService.SpecimenGet:input_type -> ccbio.schema.v0.SpecimenGetRequest
	2,  // 16: ccbio.schema.v0.SpecimenService.SpecimenGetList:input_type -> ccbio.schema.v0.SpecimenGetListRequest
	4,  // 17: ccbio.schema.v0.SpecimenService.SpecimenGetByCollection:input_type -> ccbio.schema.v0.SpecimenGetByCollectionRequest
	6,  // 18: ccbio.schema.v0.SpecimenService.SpecimenGetHistory:input_type -> ccbio.schema.v0.SpecimenGetHistoryRequest
	8,  // 19: ccbio.schema.v0.SpecimenService.SpecimenCreate:input_type -> ccbio.schema.v0.SpecimenCreateRequest
	10, // 20: ccbio.schema.v0.SpecimenService.SpecimenUpdate:input_type -> ccbio.schema.v0.SpecimenUpdateRequest
	12, // 21: ccbio.schema.v0.SpecimenService.SpecimenDelete:input_type -> ccbio.schema.v0.SpecimenDeleteRequest
	14, // 22: ccbio.schema.v0.SpecimenService.SpecimenHideTx:input_type -> ccbio.schema.v0.SpecimenHideTxRequest
	16, // 23: ccbio.schema.v0.SpecimenService.SpecimenUnHideTx:input_type -> ccbio.schema.v0.SpecimenUnHideTxRequest
	1,  // 24: ccbio.schema.v0.SpecimenService.SpecimenGet:output_type -> ccbio.schema.v0.SpecimenGetResponse
	3,  // 25: ccbio.schema.v0.SpecimenService.SpecimenGetList:output_type -> ccbio.schema.v0.SpecimenGetListResponse
	5,  // 26: ccbio.schema.v0.SpecimenService.SpecimenGetByCollection:output_type -> ccbio.schema.v0.SpecimenGetByCollectionResponse
	7,  // 27: ccbio.schema.v0.SpecimenService.SpecimenGetHistory:output_type -> ccbio.schema.v0.SpecimenGetHistoryResponse
	9,  // 28: ccbio.schema.v0.SpecimenService.SpecimenCreate:output_type -> ccbio.schema.v0.SpecimenCreateResponse
	11, // 29: ccbio.schema.v0.SpecimenService.SpecimenUpdate:output_type -> ccbio.schema.v0.SpecimenUpdateResponse
	13, // 30: ccbio.schema.v0.SpecimenService.SpecimenDelete:output_type -> ccbio.schema.v0.SpecimenDeleteResponse
	15, // 31: ccbio.schema.v0.SpecimenService.SpecimenHideTx:output_type -> ccbio.schema.v0.SpecimenHideTxResponse
	17, // 32: ccbio.schema.v0.SpecimenService.SpecimenUnHideTx:output_type -> ccbio.schema.v0.SpecimenUnHideTxResponse
	24, // [24:33] is the sub-list for method output_type
	15, // [15:24] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_chaincode_ccbio_schema_v0_service_proto_init() }
func file_chaincode_ccbio_schema_v0_service_proto_init() {
	if File_chaincode_ccbio_schema_v0_service_proto != nil {
		return
	}
	file_chaincode_ccbio_schema_v0_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetByCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetByCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenHideTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenHideTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUnHideTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_ccbio_schema_v0_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecimenUnHideTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chaincode_ccbio_schema_v0_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chaincode_ccbio_schema_v0_service_proto_goTypes,
		DependencyIndexes: file_chaincode_ccbio_schema_v0_service_proto_depIdxs,
		MessageInfos:      file_chaincode_ccbio_schema_v0_service_proto_msgTypes,
	}.Build()
	File_chaincode_ccbio_schema_v0_service_proto = out.File
	file_chaincode_ccbio_schema_v0_service_proto_rawDesc = nil
	file_chaincode_ccbio_schema_v0_service_proto_goTypes = nil
	file_chaincode_ccbio_schema_v0_service_proto_depIdxs = nil
}
