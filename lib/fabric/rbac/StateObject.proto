syntax = "proto3";

package stateObjects;

import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";

enum TransactionType {
  INVOKE = 0;
  QUERY = 1;
}

extend google.protobuf.ServiceOptions {
  optional TransactionType type = 50005;
}

extend google.protobuf.MessageOptions {
  optional string namespace = 65432;
}

//message MyMessage {
//  option (my_option) = "Hello world!";
//}

message Collection {
  message Operations {
    enum Level {
      LEVEL_UNSPECIFIED = 0;
      LEVEL_VIEW = 1;

      LEVEL_EDIT = 2;
      LEVEL_SUGGEST_EDIT = 3;
      LEVEL_SUGGEST_APPROVE = 4;

      LEVEL_CREATE = 6;
      LEVEL_DELETE = 7;
      LEVEL_HIDDEN_TX = 8;

      LEVEL_INIT = 9;
    }

    message Membership {
      bool view = 1;
      bool edit = 2;
    }
    message Object {
      bool view = 1;
      bool create = 2;
      bool delete = 3;
      bool hidden_txs = 4;
    }
    message ObjectField {
      bool view = 1;
      bool edit = 2;
      bool suggest_edit = 3;
      bool suggest_approve = 4;
      bool suggest_reject = 5;
    }
  }
  message ObjectFieldPermission {
    map<int32, Operations.ObjectField> acl_object_field = 1;
  }

  string id = 1;

  string object_namespace = 2;
  // protobuf message descriptor
  google.protobuf.DescriptorProto object_descriptor = 3;

  // Declared Roles
  map<int32, string> roles = 4;

  // Keys must be valid role ids defined in the roles map
  map<int32, Operations.Membership> acl_role_permissions = 5;
  map<int32, Operations.Membership> acl_memberships = 6;
  map<int32, Operations.Object> acl_object = 7;

  // ObjectField Permissions
  // The Key must be a valid path for a field mask
  map<string, Operations.ObjectField> acl_object_field = 8;
}

// Users are a special type of object
message User {
  option (namespace) = "users";

  // The key for the ledger
  message Id {
    string msp_id = 1 [(buf.validate.field).string.min_len = 1];
    string id = 2 [(buf.validate.field).string.min_len = 1];
  }
  message List {
    repeated User items = 1;
  }

  Id id = 1 [(buf.validate.field).required = true];

  string name = 2 [(buf.validate.field).string.min_len = 1];
  string email = 3 [(buf.validate.field).string.email = true];
  string affiliation = 4;

  // Key is the collectionID
  map<string, int32> roles = 5;
}
