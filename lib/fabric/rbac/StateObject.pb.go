// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: lib/fabric/rbac/StateObject.proto

package rbac

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionType int32

const (
	TransactionType_INVOKE TransactionType = 0
	TransactionType_QUERY  TransactionType = 1
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "INVOKE",
		1: "QUERY",
	}
	TransactionType_value = map[string]int32{
		"INVOKE": 0,
		"QUERY":  1,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_fabric_rbac_StateObject_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_lib_fabric_rbac_StateObject_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0}
}

type Collection_Operations_Level int32

const (
	Collection_Operations_LEVEL_UNSPECIFIED     Collection_Operations_Level = 0
	Collection_Operations_LEVEL_VIEW            Collection_Operations_Level = 1
	Collection_Operations_LEVEL_EDIT            Collection_Operations_Level = 2
	Collection_Operations_LEVEL_SUGGEST_EDIT    Collection_Operations_Level = 3
	Collection_Operations_LEVEL_SUGGEST_APPROVE Collection_Operations_Level = 4
	Collection_Operations_LEVEL_CREATE          Collection_Operations_Level = 6
	Collection_Operations_LEVEL_DELETE          Collection_Operations_Level = 7
	Collection_Operations_LEVEL_HIDDEN_TX       Collection_Operations_Level = 8
	Collection_Operations_LEVEL_INIT            Collection_Operations_Level = 9
)

// Enum value maps for Collection_Operations_Level.
var (
	Collection_Operations_Level_name = map[int32]string{
		0: "LEVEL_UNSPECIFIED",
		1: "LEVEL_VIEW",
		2: "LEVEL_EDIT",
		3: "LEVEL_SUGGEST_EDIT",
		4: "LEVEL_SUGGEST_APPROVE",
		6: "LEVEL_CREATE",
		7: "LEVEL_DELETE",
		8: "LEVEL_HIDDEN_TX",
		9: "LEVEL_INIT",
	}
	Collection_Operations_Level_value = map[string]int32{
		"LEVEL_UNSPECIFIED":     0,
		"LEVEL_VIEW":            1,
		"LEVEL_EDIT":            2,
		"LEVEL_SUGGEST_EDIT":    3,
		"LEVEL_SUGGEST_APPROVE": 4,
		"LEVEL_CREATE":          6,
		"LEVEL_DELETE":          7,
		"LEVEL_HIDDEN_TX":       8,
		"LEVEL_INIT":            9,
	}
)

func (x Collection_Operations_Level) Enum() *Collection_Operations_Level {
	p := new(Collection_Operations_Level)
	*p = x
	return p
}

func (x Collection_Operations_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Collection_Operations_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_lib_fabric_rbac_StateObject_proto_enumTypes[1].Descriptor()
}

func (Collection_Operations_Level) Type() protoreflect.EnumType {
	return &file_lib_fabric_rbac_StateObject_proto_enumTypes[1]
}

func (x Collection_Operations_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Collection_Operations_Level.Descriptor instead.
func (Collection_Operations_Level) EnumDescriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0, 0, 0}
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjectNamespace string `protobuf:"bytes,2,opt,name=object_namespace,json=objectNamespace,proto3" json:"object_namespace,omitempty"`
	// protobuf message descriptor
	ObjectDescriptor *descriptorpb.DescriptorProto `protobuf:"bytes,3,opt,name=object_descriptor,json=objectDescriptor,proto3" json:"object_descriptor,omitempty"`
	// Declared Roles
	Roles map[int32]string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Keys must be valid role ids defined in the roles map
	AclRolePermissions map[int32]*Collection_Operations_Membership `protobuf:"bytes,5,rep,name=acl_role_permissions,json=aclRolePermissions,proto3" json:"acl_role_permissions,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AclMemberships     map[int32]*Collection_Operations_Membership `protobuf:"bytes,6,rep,name=acl_memberships,json=aclMemberships,proto3" json:"acl_memberships,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AclObject          map[int32]*Collection_Operations_Object     `protobuf:"bytes,7,rep,name=acl_object,json=aclObject,proto3" json:"acl_object,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ObjectField Permissions
	// The Key must be a valid path for a field mask
	AclObjectField map[string]*Collection_Operations_ObjectField `protobuf:"bytes,8,rep,name=acl_object_field,json=aclObjectField,proto3" json:"acl_object_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0}
}

func (x *Collection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Collection) GetObjectNamespace() string {
	if x != nil {
		return x.ObjectNamespace
	}
	return ""
}

func (x *Collection) GetObjectDescriptor() *descriptorpb.DescriptorProto {
	if x != nil {
		return x.ObjectDescriptor
	}
	return nil
}

func (x *Collection) GetRoles() map[int32]string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Collection) GetAclRolePermissions() map[int32]*Collection_Operations_Membership {
	if x != nil {
		return x.AclRolePermissions
	}
	return nil
}

func (x *Collection) GetAclMemberships() map[int32]*Collection_Operations_Membership {
	if x != nil {
		return x.AclMemberships
	}
	return nil
}

func (x *Collection) GetAclObject() map[int32]*Collection_Operations_Object {
	if x != nil {
		return x.AclObject
	}
	return nil
}

func (x *Collection) GetAclObjectField() map[string]*Collection_Operations_ObjectField {
	if x != nil {
		return x.AclObjectField
	}
	return nil
}

// Users are a special type of object
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *User_Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email       string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Affiliation string   `protobuf:"bytes,4,opt,name=affiliation,proto3" json:"affiliation,omitempty"`
	// Key is the collectionID
	Roles map[string]int32 `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() *User_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAffiliation() string {
	if x != nil {
		return x.Affiliation
	}
	return ""
}

func (x *User) GetRoles() map[string]int32 {
	if x != nil {
		return x.Roles
	}
	return nil
}

type Collection_Operations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Collection_Operations) Reset() {
	*x = Collection_Operations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection_Operations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection_Operations) ProtoMessage() {}

func (x *Collection_Operations) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection_Operations.ProtoReflect.Descriptor instead.
func (*Collection_Operations) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0, 0}
}

type Collection_ObjectFieldPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclObjectField map[int32]*Collection_Operations_ObjectField `protobuf:"bytes,1,rep,name=acl_object_field,json=aclObjectField,proto3" json:"acl_object_field,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Collection_ObjectFieldPermission) Reset() {
	*x = Collection_ObjectFieldPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection_ObjectFieldPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection_ObjectFieldPermission) ProtoMessage() {}

func (x *Collection_ObjectFieldPermission) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection_ObjectFieldPermission.ProtoReflect.Descriptor instead.
func (*Collection_ObjectFieldPermission) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Collection_ObjectFieldPermission) GetAclObjectField() map[int32]*Collection_Operations_ObjectField {
	if x != nil {
		return x.AclObjectField
	}
	return nil
}

type Collection_Operations_Membership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View bool `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Edit bool `protobuf:"varint,2,opt,name=edit,proto3" json:"edit,omitempty"`
}

func (x *Collection_Operations_Membership) Reset() {
	*x = Collection_Operations_Membership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection_Operations_Membership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection_Operations_Membership) ProtoMessage() {}

func (x *Collection_Operations_Membership) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection_Operations_Membership.ProtoReflect.Descriptor instead.
func (*Collection_Operations_Membership) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Collection_Operations_Membership) GetView() bool {
	if x != nil {
		return x.View
	}
	return false
}

func (x *Collection_Operations_Membership) GetEdit() bool {
	if x != nil {
		return x.Edit
	}
	return false
}

type Collection_Operations_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View      bool `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Create    bool `protobuf:"varint,2,opt,name=create,proto3" json:"create,omitempty"`
	Delete    bool `protobuf:"varint,3,opt,name=delete,proto3" json:"delete,omitempty"`
	HiddenTxs bool `protobuf:"varint,4,opt,name=hidden_txs,json=hiddenTxs,proto3" json:"hidden_txs,omitempty"`
}

func (x *Collection_Operations_Object) Reset() {
	*x = Collection_Operations_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection_Operations_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection_Operations_Object) ProtoMessage() {}

func (x *Collection_Operations_Object) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection_Operations_Object.ProtoReflect.Descriptor instead.
func (*Collection_Operations_Object) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Collection_Operations_Object) GetView() bool {
	if x != nil {
		return x.View
	}
	return false
}

func (x *Collection_Operations_Object) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

func (x *Collection_Operations_Object) GetDelete() bool {
	if x != nil {
		return x.Delete
	}
	return false
}

func (x *Collection_Operations_Object) GetHiddenTxs() bool {
	if x != nil {
		return x.HiddenTxs
	}
	return false
}

type Collection_Operations_ObjectField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View           bool `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Edit           bool `protobuf:"varint,2,opt,name=edit,proto3" json:"edit,omitempty"`
	SuggestEdit    bool `protobuf:"varint,3,opt,name=suggest_edit,json=suggestEdit,proto3" json:"suggest_edit,omitempty"`
	SuggestApprove bool `protobuf:"varint,4,opt,name=suggest_approve,json=suggestApprove,proto3" json:"suggest_approve,omitempty"`
	SuggestReject  bool `protobuf:"varint,5,opt,name=suggest_reject,json=suggestReject,proto3" json:"suggest_reject,omitempty"`
}

func (x *Collection_Operations_ObjectField) Reset() {
	*x = Collection_Operations_ObjectField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection_Operations_ObjectField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection_Operations_ObjectField) ProtoMessage() {}

func (x *Collection_Operations_ObjectField) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection_Operations_ObjectField.ProtoReflect.Descriptor instead.
func (*Collection_Operations_ObjectField) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *Collection_Operations_ObjectField) GetView() bool {
	if x != nil {
		return x.View
	}
	return false
}

func (x *Collection_Operations_ObjectField) GetEdit() bool {
	if x != nil {
		return x.Edit
	}
	return false
}

func (x *Collection_Operations_ObjectField) GetSuggestEdit() bool {
	if x != nil {
		return x.SuggestEdit
	}
	return false
}

func (x *Collection_Operations_ObjectField) GetSuggestApprove() bool {
	if x != nil {
		return x.SuggestApprove
	}
	return false
}

func (x *Collection_Operations_ObjectField) GetSuggestReject() bool {
	if x != nil {
		return x.SuggestReject
	}
	return false
}

// The key for the ledger
type User_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MspId string `protobuf:"bytes,1,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *User_Id) Reset() {
	*x = User_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Id) ProtoMessage() {}

func (x *User_Id) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Id.ProtoReflect.Descriptor instead.
func (*User_Id) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{1, 0}
}

func (x *User_Id) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *User_Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type User_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*User `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *User_List) Reset() {
	*x = User_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_List) ProtoMessage() {}

func (x *User_List) ProtoReflect() protoreflect.Message {
	mi := &file_lib_fabric_rbac_StateObject_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_List.ProtoReflect.Descriptor instead.
func (*User_List) Descriptor() ([]byte, []int) {
	return file_lib_fabric_rbac_StateObject_proto_rawDescGZIP(), []int{1, 1}
}

func (x *User_List) GetItems() []*User {
	if x != nil {
		return x.Items
	}
	return nil
}

var file_lib_fabric_rbac_StateObject_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*TransactionType)(nil),
		Field:         50005,
		Name:          "stateObjects.type",
		Tag:           "varint,50005,opt,name=type,enum=stateObjects.TransactionType",
		Filename:      "lib/fabric/rbac/StateObject.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         65432,
		Name:          "stateObjects.namespace",
		Tag:           "bytes,65432,opt,name=namespace",
		Filename:      "lib/fabric/rbac/StateObject.proto",
	},
}

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional stateObjects.TransactionType type = 50005;
	E_Type = &file_lib_fabric_rbac_StateObject_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string namespace = 65432;
	E_Namespace = &file_lib_fabric_rbac_StateObject_proto_extTypes[1]
)

var File_lib_fabric_rbac_StateObject_proto protoreflect.FileDescriptor

var file_lib_fabric_rbac_StateObject_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6c, 0x69, 0x62, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2f, 0x72, 0x62, 0x61,
	0x63, 0x2f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc4, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x61, 0x63, 0x6c, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x6c,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x61, 0x63, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x55, 0x0a, 0x0f, 0x61, 0x63, 0x6c, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0e, 0x61, 0x63, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12,
	0x46, 0x0a, 0x0a, 0x61, 0x63, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x63,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x56, 0x0a, 0x10, 0x61, 0x63, 0x6c, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0e, 0x61, 0x63, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a,
	0x97, 0x04, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x34,
	0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x65, 0x64, 0x69, 0x74, 0x1a, 0x6b, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78,
	0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x0b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x64, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xba, 0x01, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x53, 0x55, 0x47, 0x47, 0x45, 0x53, 0x54, 0x5f, 0x45,
	0x44, 0x49, 0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x53,
	0x55, 0x47, 0x47, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x48, 0x49,
	0x44, 0x44, 0x45, 0x4e, 0x5f, 0x54, 0x58, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x09, 0x1a, 0xf9, 0x01, 0x0a, 0x15, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x10, 0x61, 0x63, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63,
	0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x61, 0x63, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x1a, 0x72, 0x0a, 0x13, 0x41, 0x63, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x75, 0x0a, 0x17, 0x41, 0x63, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x71, 0x0a, 0x13, 0x41, 0x63, 0x6c, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x68, 0x0a, 0x0e, 0x41, 0x63, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x72, 0x0a, 0x13, 0x41, 0x63, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x2d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x49, 0x64, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x06, 0x6d, 0x73, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x05, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x1a, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x09, 0xc2,
	0xf9, 0x1f, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2a, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x49,
	0x4e, 0x56, 0x4f, 0x4b, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x52, 0x59,
	0x10, 0x01, 0x3a, 0x57, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd5, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x42, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x98, 0xff, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42,
	0xa5, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x42, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x61, 0x33, 0x38, 0x2f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x2f, 0x72, 0x62, 0x61, 0x63, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa,
	0x02, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0xca, 0x02,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0xe2, 0x02, 0x18,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lib_fabric_rbac_StateObject_proto_rawDescOnce sync.Once
	file_lib_fabric_rbac_StateObject_proto_rawDescData = file_lib_fabric_rbac_StateObject_proto_rawDesc
)

func file_lib_fabric_rbac_StateObject_proto_rawDescGZIP() []byte {
	file_lib_fabric_rbac_StateObject_proto_rawDescOnce.Do(func() {
		file_lib_fabric_rbac_StateObject_proto_rawDescData = protoimpl.X.CompressGZIP(file_lib_fabric_rbac_StateObject_proto_rawDescData)
	})
	return file_lib_fabric_rbac_StateObject_proto_rawDescData
}

var file_lib_fabric_rbac_StateObject_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lib_fabric_rbac_StateObject_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_lib_fabric_rbac_StateObject_proto_goTypes = []interface{}{
	(TransactionType)(0),                     // 0: stateObjects.TransactionType
	(Collection_Operations_Level)(0),         // 1: stateObjects.Collection.Operations.Level
	(*Collection)(nil),                       // 2: stateObjects.Collection
	(*User)(nil),                             // 3: stateObjects.User
	(*Collection_Operations)(nil),            // 4: stateObjects.Collection.Operations
	(*Collection_ObjectFieldPermission)(nil), // 5: stateObjects.Collection.ObjectFieldPermission
	nil,                                      // 6: stateObjects.Collection.RolesEntry
	nil,                                      // 7: stateObjects.Collection.AclRolePermissionsEntry
	nil,                                      // 8: stateObjects.Collection.AclMembershipsEntry
	nil,                                      // 9: stateObjects.Collection.AclObjectEntry
	nil,                                      // 10: stateObjects.Collection.AclObjectFieldEntry
	(*Collection_Operations_Membership)(nil), // 11: stateObjects.Collection.Operations.Membership
	(*Collection_Operations_Object)(nil),     // 12: stateObjects.Collection.Operations.Object
	(*Collection_Operations_ObjectField)(nil), // 13: stateObjects.Collection.Operations.ObjectField
	nil,                                  // 14: stateObjects.Collection.ObjectFieldPermission.AclObjectFieldEntry
	(*User_Id)(nil),                      // 15: stateObjects.User.Id
	(*User_List)(nil),                    // 16: stateObjects.User.List
	nil,                                  // 17: stateObjects.User.RolesEntry
	(*descriptorpb.DescriptorProto)(nil), // 18: google.protobuf.DescriptorProto
	(*descriptorpb.ServiceOptions)(nil),  // 19: google.protobuf.ServiceOptions
	(*descriptorpb.MessageOptions)(nil),  // 20: google.protobuf.MessageOptions
}
var file_lib_fabric_rbac_StateObject_proto_depIdxs = []int32{
	18, // 0: stateObjects.Collection.object_descriptor:type_name -> google.protobuf.DescriptorProto
	6,  // 1: stateObjects.Collection.roles:type_name -> stateObjects.Collection.RolesEntry
	7,  // 2: stateObjects.Collection.acl_role_permissions:type_name -> stateObjects.Collection.AclRolePermissionsEntry
	8,  // 3: stateObjects.Collection.acl_memberships:type_name -> stateObjects.Collection.AclMembershipsEntry
	9,  // 4: stateObjects.Collection.acl_object:type_name -> stateObjects.Collection.AclObjectEntry
	10, // 5: stateObjects.Collection.acl_object_field:type_name -> stateObjects.Collection.AclObjectFieldEntry
	15, // 6: stateObjects.User.id:type_name -> stateObjects.User.Id
	17, // 7: stateObjects.User.roles:type_name -> stateObjects.User.RolesEntry
	14, // 8: stateObjects.Collection.ObjectFieldPermission.acl_object_field:type_name -> stateObjects.Collection.ObjectFieldPermission.AclObjectFieldEntry
	11, // 9: stateObjects.Collection.AclRolePermissionsEntry.value:type_name -> stateObjects.Collection.Operations.Membership
	11, // 10: stateObjects.Collection.AclMembershipsEntry.value:type_name -> stateObjects.Collection.Operations.Membership
	12, // 11: stateObjects.Collection.AclObjectEntry.value:type_name -> stateObjects.Collection.Operations.Object
	13, // 12: stateObjects.Collection.AclObjectFieldEntry.value:type_name -> stateObjects.Collection.Operations.ObjectField
	13, // 13: stateObjects.Collection.ObjectFieldPermission.AclObjectFieldEntry.value:type_name -> stateObjects.Collection.Operations.ObjectField
	3,  // 14: stateObjects.User.List.items:type_name -> stateObjects.User
	19, // 15: stateObjects.type:extendee -> google.protobuf.ServiceOptions
	20, // 16: stateObjects.namespace:extendee -> google.protobuf.MessageOptions
	0,  // 17: stateObjects.type:type_name -> stateObjects.TransactionType
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	17, // [17:18] is the sub-list for extension type_name
	15, // [15:17] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_lib_fabric_rbac_StateObject_proto_init() }
func file_lib_fabric_rbac_StateObject_proto_init() {
	if File_lib_fabric_rbac_StateObject_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lib_fabric_rbac_StateObject_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection_Operations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection_ObjectFieldPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection_Operations_Membership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection_Operations_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection_Operations_ObjectField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lib_fabric_rbac_StateObject_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lib_fabric_rbac_StateObject_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_lib_fabric_rbac_StateObject_proto_goTypes,
		DependencyIndexes: file_lib_fabric_rbac_StateObject_proto_depIdxs,
		EnumInfos:         file_lib_fabric_rbac_StateObject_proto_enumTypes,
		MessageInfos:      file_lib_fabric_rbac_StateObject_proto_msgTypes,
		ExtensionInfos:    file_lib_fabric_rbac_StateObject_proto_extTypes,
	}.Build()
	File_lib_fabric_rbac_StateObject_proto = out.File
	file_lib_fabric_rbac_StateObject_proto_rawDesc = nil
	file_lib_fabric_rbac_StateObject_proto_goTypes = nil
	file_lib_fabric_rbac_StateObject_proto_depIdxs = nil
}
