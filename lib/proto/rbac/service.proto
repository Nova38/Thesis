syntax = "proto3";

package rbac;

import "rbac/rbac.proto";
import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/type.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

import "google/protobuf/field_mask.proto";
import "key/key.proto";





service AuthService {
    /**
     * GetCurrentUser: Returns the current user.
     *
     * Returns the current user.
     * Requires:
     * - User submitting the transaction is a registered user.
     */
    rpc GetCurrentUser(google.protobuf.Empty) returns (User);

    /**
     * Returns the current user id.
     * Requires:
     * - User submitting the transaction is a registered user.
     */
    rpc GetCurrentUserId(google.protobuf.Empty) returns (User.Id);


    rpc GetUserList(google.protobuf.Empty) returns (User.List);
    rpc GetUser(GetUserRequest) returns (User);

    rpc UserRegister(UserRegisterRequest) returns (User);
    rpc UserUpdateMembership(UpdateMembershipRequest) returns (User);

    //  // Collection functions
    
    rpc GetCollectionList(google.protobuf.Empty) returns (Collection.List);
    rpc GetCollection(GetCollectionRequest) returns (Collection);
    
    rpc CollectionCreate(CollectionCreateRequest) returns (Collection);
    rpc CollectionUpdate(CollectionUpdateRequest) returns (Collection);
    
}


message GetUserRequest {
    User.Id id = 1;
}

message UserRegisterRequest {
    User user = 1;
}

message UpdateMembershipRequest {
    User.Id id = 1;
    Collection.Id collection_id = 2;
    int32 role = 3;
}


message GetCollectionRequest {
    Collection.Id id = 1;
}

message CollectionCreateRequest {
    Collection collection = 1;
}

message CollectionUpdateRequest {
    Collection collection = 1;
    google.protobuf.FieldMask update_mask = 2;
}
