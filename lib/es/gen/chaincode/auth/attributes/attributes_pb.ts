// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file chaincode/auth/attributes/attributes.proto (package chaincode.auth.attributes, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message chaincode.auth.attributes.AttributesBootstrapRequest
 */
export class AttributesBootstrapRequest extends Message<AttributesBootstrapRequest> {
  constructor(data?: PartialMessage<AttributesBootstrapRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chaincode.auth.attributes.AttributesBootstrapRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttributesBootstrapRequest {
    return new AttributesBootstrapRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttributesBootstrapRequest {
    return new AttributesBootstrapRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttributesBootstrapRequest {
    return new AttributesBootstrapRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AttributesBootstrapRequest | PlainMessage<AttributesBootstrapRequest> | undefined, b: AttributesBootstrapRequest | PlainMessage<AttributesBootstrapRequest> | undefined): boolean {
    return proto3.util.equals(AttributesBootstrapRequest, a, b);
  }
}

/**
 * @generated from message chaincode.auth.attributes.AttributesBootstrapResponse
 */
export class AttributesBootstrapResponse extends Message<AttributesBootstrapResponse> {
  constructor(data?: PartialMessage<AttributesBootstrapResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chaincode.auth.attributes.AttributesBootstrapResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttributesBootstrapResponse {
    return new AttributesBootstrapResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttributesBootstrapResponse {
    return new AttributesBootstrapResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttributesBootstrapResponse {
    return new AttributesBootstrapResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AttributesBootstrapResponse | PlainMessage<AttributesBootstrapResponse> | undefined, b: AttributesBootstrapResponse | PlainMessage<AttributesBootstrapResponse> | undefined): boolean {
    return proto3.util.equals(AttributesBootstrapResponse, a, b);
  }
}

