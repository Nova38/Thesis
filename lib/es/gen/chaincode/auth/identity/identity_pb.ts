// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file chaincode/auth/identity/identity.proto (package chaincode.auth.identity, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message chaincode.auth.identity.IdentityBootstrapRequest
 */
export class IdentityBootstrapRequest extends Message<IdentityBootstrapRequest> {
  constructor(data?: PartialMessage<IdentityBootstrapRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chaincode.auth.identity.IdentityBootstrapRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IdentityBootstrapRequest {
    return new IdentityBootstrapRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IdentityBootstrapRequest {
    return new IdentityBootstrapRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IdentityBootstrapRequest {
    return new IdentityBootstrapRequest().fromJsonString(jsonString, options);
  }

  static equals(a: IdentityBootstrapRequest | PlainMessage<IdentityBootstrapRequest> | undefined, b: IdentityBootstrapRequest | PlainMessage<IdentityBootstrapRequest> | undefined): boolean {
    return proto3.util.equals(IdentityBootstrapRequest, a, b);
  }
}

/**
 * @generated from message chaincode.auth.identity.IdentityBootstrapResponse
 */
export class IdentityBootstrapResponse extends Message<IdentityBootstrapResponse> {
  constructor(data?: PartialMessage<IdentityBootstrapResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "chaincode.auth.identity.IdentityBootstrapResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IdentityBootstrapResponse {
    return new IdentityBootstrapResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IdentityBootstrapResponse {
    return new IdentityBootstrapResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IdentityBootstrapResponse {
    return new IdentityBootstrapResponse().fromJsonString(jsonString, options);
  }

  static equals(a: IdentityBootstrapResponse | PlainMessage<IdentityBootstrapResponse> | undefined, b: IdentityBootstrapResponse | PlainMessage<IdentityBootstrapResponse> | undefined): boolean {
    return proto3.util.equals(IdentityBootstrapResponse, a, b);
  }
}

