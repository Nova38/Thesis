// @generated by protoc-gen-es v1.3.1
// @generated from file chaincode/auth/common/generic.proto (package auth.common, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { HiddenTx, HiddenTxList, History, Item, ItemKey, Operation, Reference, ReferenceKey, Suggestion, User } from "../../../auth/v1/auth_pb.js";

/**
 * ══════════════════════════════════ Helper ═════════════════════════════════════
 * ────────────────────────────────── Query ──────────────────────────────────────
 *
 * @generated from message auth.common.GetAllTypesResponse
 */
export declare class GetAllTypesResponse extends Message<GetAllTypesResponse> {
  /**
   * @generated from field: repeated string types = 1;
   */
  types: string[];

  constructor(data?: PartialMessage<GetAllTypesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.GetAllTypesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTypesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTypesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTypesResponse;

  static equals(a: GetAllTypesResponse | PlainMessage<GetAllTypesResponse> | undefined, b: GetAllTypesResponse | PlainMessage<GetAllTypesResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.GetCurrentUserResponse
 */
export declare class GetCurrentUserResponse extends Message<GetCurrentUserResponse> {
  /**
   * @generated from field: auth.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<GetCurrentUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.GetCurrentUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrentUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrentUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrentUserResponse;

  static equals(a: GetCurrentUserResponse | PlainMessage<GetCurrentUserResponse> | undefined, b: GetCurrentUserResponse | PlainMessage<GetCurrentUserResponse> | undefined): boolean;
}

/**
 * ──────────────────────────────── Invoke ───────────────────────────────────────
 *
 * @generated from message auth.common.BootstrapRequest
 */
export declare class BootstrapRequest extends Message<BootstrapRequest> {
  /**
   * @generated from field: repeated string default_types = 1;
   */
  defaultTypes: string[];

  /**
   * @generated from field: bool add_default_setup = 2;
   */
  addDefaultSetup: boolean;

  constructor(data?: PartialMessage<BootstrapRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.BootstrapRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BootstrapRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BootstrapRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BootstrapRequest;

  static equals(a: BootstrapRequest | PlainMessage<BootstrapRequest> | undefined, b: BootstrapRequest | PlainMessage<BootstrapRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.BootstrapResponse
 */
export declare class BootstrapResponse extends Message<BootstrapResponse> {
  constructor(data?: PartialMessage<BootstrapResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.BootstrapResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BootstrapResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BootstrapResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BootstrapResponse;

  static equals(a: BootstrapResponse | PlainMessage<BootstrapResponse> | undefined, b: BootstrapResponse | PlainMessage<BootstrapResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.AuthorizeOperationRequest
 */
export declare class AuthorizeOperationRequest extends Message<AuthorizeOperationRequest> {
  /**
   * @generated from field: auth.Operation operation = 2;
   */
  operation?: Operation;

  constructor(data?: PartialMessage<AuthorizeOperationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.AuthorizeOperationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorizeOperationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorizeOperationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorizeOperationRequest;

  static equals(a: AuthorizeOperationRequest | PlainMessage<AuthorizeOperationRequest> | undefined, b: AuthorizeOperationRequest | PlainMessage<AuthorizeOperationRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.AuthorizeOperationResponse
 */
export declare class AuthorizeOperationResponse extends Message<AuthorizeOperationResponse> {
  /**
   * @generated from field: bool authorized = 1;
   */
  authorized: boolean;

  constructor(data?: PartialMessage<AuthorizeOperationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.AuthorizeOperationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorizeOperationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorizeOperationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorizeOperationResponse;

  static equals(a: AuthorizeOperationResponse | PlainMessage<AuthorizeOperationResponse> | undefined, b: AuthorizeOperationResponse | PlainMessage<AuthorizeOperationResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.CreateUserResponse
 */
export declare class CreateUserResponse extends Message<CreateUserResponse> {
  /**
   * @generated from field: auth.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<CreateUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.CreateUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserResponse;

  static equals(a: CreateUserResponse | PlainMessage<CreateUserResponse> | undefined, b: CreateUserResponse | PlainMessage<CreateUserResponse> | undefined): boolean;
}

/**
 * Get
 *
 * @generated from message auth.common.GetRequest
 */
export declare class GetRequest extends Message<GetRequest> {
  /**
   * @generated from field: auth.Item item = 3;
   */
  item?: Item;

  constructor(data?: PartialMessage<GetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.GetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRequest;

  static equals(a: GetRequest | PlainMessage<GetRequest> | undefined, b: GetRequest | PlainMessage<GetRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.GetResponse
 */
export declare class GetResponse extends Message<GetResponse> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  constructor(data?: PartialMessage<GetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.GetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetResponse;

  static equals(a: GetResponse | PlainMessage<GetResponse> | undefined, b: GetResponse | PlainMessage<GetResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.ListRequest
 */
export declare class ListRequest extends Message<ListRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: auth.Item item = 3;
   */
  item?: Item;

  constructor(data?: PartialMessage<ListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ListRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRequest;

  static equals(a: ListRequest | PlainMessage<ListRequest> | undefined, b: ListRequest | PlainMessage<ListRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ListResponse
 */
export declare class ListResponse extends Message<ListResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.Item items = 2;
   */
  items: Item[];

  constructor(data?: PartialMessage<ListResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ListResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListResponse;

  static equals(a: ListResponse | PlainMessage<ListResponse> | undefined, b: ListResponse | PlainMessage<ListResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.ListByCollectionRequest
 */
export declare class ListByCollectionRequest extends Message<ListByCollectionRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: auth.Item item = 3;
   */
  item?: Item;

  constructor(data?: PartialMessage<ListByCollectionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ListByCollectionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListByCollectionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListByCollectionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListByCollectionRequest;

  static equals(a: ListByCollectionRequest | PlainMessage<ListByCollectionRequest> | undefined, b: ListByCollectionRequest | PlainMessage<ListByCollectionRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ListByCollectionResponse
 */
export declare class ListByCollectionResponse extends Message<ListByCollectionResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.Item items = 2;
   */
  items: Item[];

  constructor(data?: PartialMessage<ListByCollectionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ListByCollectionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListByCollectionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListByCollectionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListByCollectionResponse;

  static equals(a: ListByCollectionResponse | PlainMessage<ListByCollectionResponse> | undefined, b: ListByCollectionResponse | PlainMessage<ListByCollectionResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.ListByAttrsRequest
 */
export declare class ListByAttrsRequest extends Message<ListByAttrsRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: auth.Item item = 3;
   */
  item?: Item;

  /**
   * @generated from field: int32 num_attrs = 4;
   */
  numAttrs: number;

  constructor(data?: PartialMessage<ListByAttrsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ListByAttrsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListByAttrsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListByAttrsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListByAttrsRequest;

  static equals(a: ListByAttrsRequest | PlainMessage<ListByAttrsRequest> | undefined, b: ListByAttrsRequest | PlainMessage<ListByAttrsRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ListByAttrsResponse
 */
export declare class ListByAttrsResponse extends Message<ListByAttrsResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.Item items = 2;
   */
  items: Item[];

  constructor(data?: PartialMessage<ListByAttrsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ListByAttrsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListByAttrsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListByAttrsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListByAttrsResponse;

  static equals(a: ListByAttrsResponse | PlainMessage<ListByAttrsResponse> | undefined, b: ListByAttrsResponse | PlainMessage<ListByAttrsResponse> | undefined): boolean;
}

/**
 * ──────────────────────────────── Invoke ───────────────────────────────────────
 * Create
 *
 * @generated from message auth.common.CreateRequest
 */
export declare class CreateRequest extends Message<CreateRequest> {
  /**
   * @generated from field: auth.Item item = 2;
   */
  item?: Item;

  constructor(data?: PartialMessage<CreateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.CreateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRequest;

  static equals(a: CreateRequest | PlainMessage<CreateRequest> | undefined, b: CreateRequest | PlainMessage<CreateRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.CreateResponse
 */
export declare class CreateResponse extends Message<CreateResponse> {
  /**
   * @generated from field: auth.Item item = 2;
   */
  item?: Item;

  constructor(data?: PartialMessage<CreateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.CreateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateResponse;

  static equals(a: CreateResponse | PlainMessage<CreateResponse> | undefined, b: CreateResponse | PlainMessage<CreateResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.UpdateRequest
 */
export declare class UpdateRequest extends Message<UpdateRequest> {
  /**
   * @generated from field: auth.Item item = 2;
   */
  item?: Item;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.UpdateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRequest;

  static equals(a: UpdateRequest | PlainMessage<UpdateRequest> | undefined, b: UpdateRequest | PlainMessage<UpdateRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.UpdateResponse
 */
export declare class UpdateResponse extends Message<UpdateResponse> {
  /**
   * @generated from field: auth.Item item = 2;
   */
  item?: Item;

  constructor(data?: PartialMessage<UpdateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.UpdateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateResponse;

  static equals(a: UpdateResponse | PlainMessage<UpdateResponse> | undefined, b: UpdateResponse | PlainMessage<UpdateResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.DeleteRequest
 */
export declare class DeleteRequest extends Message<DeleteRequest> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  /**
   * @generated from field: string reason = 4;
   */
  reason: string;

  constructor(data?: PartialMessage<DeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.DeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRequest;

  static equals(a: DeleteRequest | PlainMessage<DeleteRequest> | undefined, b: DeleteRequest | PlainMessage<DeleteRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
  /**
   * @generated from field: auth.Item item = 2;
   */
  item?: Item;

  constructor(data?: PartialMessage<DeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.DeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;

  static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}

/**
 * History
 *
 * @generated from message auth.common.HistoryRequest
 */
export declare class HistoryRequest extends Message<HistoryRequest> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  constructor(data?: PartialMessage<HistoryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.HistoryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HistoryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HistoryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HistoryRequest;

  static equals(a: HistoryRequest | PlainMessage<HistoryRequest> | undefined, b: HistoryRequest | PlainMessage<HistoryRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.HistoryResponse
 */
export declare class HistoryResponse extends Message<HistoryResponse> {
  /**
   * repeated auth. s = 1;
   *
   * @generated from field: auth.History history = 2;
   */
  history?: History;

  constructor(data?: PartialMessage<HistoryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.HistoryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HistoryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HistoryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HistoryResponse;

  static equals(a: HistoryResponse | PlainMessage<HistoryResponse> | undefined, b: HistoryResponse | PlainMessage<HistoryResponse> | undefined): boolean;
}

/**
 * HiddenTx
 *
 * @generated from message auth.common.HiddenTxRequest
 */
export declare class HiddenTxRequest extends Message<HiddenTxRequest> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  constructor(data?: PartialMessage<HiddenTxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.HiddenTxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HiddenTxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HiddenTxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HiddenTxRequest;

  static equals(a: HiddenTxRequest | PlainMessage<HiddenTxRequest> | undefined, b: HiddenTxRequest | PlainMessage<HiddenTxRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.HiddenTxResponse
 */
export declare class HiddenTxResponse extends Message<HiddenTxResponse> {
  /**
   * @generated from field: string collection_id = 1;
   */
  collectionId: string;

  /**
   * @generated from field: repeated auth.HiddenTx hidden_txs = 2;
   */
  hiddenTxs: HiddenTx[];

  constructor(data?: PartialMessage<HiddenTxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.HiddenTxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HiddenTxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HiddenTxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HiddenTxResponse;

  static equals(a: HiddenTxResponse | PlainMessage<HiddenTxResponse> | undefined, b: HiddenTxResponse | PlainMessage<HiddenTxResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.HideTxRequest
 */
export declare class HideTxRequest extends Message<HideTxRequest> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  /**
   * @generated from field: auth.HiddenTx hidden_tx = 2;
   */
  hiddenTx?: HiddenTx;

  constructor(data?: PartialMessage<HideTxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.HideTxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HideTxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HideTxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HideTxRequest;

  static equals(a: HideTxRequest | PlainMessage<HideTxRequest> | undefined, b: HideTxRequest | PlainMessage<HideTxRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.HideTxResponse
 */
export declare class HideTxResponse extends Message<HideTxResponse> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  /**
   * @generated from field: auth.HiddenTxList hidden_txs = 2;
   */
  hiddenTxs?: HiddenTxList;

  constructor(data?: PartialMessage<HideTxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.HideTxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HideTxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HideTxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HideTxResponse;

  static equals(a: HideTxResponse | PlainMessage<HideTxResponse> | undefined, b: HideTxResponse | PlainMessage<HideTxResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.UnHideTxRequest
 */
export declare class UnHideTxRequest extends Message<UnHideTxRequest> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  /**
   * @generated from field: string tx_id = 2;
   */
  txId: string;

  constructor(data?: PartialMessage<UnHideTxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.UnHideTxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnHideTxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnHideTxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnHideTxRequest;

  static equals(a: UnHideTxRequest | PlainMessage<UnHideTxRequest> | undefined, b: UnHideTxRequest | PlainMessage<UnHideTxRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.UnHideTxResponse
 */
export declare class UnHideTxResponse extends Message<UnHideTxResponse> {
  /**
   * @generated from field: auth.Item item = 1;
   */
  item?: Item;

  /**
   * @generated from field: auth.HiddenTxList hidden_txs = 2;
   */
  hiddenTxs?: HiddenTxList;

  constructor(data?: PartialMessage<UnHideTxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.UnHideTxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnHideTxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnHideTxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnHideTxResponse;

  static equals(a: UnHideTxResponse | PlainMessage<UnHideTxResponse> | undefined, b: UnHideTxResponse | PlainMessage<UnHideTxResponse> | undefined): boolean;
}

/**
 * ════════════════════════════════ References ═════════════════════════════════════
 * ──────────────────────────────── Query ──────────────────────────────────────────
 *
 * @generated from message auth.common.ReferenceRequest
 */
export declare class ReferenceRequest extends Message<ReferenceRequest> {
  /**
   * buf:lint:ignore FIELD_SAME_TYPE
   *
   * @generated from field: auth.ReferenceKey reference = 1;
   */
  reference?: ReferenceKey;

  constructor(data?: PartialMessage<ReferenceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceRequest;

  static equals(a: ReferenceRequest | PlainMessage<ReferenceRequest> | undefined, b: ReferenceRequest | PlainMessage<ReferenceRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceResponse
 */
export declare class ReferenceResponse extends Message<ReferenceResponse> {
  /**
   * @generated from field: bool exists = 1;
   */
  exists: boolean;

  /**
   * @generated from field: auth.Reference reference = 2;
   */
  reference?: Reference;

  constructor(data?: PartialMessage<ReferenceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceResponse;

  static equals(a: ReferenceResponse | PlainMessage<ReferenceResponse> | undefined, b: ReferenceResponse | PlainMessage<ReferenceResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceByCollectionRequest
 */
export declare class ReferenceByCollectionRequest extends Message<ReferenceByCollectionRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string collection_id = 3;
   */
  collectionId: string;

  constructor(data?: PartialMessage<ReferenceByCollectionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceByCollectionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceByCollectionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceByCollectionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceByCollectionRequest;

  static equals(a: ReferenceByCollectionRequest | PlainMessage<ReferenceByCollectionRequest> | undefined, b: ReferenceByCollectionRequest | PlainMessage<ReferenceByCollectionRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceByCollectionResponse
 */
export declare class ReferenceByCollectionResponse extends Message<ReferenceByCollectionResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.ReferenceKey references = 2;
   */
  references: ReferenceKey[];

  constructor(data?: PartialMessage<ReferenceByCollectionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceByCollectionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceByCollectionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceByCollectionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceByCollectionResponse;

  static equals(a: ReferenceByCollectionResponse | PlainMessage<ReferenceByCollectionResponse> | undefined, b: ReferenceByCollectionResponse | PlainMessage<ReferenceByCollectionResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceByPartialKeyRequest
 */
export declare class ReferenceByPartialKeyRequest extends Message<ReferenceByPartialKeyRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: auth.ReferenceKey reference = 3;
   */
  reference?: ReferenceKey;

  constructor(data?: PartialMessage<ReferenceByPartialKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceByPartialKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceByPartialKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceByPartialKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceByPartialKeyRequest;

  static equals(a: ReferenceByPartialKeyRequest | PlainMessage<ReferenceByPartialKeyRequest> | undefined, b: ReferenceByPartialKeyRequest | PlainMessage<ReferenceByPartialKeyRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceByPartialKeyResponse
 */
export declare class ReferenceByPartialKeyResponse extends Message<ReferenceByPartialKeyResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.ReferenceKey references = 2;
   */
  references: ReferenceKey[];

  constructor(data?: PartialMessage<ReferenceByPartialKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceByPartialKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceByPartialKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceByPartialKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceByPartialKeyResponse;

  static equals(a: ReferenceByPartialKeyResponse | PlainMessage<ReferenceByPartialKeyResponse> | undefined, b: ReferenceByPartialKeyResponse | PlainMessage<ReferenceByPartialKeyResponse> | undefined): boolean;
}

/**
 * Get all of the collections
 *
 * @generated from message auth.common.ReferenceByItemRequest
 */
export declare class ReferenceByItemRequest extends Message<ReferenceByItemRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string collection_id = 3;
   */
  collectionId: string;

  /**
   * @generated from field: auth.ItemKey item_key = 4;
   */
  itemKey?: ItemKey;

  constructor(data?: PartialMessage<ReferenceByItemRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceByItemRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceByItemRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceByItemRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceByItemRequest;

  static equals(a: ReferenceByItemRequest | PlainMessage<ReferenceByItemRequest> | undefined, b: ReferenceByItemRequest | PlainMessage<ReferenceByItemRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceByItemResponse
 */
export declare class ReferenceByItemResponse extends Message<ReferenceByItemResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.ReferenceKey references = 2;
   */
  references: ReferenceKey[];

  constructor(data?: PartialMessage<ReferenceByItemResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceByItemResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceByItemResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceByItemResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceByItemResponse;

  static equals(a: ReferenceByItemResponse | PlainMessage<ReferenceByItemResponse> | undefined, b: ReferenceByItemResponse | PlainMessage<ReferenceByItemResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceCreateRequest
 */
export declare class ReferenceCreateRequest extends Message<ReferenceCreateRequest> {
  /**
   * @generated from field: auth.ReferenceKey refKey = 1;
   */
  refKey?: ReferenceKey;

  constructor(data?: PartialMessage<ReferenceCreateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceCreateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceCreateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceCreateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceCreateRequest;

  static equals(a: ReferenceCreateRequest | PlainMessage<ReferenceCreateRequest> | undefined, b: ReferenceCreateRequest | PlainMessage<ReferenceCreateRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceCreateResponse
 */
export declare class ReferenceCreateResponse extends Message<ReferenceCreateResponse> {
  /**
   * @generated from field: auth.ReferenceKey refKey = 1;
   */
  refKey?: ReferenceKey;

  constructor(data?: PartialMessage<ReferenceCreateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceCreateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceCreateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceCreateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceCreateResponse;

  static equals(a: ReferenceCreateResponse | PlainMessage<ReferenceCreateResponse> | undefined, b: ReferenceCreateResponse | PlainMessage<ReferenceCreateResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceDeleteRequest
 */
export declare class ReferenceDeleteRequest extends Message<ReferenceDeleteRequest> {
  /**
   * @generated from field: auth.ReferenceKey refKey = 1;
   */
  refKey?: ReferenceKey;

  constructor(data?: PartialMessage<ReferenceDeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceDeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceDeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceDeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceDeleteRequest;

  static equals(a: ReferenceDeleteRequest | PlainMessage<ReferenceDeleteRequest> | undefined, b: ReferenceDeleteRequest | PlainMessage<ReferenceDeleteRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.ReferenceDeleteResponse
 */
export declare class ReferenceDeleteResponse extends Message<ReferenceDeleteResponse> {
  /**
   * @generated from field: auth.ReferenceKey refKey = 1;
   */
  refKey?: ReferenceKey;

  constructor(data?: PartialMessage<ReferenceDeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.ReferenceDeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceDeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceDeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceDeleteResponse;

  static equals(a: ReferenceDeleteResponse | PlainMessage<ReferenceDeleteResponse> | undefined, b: ReferenceDeleteResponse | PlainMessage<ReferenceDeleteResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionRequest
 */
export declare class SuggestionRequest extends Message<SuggestionRequest> {
  /**
   * @generated from field: auth.ItemKey item_key = 1;
   */
  itemKey?: ItemKey;

  /**
   * @generated from field: string suggestion_id = 2;
   */
  suggestionId: string;

  constructor(data?: PartialMessage<SuggestionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionRequest;

  static equals(a: SuggestionRequest | PlainMessage<SuggestionRequest> | undefined, b: SuggestionRequest | PlainMessage<SuggestionRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionResponse
 */
export declare class SuggestionResponse extends Message<SuggestionResponse> {
  /**
   * @generated from field: auth.Suggestion suggestion = 1;
   */
  suggestion?: Suggestion;

  constructor(data?: PartialMessage<SuggestionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionResponse;

  static equals(a: SuggestionResponse | PlainMessage<SuggestionResponse> | undefined, b: SuggestionResponse | PlainMessage<SuggestionResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionListRequest
 */
export declare class SuggestionListRequest extends Message<SuggestionListRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * auth.Item item = 3;
   *
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  constructor(data?: PartialMessage<SuggestionListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionListRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionListRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionListRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionListRequest;

  static equals(a: SuggestionListRequest | PlainMessage<SuggestionListRequest> | undefined, b: SuggestionListRequest | PlainMessage<SuggestionListRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionListResponse
 */
export declare class SuggestionListResponse extends Message<SuggestionListResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.Suggestion suggestions = 2;
   */
  suggestions: Suggestion[];

  constructor(data?: PartialMessage<SuggestionListResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionListResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionListResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionListResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionListResponse;

  static equals(a: SuggestionListResponse | PlainMessage<SuggestionListResponse> | undefined, b: SuggestionListResponse | PlainMessage<SuggestionListResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionListByCollectionRequest
 */
export declare class SuggestionListByCollectionRequest extends Message<SuggestionListByCollectionRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string collection_id = 3;
   */
  collectionId: string;

  constructor(data?: PartialMessage<SuggestionListByCollectionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionListByCollectionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionListByCollectionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionListByCollectionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionListByCollectionRequest;

  static equals(a: SuggestionListByCollectionRequest | PlainMessage<SuggestionListByCollectionRequest> | undefined, b: SuggestionListByCollectionRequest | PlainMessage<SuggestionListByCollectionRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionListByCollectionResponse
 */
export declare class SuggestionListByCollectionResponse extends Message<SuggestionListByCollectionResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.Suggestion suggestions = 2;
   */
  suggestions: Suggestion[];

  constructor(data?: PartialMessage<SuggestionListByCollectionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionListByCollectionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionListByCollectionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionListByCollectionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionListByCollectionResponse;

  static equals(a: SuggestionListByCollectionResponse | PlainMessage<SuggestionListByCollectionResponse> | undefined, b: SuggestionListByCollectionResponse | PlainMessage<SuggestionListByCollectionResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionListByItemRequest
 */
export declare class SuggestionListByItemRequest extends Message<SuggestionListByItemRequest> {
  /**
   * @generated from field: auth.ItemKey item_key = 1;
   */
  itemKey?: ItemKey;

  constructor(data?: PartialMessage<SuggestionListByItemRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionListByItemRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionListByItemRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionListByItemRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionListByItemRequest;

  static equals(a: SuggestionListByItemRequest | PlainMessage<SuggestionListByItemRequest> | undefined, b: SuggestionListByItemRequest | PlainMessage<SuggestionListByItemRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionListByItemResponse
 */
export declare class SuggestionListByItemResponse extends Message<SuggestionListByItemResponse> {
  /**
   * @generated from field: repeated auth.Suggestion suggestions = 1;
   */
  suggestions: Suggestion[];

  constructor(data?: PartialMessage<SuggestionListByItemResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionListByItemResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionListByItemResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionListByItemResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionListByItemResponse;

  static equals(a: SuggestionListByItemResponse | PlainMessage<SuggestionListByItemResponse> | undefined, b: SuggestionListByItemResponse | PlainMessage<SuggestionListByItemResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionByPartialKeyRequest
 */
export declare class SuggestionByPartialKeyRequest extends Message<SuggestionByPartialKeyRequest> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: int32 num_attrs = 3;
   */
  numAttrs: number;

  /**
   * @generated from field: auth.ItemKey item_key = 4;
   */
  itemKey?: ItemKey;

  /**
   * @generated from field: string suggestion_id = 5;
   */
  suggestionId: string;

  constructor(data?: PartialMessage<SuggestionByPartialKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionByPartialKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionByPartialKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionByPartialKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionByPartialKeyRequest;

  static equals(a: SuggestionByPartialKeyRequest | PlainMessage<SuggestionByPartialKeyRequest> | undefined, b: SuggestionByPartialKeyRequest | PlainMessage<SuggestionByPartialKeyRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionByPartialKeyResponse
 */
export declare class SuggestionByPartialKeyResponse extends Message<SuggestionByPartialKeyResponse> {
  /**
   * @generated from field: string bookmark = 1;
   */
  bookmark: string;

  /**
   * @generated from field: repeated auth.Suggestion suggestions = 2;
   */
  suggestions: Suggestion[];

  constructor(data?: PartialMessage<SuggestionByPartialKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionByPartialKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionByPartialKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionByPartialKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionByPartialKeyResponse;

  static equals(a: SuggestionByPartialKeyResponse | PlainMessage<SuggestionByPartialKeyResponse> | undefined, b: SuggestionByPartialKeyResponse | PlainMessage<SuggestionByPartialKeyResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionCreateRequest
 */
export declare class SuggestionCreateRequest extends Message<SuggestionCreateRequest> {
  /**
   * @generated from field: auth.Suggestion suggestion = 1;
   */
  suggestion?: Suggestion;

  constructor(data?: PartialMessage<SuggestionCreateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionCreateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionCreateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionCreateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionCreateRequest;

  static equals(a: SuggestionCreateRequest | PlainMessage<SuggestionCreateRequest> | undefined, b: SuggestionCreateRequest | PlainMessage<SuggestionCreateRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionCreateResponse
 */
export declare class SuggestionCreateResponse extends Message<SuggestionCreateResponse> {
  /**
   * @generated from field: auth.Suggestion suggestion = 1;
   */
  suggestion?: Suggestion;

  constructor(data?: PartialMessage<SuggestionCreateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionCreateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionCreateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionCreateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionCreateResponse;

  static equals(a: SuggestionCreateResponse | PlainMessage<SuggestionCreateResponse> | undefined, b: SuggestionCreateResponse | PlainMessage<SuggestionCreateResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionDeleteRequest
 */
export declare class SuggestionDeleteRequest extends Message<SuggestionDeleteRequest> {
  /**
   * @generated from field: auth.ItemKey item_key = 1;
   */
  itemKey?: ItemKey;

  /**
   * @generated from field: string suggestion_id = 2;
   */
  suggestionId: string;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;

  constructor(data?: PartialMessage<SuggestionDeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionDeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionDeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionDeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionDeleteRequest;

  static equals(a: SuggestionDeleteRequest | PlainMessage<SuggestionDeleteRequest> | undefined, b: SuggestionDeleteRequest | PlainMessage<SuggestionDeleteRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionDeleteResponse
 */
export declare class SuggestionDeleteResponse extends Message<SuggestionDeleteResponse> {
  /**
   * @generated from field: auth.Suggestion suggestion = 4;
   */
  suggestion?: Suggestion;

  constructor(data?: PartialMessage<SuggestionDeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionDeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionDeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionDeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionDeleteResponse;

  static equals(a: SuggestionDeleteResponse | PlainMessage<SuggestionDeleteResponse> | undefined, b: SuggestionDeleteResponse | PlainMessage<SuggestionDeleteResponse> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionApproveRequest
 */
export declare class SuggestionApproveRequest extends Message<SuggestionApproveRequest> {
  /**
   * @generated from field: auth.ItemKey item_key = 1;
   */
  itemKey?: ItemKey;

  /**
   * @generated from field: string suggestion_id = 2;
   */
  suggestionId: string;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;

  constructor(data?: PartialMessage<SuggestionApproveRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionApproveRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionApproveRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionApproveRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionApproveRequest;

  static equals(a: SuggestionApproveRequest | PlainMessage<SuggestionApproveRequest> | undefined, b: SuggestionApproveRequest | PlainMessage<SuggestionApproveRequest> | undefined): boolean;
}

/**
 * @generated from message auth.common.SuggestionApproveResponse
 */
export declare class SuggestionApproveResponse extends Message<SuggestionApproveResponse> {
  /**
   * @generated from field: auth.Suggestion suggestion = 1;
   */
  suggestion?: Suggestion;

  /**
   * @generated from field: auth.Item item = 2;
   */
  item?: Item;

  constructor(data?: PartialMessage<SuggestionApproveResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.common.SuggestionApproveResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionApproveResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionApproveResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionApproveResponse;

  static equals(a: SuggestionApproveResponse | PlainMessage<SuggestionApproveResponse> | undefined, b: SuggestionApproveResponse | PlainMessage<SuggestionApproveResponse> | undefined): boolean;
}

