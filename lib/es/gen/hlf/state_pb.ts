// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file hlf/state.proto (package hlf, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message hlf.History
 */
export class History extends Message<History> {
  /**
   * @generated from field: repeated hlf.History.Entry entries = 1;
   */
  entries: History_Entry[] = [];

  constructor(data?: PartialMessage<History>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hlf.History";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entries", kind: "message", T: History_Entry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): History {
    return new History().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): History {
    return new History().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): History {
    return new History().fromJsonString(jsonString, options);
  }

  static equals(a: History | PlainMessage<History> | undefined, b: History | PlainMessage<History> | undefined): boolean {
    return proto3.util.equals(History, a, b);
  }
}

/**
 * @generated from message hlf.History.Entry
 */
export class History_Entry extends Message<History_Entry> {
  /**
   * @generated from field: string tx_id = 1;
   */
  txId = "";

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: bool is_deleted = 3;
   */
  isDeleted = false;

  /**
   * @generated from field: bool is_hidden = 4;
   */
  isHidden = false;

  /**
   * @generated from field: google.protobuf.Any state = 5;
   */
  state?: Any;

  constructor(data?: PartialMessage<History_Entry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hlf.History.Entry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tx_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
    { no: 3, name: "is_deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "is_hidden", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "state", kind: "message", T: Any },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): History_Entry {
    return new History_Entry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): History_Entry {
    return new History_Entry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): History_Entry {
    return new History_Entry().fromJsonString(jsonString, options);
  }

  static equals(a: History_Entry | PlainMessage<History_Entry> | undefined, b: History_Entry | PlainMessage<History_Entry> | undefined): boolean {
    return proto3.util.equals(History_Entry, a, b);
  }
}

