// @generated by protoc-gen-connect-es v0.13.0
// @generated from file chaincode/rbac/schema/v1/auth_service.proto (package rbac.schema.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { CollectionCreateRequest, CollectionCreateResponse, CollectionGetHistoryRequest, CollectionGetHistoryResponse, CollectionGetListResponse, CollectionGetRequest, CollectionGetResponse, CollectionUpdatePermissionRequest, CollectionUpdatePermissionResponse, CollectionUpdateRolesRequest, CollectionUpdateRolesResponse, UserGetCurrentIdResponse, UserGetCurrentResponse, UserGetHistoryRequest, UserGetHistoryResponse, UserGetListResponse, UserGetRequest, UserGetResponse, UserRegisterRequest, UserRegisterResponse, UserUpdateMembershipRequest, UserUpdateMembershipResponse } from "./auth_service_pb.js";

/**
 * buf:lint:ignore RPC_NO_DELETE
 *
 * @generated from service rbac.schema.v1.AuthService
 */
export declare const AuthService: {
  readonly typeName: "rbac.schema.v1.AuthService",
  readonly methods: {
    /**
     *
     * UserGetCurrent: Returns the current user.
     *
     * Returns the current user.
     * # Requires:
     *  - User submitting the transaction is a registered user.
     *
     * @generated from rpc rbac.schema.v1.AuthService.UserGetCurrent
     */
    readonly userGetCurrent: {
      readonly name: "UserGetCurrent",
      readonly I: typeof Empty,
      readonly O: typeof UserGetCurrentResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * Returns the current user id.
     *
     * # Requires:
     *  - User submitting the transaction is a registered user.
     *
     * @generated from rpc rbac.schema.v1.AuthService.UserGetCurrentId
     */
    readonly userGetCurrentId: {
      readonly name: "UserGetCurrentId",
      readonly I: typeof Empty,
      readonly O: typeof UserGetCurrentIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * UserGetList: Returns the list of users.
     *
     * # Requires:
     *  - Non-register users can call this method.
     *
     * @generated from rpc rbac.schema.v1.AuthService.UserGetList
     */
    readonly userGetList: {
      readonly name: "UserGetList",
      readonly I: typeof Empty,
      readonly O: typeof UserGetListResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * UserGet: Returns the user.
     *
     * # Requires:
     *  - Non-register users can call this method.
     *
     * @generated from rpc rbac.schema.v1.AuthService.UserGet
     */
    readonly userGet: {
      readonly name: "UserGet",
      readonly I: typeof UserGetRequest,
      readonly O: typeof UserGetResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * UserGetHistory: Returns the user history.
     *
     * # Requires:
     *  - Non-register users can call this method.
     *
     * @generated from rpc rbac.schema.v1.AuthService.UserGetHistory
     */
    readonly userGetHistory: {
      readonly name: "UserGetHistory",
      readonly I: typeof UserGetHistoryRequest,
      readonly O: typeof UserGetHistoryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * UserRegister: Registers the user.
     *
     * # Requires:
     *  - The certificate for the user submitting this request must not be already registered as a user.
     *
     * @generated from rpc rbac.schema.v1.AuthService.UserRegister
     */
    readonly userRegister: {
      readonly name: "UserRegister",
      readonly I: typeof UserRegisterRequest,
      readonly O: typeof UserRegisterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * UserUpdateMembership: Updates the user's membership.
     *
     * # Requires:
     *  - User submitting the transaction is a registered user.
     *  - The specified user id is a registered user.
     *  - The specified collection id is a registered collection.
     *  - The user submitting the transaction is a member of the specified collection.
     *  - The user submitting the transaction the a role who has permission
     *     to update the membership of the specified collection.
     *
     * @generated from rpc rbac.schema.v1.AuthService.UserUpdateMembership
     */
    readonly userUpdateMembership: {
      readonly name: "UserUpdateMembership",
      readonly I: typeof UserUpdateMembershipRequest,
      readonly O: typeof UserUpdateMembershipResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * CollectionGetList: Returns the list of collections.
     *
     * # Requires:
     *  - Non-register users can call this method.
     *
     * @generated from rpc rbac.schema.v1.AuthService.CollectionGetList
     */
    readonly collectionGetList: {
      readonly name: "CollectionGetList",
      readonly I: typeof Empty,
      readonly O: typeof CollectionGetListResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * CollectionGet: Returns the collection.
     *
     * # Requires:
     *  - Non-register users can call this method.
     *
     * @generated from rpc rbac.schema.v1.AuthService.CollectionGet
     */
    readonly collectionGet: {
      readonly name: "CollectionGet",
      readonly I: typeof CollectionGetRequest,
      readonly O: typeof CollectionGetResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * CollectionGetHistory: Returns the collection history.
     *
     * # Requires:
     *  - Non-register users can call this method.
     *
     * @generated from rpc rbac.schema.v1.AuthService.CollectionGetHistory
     */
    readonly collectionGetHistory: {
      readonly name: "CollectionGetHistory",
      readonly I: typeof CollectionGetHistoryRequest,
      readonly O: typeof CollectionGetHistoryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *
     * CollectionCreate: Creates the collection.
     *
     * # Requires:
     *  - User submitting the transaction is a registered user.
     *
     * @generated from rpc rbac.schema.v1.AuthService.CollectionCreate
     */
    readonly collectionCreate: {
      readonly name: "CollectionCreate",
      readonly I: typeof CollectionCreateRequest,
      readonly O: typeof CollectionCreateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc rbac.schema.v1.AuthService.CollectionUpdateRoles
     */
    readonly collectionUpdateRoles: {
      readonly name: "CollectionUpdateRoles",
      readonly I: typeof CollectionUpdateRolesRequest,
      readonly O: typeof CollectionUpdateRolesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc rbac.schema.v1.AuthService.CollectionUpdatePermission
     */
    readonly collectionUpdatePermission: {
      readonly name: "CollectionUpdatePermission",
      readonly I: typeof CollectionUpdatePermissionRequest,
      readonly O: typeof CollectionUpdatePermissionResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

