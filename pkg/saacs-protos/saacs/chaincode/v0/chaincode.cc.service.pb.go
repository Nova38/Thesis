// Code generated by proto-gen-go-auth_pb. DO NOT EDIT.
// versions:
// - protoc-gen-cckey v0.0.1
// source: saacs/chaincode/v0/chaincode.proto

package v0

import (
	fmt "fmt"
	v0 "github.com/nova38/saacs/pkg/saacs-protos/saacs/common/v0"
)

// Service ItemService
type ItemServiceInterface[T any] interface {
	// Get
	//
	// # Operation:
	//   - Domain: ACTION_VIEW
	Get(ctx T, req *GetRequest) (res *GetResponse, err error)

	// GetFull
	//
	// # Operation:
	//   - Domain: ACTION_VIEW
	GetFull(ctx T, req *GetFullRequest) (res *GetFullResponse, err error)

	// List
	//
	// # Operation:
	//   - Domain: ACTION_VIEW
	List(ctx T, req *ListRequest) (res *ListResponse, err error)

	// ListByAttrs
	//
	// # Operation:
	//   - Domain: ACTION_VIEW
	ListByAttrs(ctx T, req *ListByAttrsRequest) (res *ListByAttrsResponse, err error)

	// Create
	//
	// # Operation:
	//   - Domain: ACTION_CREATE
	Create(ctx T, req *CreateRequest) (res *CreateResponse, err error)

	// Update
	//
	// # Operation:
	//   - Domain: ACTION_UPDATE
	Update(ctx T, req *UpdateRequest) (res *UpdateResponse, err error)

	// Delete
	//
	// # Operation:
	//   - Domain: ACTION_DELETE
	Delete(ctx T, req *DeleteRequest) (res *DeleteResponse, err error)

	// GetHistory
	//
	// # Operation:
	//   - Domain: ACTION_VIEW_HISTORY
	GetHistory(ctx T, req *GetHistoryRequest) (res *GetHistoryResponse, err error)

	// GetHiddenTx
	//
	// # Operation:
	//   - Domain: ACTION_VIEW_HIDDEN_TXS
	GetHiddenTx(ctx T, req *GetHiddenTxRequest) (res *GetHiddenTxResponse, err error)

	// HideTx
	//
	// # Operation:
	//   - Domain: ACTION_HIDE_TX
	HideTx(ctx T, req *HideTxRequest) (res *HideTxResponse, err error)

	// UnHideTx
	//
	// # Operation:
	//   - Domain: ACTION_UNHIDE_TX
	UnHideTx(ctx T, req *UnHideTxRequest) (res *UnHideTxResponse, err error)

	// GetSuggestion
	//
	// # Operation:
	//   - Domain: ACTION_SUGGEST_VIEW
	GetSuggestion(ctx T, req *GetSuggestionRequest) (res *GetSuggestionResponse, err error)

	// SuggestionListByCollection
	//
	// # Operation:
	//   - Domain: ACTION_SUGGEST_VIEW
	SuggestionListByCollection(ctx T, req *SuggestionListByCollectionRequest) (res *SuggestionListByCollectionResponse, err error)

	// SuggestionListByItem
	//
	// # Operation:
	//   - Domain: ACTION_SUGGEST_VIEW
	SuggestionListByItem(ctx T, req *SuggestionListByItemRequest) (res *SuggestionListByItemResponse, err error)

	// SuggestionByPartialKey
	//
	// # Operation:
	//   - Domain: ACTION_SUGGEST_VIEW
	SuggestionByPartialKey(ctx T, req *SuggestionByPartialKeyRequest) (res *SuggestionByPartialKeyResponse, err error)

	// ──────────────────────────────── Invoke ───────────────────────────────────────
	// # Operation:
	//   - Domain: ACTION_SUGGEST_CREATE
	SuggestionCreate(ctx T, req *SuggestionCreateRequest) (res *SuggestionCreateResponse, err error)

	// SuggestionDelete
	//
	// # Operation:
	//   - Domain: ACTION_SUGGEST_DELETE
	SuggestionDelete(ctx T, req *SuggestionDeleteRequest) (res *SuggestionDeleteResponse, err error)

	// SuggestionApprove
	//
	// # Operation:
	//   - Domain: ACTION_SUGGEST_CREATE
	SuggestionApprove(ctx T, req *SuggestionApproveRequest) (res *SuggestionApproveResponse, err error)
}

type ItemServiceBase struct {
}

func (s *ItemServiceBase) GetEvaluateTransactions() []string {
	return []string{
		"Get",
		"GetFull",
		"List",
		"ListByAttrs",
		"GetHistory",
		"GetHiddenTx",
		"GetSuggestion",
		"SuggestionListByCollection",
		"SuggestionListByItem",
		"SuggestionByPartialKey",
	}
}

func ItemServiceGetTxOperation(txName string) (op *v0.Operation, err error) {
	switch txName {
	case "Get":
		// action:ACTION_VIEW
		return &v0.Operation{
			Action: 10,
		}, nil
	case "GetFull":
		// action:ACTION_VIEW
		return &v0.Operation{
			Action: 10,
		}, nil
	case "List":
		// action:ACTION_VIEW
		return &v0.Operation{
			Action: 10,
		}, nil
	case "ListByAttrs":
		// action:ACTION_VIEW
		return &v0.Operation{
			Action: 10,
		}, nil
	case "Create":
		// action:ACTION_CREATE
		return &v0.Operation{
			Action: 11,
		}, nil
	case "Update":
		// action:ACTION_UPDATE
		return &v0.Operation{
			Action: 12,
		}, nil
	case "Delete":
		// action:ACTION_DELETE
		return &v0.Operation{
			Action: 13,
		}, nil
	case "GetHistory":
		// action:ACTION_VIEW_HISTORY
		return &v0.Operation{
			Action: 18,
		}, nil
	case "GetHiddenTx":
		// action:ACTION_VIEW_HIDDEN_TXS
		return &v0.Operation{
			Action: 19,
		}, nil
	case "HideTx":
		// action:ACTION_HIDE_TX
		return &v0.Operation{
			Action: 20,
		}, nil
	case "UnHideTx":
		// action:ACTION_UNHIDE_TX
		return &v0.Operation{
			Action: 21,
		}, nil
	case "GetSuggestion":
		// action:ACTION_SUGGEST_VIEW
		return &v0.Operation{
			Action: 14,
		}, nil
	case "SuggestionListByCollection":
		// action:ACTION_SUGGEST_VIEW
		return &v0.Operation{
			Action: 14,
		}, nil
	case "SuggestionListByItem":
		// action:ACTION_SUGGEST_VIEW
		return &v0.Operation{
			Action: 14,
		}, nil
	case "SuggestionByPartialKey":
		// action:ACTION_SUGGEST_VIEW
		return &v0.Operation{
			Action: 14,
		}, nil
	case "SuggestionCreate":
		// action:ACTION_SUGGEST_CREATE
		return &v0.Operation{
			Action: 15,
		}, nil
	case "SuggestionDelete":
		// action:ACTION_SUGGEST_DELETE
		return &v0.Operation{
			Action: 16,
		}, nil
	case "SuggestionApprove":
		// action:ACTION_SUGGEST_CREATE
		return &v0.Operation{
			Action: 15,
		}, nil
	default:
		return nil, fmt.Errorf("No operation defined for " + txName)
	}
	return nil, nil
}

func (s *ItemServiceBase) GetIgnoredFunctions() []string {
	return []string{"GetTxOperation"}
}
