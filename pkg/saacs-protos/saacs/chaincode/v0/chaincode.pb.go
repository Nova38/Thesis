// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: saacs/chaincode/v0/chaincode.proto

package v0

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v0 "github.com/nova38/saacs/pkg/saacs-protos/saacs/common/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Get
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// saacs.common.v0.Item item = 3;
	Key *v0.ItemKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v0.Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// Get
type GetFullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// saacs.common.v0.Item item = 3;
	Key                *v0.ItemKey        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HistoryOptions     *v0.HistoryOptions `protobuf:"bytes,2,opt,name=history_options,json=historyOptions,proto3" json:"history_options,omitempty"`
	IncludeSuggestions bool               `protobuf:"varint,3,opt,name=include_suggestions,json=includeSuggestions,proto3" json:"include_suggestions,omitempty"`
}

func (x *GetFullRequest) Reset() {
	*x = GetFullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullRequest) ProtoMessage() {}

func (x *GetFullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullRequest.ProtoReflect.Descriptor instead.
func (*GetFullRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{2}
}

func (x *GetFullRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetFullRequest) GetHistoryOptions() *v0.HistoryOptions {
	if x != nil {
		return x.HistoryOptions
	}
	return nil
}

func (x *GetFullRequest) GetIncludeSuggestions() bool {
	if x != nil {
		return x.IncludeSuggestions
	}
	return false
}

type GetFullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item        *v0.Item         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	History     *v0.History      `protobuf:"bytes,2,opt,name=history,proto3" json:"history,omitempty"`
	Suggestions []*v0.Suggestion `protobuf:"bytes,3,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
}

func (x *GetFullResponse) Reset() {
	*x = GetFullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullResponse) ProtoMessage() {}

func (x *GetFullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullResponse.ProtoReflect.Descriptor instead.
func (*GetFullResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{3}
}

func (x *GetFullResponse) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetFullResponse) GetHistory() *v0.History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *GetFullResponse) GetSuggestions() []*v0.Suggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

// List of a type
type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *v0.ItemKey    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Pagination *v0.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{4}
}

func (x *ListRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ListRequest) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*v0.Item     `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *v0.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetItems() []*v0.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListResponse) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListByAttrsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *v0.ItemKey    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NumAttrs   int32          `protobuf:"varint,2,opt,name=num_attrs,json=numAttrs,proto3" json:"num_attrs,omitempty"`
	Pagination *v0.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListByAttrsRequest) Reset() {
	*x = ListByAttrsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByAttrsRequest) ProtoMessage() {}

func (x *ListByAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByAttrsRequest.ProtoReflect.Descriptor instead.
func (*ListByAttrsRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{6}
}

func (x *ListByAttrsRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ListByAttrsRequest) GetNumAttrs() int32 {
	if x != nil {
		return x.NumAttrs
	}
	return 0
}

func (x *ListByAttrsRequest) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListByAttrsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*v0.Item     `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *v0.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListByAttrsResponse) Reset() {
	*x = ListByAttrsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByAttrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByAttrsResponse) ProtoMessage() {}

func (x *ListByAttrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByAttrsResponse.ProtoReflect.Descriptor instead.
func (*ListByAttrsResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{7}
}

func (x *ListByAttrsResponse) GetItems() []*v0.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListByAttrsResponse) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ──────────────────────────────── Invoke
// ─────────────────────────────────────── Create
type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v0.Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRequest) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v0.Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{9}
}

func (x *CreateResponse) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type BatchCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v0.Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatchCreateRequest) Reset() {
	*x = BatchCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateRequest) ProtoMessage() {}

func (x *BatchCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{10}
}

func (x *BatchCreateRequest) GetItems() []*v0.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*v0.Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatchCreateResponse) Reset() {
	*x = BatchCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateResponse) ProtoMessage() {}

func (x *BatchCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{11}
}

func (x *BatchCreateResponse) GetItems() []*v0.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       *v0.Item               `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateRequest) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *UpdateRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v0.Item `protobuf:"bytes,21,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateResponse) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    *v0.ItemKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Reason string      `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *v0.Item `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteResponse) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// GetHistory
type GetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            *v0.ItemKey       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HistoryOptions *v0.HiddenOptions `protobuf:"bytes,2,opt,name=history_options,json=historyOptions,proto3" json:"history_options,omitempty"`
	Pagination     *v0.Pagination    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetHistoryRequest) Reset() {
	*x = GetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRequest) ProtoMessage() {}

func (x *GetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{16}
}

func (x *GetHistoryRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetHistoryRequest) GetHistoryOptions() *v0.HiddenOptions {
	if x != nil {
		return x.HistoryOptions
	}
	return nil
}

func (x *GetHistoryRequest) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *v0.ItemKey    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	History    *v0.History    `protobuf:"bytes,2,opt,name=history,proto3" json:"history,omitempty"`
	Pagination *v0.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetHistoryResponse) Reset() {
	*x = GetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryResponse) ProtoMessage() {}

func (x *GetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{17}
}

func (x *GetHistoryResponse) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetHistoryResponse) GetHistory() *v0.History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *GetHistoryResponse) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetHiddenTx
type GetHiddenTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item   *v0.Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	MspIds []string `protobuf:"bytes,2,rep,name=msp_ids,json=mspIds,proto3" json:"msp_ids,omitempty"`
}

func (x *GetHiddenTxRequest) Reset() {
	*x = GetHiddenTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHiddenTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHiddenTxRequest) ProtoMessage() {}

func (x *GetHiddenTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHiddenTxRequest.ProtoReflect.Descriptor instead.
func (*GetHiddenTxRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{18}
}

func (x *GetHiddenTxRequest) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetHiddenTxRequest) GetMspIds() []string {
	if x != nil {
		return x.MspIds
	}
	return nil
}

type GetHiddenTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string         `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	HiddenTxs    []*v0.HiddenTx `protobuf:"bytes,2,rep,name=hidden_txs,json=hiddenTxs,proto3" json:"hidden_txs,omitempty"`
}

func (x *GetHiddenTxResponse) Reset() {
	*x = GetHiddenTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHiddenTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHiddenTxResponse) ProtoMessage() {}

func (x *GetHiddenTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHiddenTxResponse.ProtoReflect.Descriptor instead.
func (*GetHiddenTxResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{19}
}

func (x *GetHiddenTxResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *GetHiddenTxResponse) GetHiddenTxs() []*v0.HiddenTx {
	if x != nil {
		return x.HiddenTxs
	}
	return nil
}

type HideTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      *v0.ItemKey  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HiddenTx *v0.HiddenTx `protobuf:"bytes,2,opt,name=hidden_tx,json=hiddenTx,proto3" json:"hidden_tx,omitempty"`
	ForMsp   bool         `protobuf:"varint,3,opt,name=for_msp,json=forMsp,proto3" json:"for_msp,omitempty"`
}

func (x *HideTxRequest) Reset() {
	*x = HideTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HideTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HideTxRequest) ProtoMessage() {}

func (x *HideTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HideTxRequest.ProtoReflect.Descriptor instead.
func (*HideTxRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{20}
}

func (x *HideTxRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *HideTxRequest) GetHiddenTx() *v0.HiddenTx {
	if x != nil {
		return x.HiddenTx
	}
	return nil
}

func (x *HideTxRequest) GetForMsp() bool {
	if x != nil {
		return x.ForMsp
	}
	return false
}

type HideTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *v0.ItemKey      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HiddenTxs *v0.HiddenTxList `protobuf:"bytes,2,opt,name=hidden_txs,json=hiddenTxs,proto3" json:"hidden_txs,omitempty"`
	ForMsp    bool             `protobuf:"varint,3,opt,name=for_msp,json=forMsp,proto3" json:"for_msp,omitempty"`
}

func (x *HideTxResponse) Reset() {
	*x = HideTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HideTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HideTxResponse) ProtoMessage() {}

func (x *HideTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HideTxResponse.ProtoReflect.Descriptor instead.
func (*HideTxResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{21}
}

func (x *HideTxResponse) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *HideTxResponse) GetHiddenTxs() *v0.HiddenTxList {
	if x != nil {
		return x.HiddenTxs
	}
	return nil
}

func (x *HideTxResponse) GetForMsp() bool {
	if x != nil {
		return x.ForMsp
	}
	return false
}

type UnHideTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    *v0.ItemKey `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	ForMsp bool        `protobuf:"varint,1,opt,name=for_msp,json=forMsp,proto3" json:"for_msp,omitempty"`
	TxId   string      `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *UnHideTxRequest) Reset() {
	*x = UnHideTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnHideTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnHideTxRequest) ProtoMessage() {}

func (x *UnHideTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnHideTxRequest.ProtoReflect.Descriptor instead.
func (*UnHideTxRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{22}
}

func (x *UnHideTxRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *UnHideTxRequest) GetForMsp() bool {
	if x != nil {
		return x.ForMsp
	}
	return false
}

func (x *UnHideTxRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type UnHideTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *v0.ItemKey      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HiddenTxs *v0.HiddenTxList `protobuf:"bytes,2,opt,name=hidden_txs,json=hiddenTxs,proto3" json:"hidden_txs,omitempty"`
	ForMsp    bool             `protobuf:"varint,3,opt,name=for_msp,json=forMsp,proto3" json:"for_msp,omitempty"`
}

func (x *UnHideTxResponse) Reset() {
	*x = UnHideTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnHideTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnHideTxResponse) ProtoMessage() {}

func (x *UnHideTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnHideTxResponse.ProtoReflect.Descriptor instead.
func (*UnHideTxResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{23}
}

func (x *UnHideTxResponse) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *UnHideTxResponse) GetHiddenTxs() *v0.HiddenTxList {
	if x != nil {
		return x.HiddenTxs
	}
	return nil
}

func (x *UnHideTxResponse) GetForMsp() bool {
	if x != nil {
		return x.ForMsp
	}
	return false
}

type GetSuggestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemKey      *v0.ItemKey `protobuf:"bytes,1,opt,name=item_key,json=itemKey,proto3" json:"item_key,omitempty"`
	SuggestionId string      `protobuf:"bytes,2,opt,name=suggestion_id,json=suggestionId,proto3" json:"suggestion_id,omitempty"`
}

func (x *GetSuggestionRequest) Reset() {
	*x = GetSuggestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestionRequest) ProtoMessage() {}

func (x *GetSuggestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestionRequest.ProtoReflect.Descriptor instead.
func (*GetSuggestionRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{24}
}

func (x *GetSuggestionRequest) GetItemKey() *v0.ItemKey {
	if x != nil {
		return x.ItemKey
	}
	return nil
}

func (x *GetSuggestionRequest) GetSuggestionId() string {
	if x != nil {
		return x.SuggestionId
	}
	return ""
}

type GetSuggestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestion *v0.Suggestion `protobuf:"bytes,1,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
}

func (x *GetSuggestionResponse) Reset() {
	*x = GetSuggestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestionResponse) ProtoMessage() {}

func (x *GetSuggestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestionResponse.ProtoReflect.Descriptor instead.
func (*GetSuggestionResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{25}
}

func (x *GetSuggestionResponse) GetSuggestion() *v0.Suggestion {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

type SuggestionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *v0.ItemKey    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Pagination *v0.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"` // saacs.common.v0.Item item = 3;
}

func (x *SuggestionListRequest) Reset() {
	*x = SuggestionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionListRequest) ProtoMessage() {}

func (x *SuggestionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionListRequest.ProtoReflect.Descriptor instead.
func (*SuggestionListRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{26}
}

func (x *SuggestionListRequest) GetKey() *v0.ItemKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SuggestionListRequest) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SuggestionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestions []*v0.Suggestion `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
	Pagination  *v0.Pagination   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SuggestionListResponse) Reset() {
	*x = SuggestionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionListResponse) ProtoMessage() {}

func (x *SuggestionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionListResponse.ProtoReflect.Descriptor instead.
func (*SuggestionListResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{27}
}

func (x *SuggestionListResponse) GetSuggestions() []*v0.Suggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

func (x *SuggestionListResponse) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SuggestionListByCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string         `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Pagination   *v0.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SuggestionListByCollectionRequest) Reset() {
	*x = SuggestionListByCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionListByCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionListByCollectionRequest) ProtoMessage() {}

func (x *SuggestionListByCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionListByCollectionRequest.ProtoReflect.Descriptor instead.
func (*SuggestionListByCollectionRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{28}
}

func (x *SuggestionListByCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *SuggestionListByCollectionRequest) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SuggestionListByCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestions []*v0.Suggestion `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
	Pagination  *v0.Pagination   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SuggestionListByCollectionResponse) Reset() {
	*x = SuggestionListByCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionListByCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionListByCollectionResponse) ProtoMessage() {}

func (x *SuggestionListByCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionListByCollectionResponse.ProtoReflect.Descriptor instead.
func (*SuggestionListByCollectionResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{29}
}

func (x *SuggestionListByCollectionResponse) GetSuggestions() []*v0.Suggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

func (x *SuggestionListByCollectionResponse) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SuggestionListByItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemKey    *v0.ItemKey    `protobuf:"bytes,1,opt,name=item_key,json=itemKey,proto3" json:"item_key,omitempty"`
	Pagination *v0.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SuggestionListByItemRequest) Reset() {
	*x = SuggestionListByItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionListByItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionListByItemRequest) ProtoMessage() {}

func (x *SuggestionListByItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionListByItemRequest.ProtoReflect.Descriptor instead.
func (*SuggestionListByItemRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{30}
}

func (x *SuggestionListByItemRequest) GetItemKey() *v0.ItemKey {
	if x != nil {
		return x.ItemKey
	}
	return nil
}

func (x *SuggestionListByItemRequest) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SuggestionListByItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *v0.Pagination   `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Suggestions []*v0.Suggestion `protobuf:"bytes,2,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
}

func (x *SuggestionListByItemResponse) Reset() {
	*x = SuggestionListByItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionListByItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionListByItemResponse) ProtoMessage() {}

func (x *SuggestionListByItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionListByItemResponse.ProtoReflect.Descriptor instead.
func (*SuggestionListByItemResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{31}
}

func (x *SuggestionListByItemResponse) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SuggestionListByItemResponse) GetSuggestions() []*v0.Suggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

type SuggestionByPartialKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemKey      *v0.ItemKey    `protobuf:"bytes,1,opt,name=item_key,json=itemKey,proto3" json:"item_key,omitempty"`
	NumAttrs     int32          `protobuf:"varint,2,opt,name=num_attrs,json=numAttrs,proto3" json:"num_attrs,omitempty"`
	SuggestionId string         `protobuf:"bytes,3,opt,name=suggestion_id,json=suggestionId,proto3" json:"suggestion_id,omitempty"`
	Pagination   *v0.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SuggestionByPartialKeyRequest) Reset() {
	*x = SuggestionByPartialKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionByPartialKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionByPartialKeyRequest) ProtoMessage() {}

func (x *SuggestionByPartialKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionByPartialKeyRequest.ProtoReflect.Descriptor instead.
func (*SuggestionByPartialKeyRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{32}
}

func (x *SuggestionByPartialKeyRequest) GetItemKey() *v0.ItemKey {
	if x != nil {
		return x.ItemKey
	}
	return nil
}

func (x *SuggestionByPartialKeyRequest) GetNumAttrs() int32 {
	if x != nil {
		return x.NumAttrs
	}
	return 0
}

func (x *SuggestionByPartialKeyRequest) GetSuggestionId() string {
	if x != nil {
		return x.SuggestionId
	}
	return ""
}

func (x *SuggestionByPartialKeyRequest) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SuggestionByPartialKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *v0.Pagination   `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Suggestions []*v0.Suggestion `protobuf:"bytes,2,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
}

func (x *SuggestionByPartialKeyResponse) Reset() {
	*x = SuggestionByPartialKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionByPartialKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionByPartialKeyResponse) ProtoMessage() {}

func (x *SuggestionByPartialKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionByPartialKeyResponse.ProtoReflect.Descriptor instead.
func (*SuggestionByPartialKeyResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{33}
}

func (x *SuggestionByPartialKeyResponse) GetPagination() *v0.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SuggestionByPartialKeyResponse) GetSuggestions() []*v0.Suggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

type SuggestionCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestion *v0.Suggestion `protobuf:"bytes,1,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
}

func (x *SuggestionCreateRequest) Reset() {
	*x = SuggestionCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionCreateRequest) ProtoMessage() {}

func (x *SuggestionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionCreateRequest.ProtoReflect.Descriptor instead.
func (*SuggestionCreateRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{34}
}

func (x *SuggestionCreateRequest) GetSuggestion() *v0.Suggestion {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

type SuggestionCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestion *v0.Suggestion `protobuf:"bytes,1,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
}

func (x *SuggestionCreateResponse) Reset() {
	*x = SuggestionCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionCreateResponse) ProtoMessage() {}

func (x *SuggestionCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionCreateResponse.ProtoReflect.Descriptor instead.
func (*SuggestionCreateResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{35}
}

func (x *SuggestionCreateResponse) GetSuggestion() *v0.Suggestion {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

type SuggestionDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemKey      *v0.ItemKey `protobuf:"bytes,1,opt,name=item_key,json=itemKey,proto3" json:"item_key,omitempty"`
	SuggestionId string      `protobuf:"bytes,2,opt,name=suggestion_id,json=suggestionId,proto3" json:"suggestion_id,omitempty"`
	Reason       string      `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SuggestionDeleteRequest) Reset() {
	*x = SuggestionDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionDeleteRequest) ProtoMessage() {}

func (x *SuggestionDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionDeleteRequest.ProtoReflect.Descriptor instead.
func (*SuggestionDeleteRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{36}
}

func (x *SuggestionDeleteRequest) GetItemKey() *v0.ItemKey {
	if x != nil {
		return x.ItemKey
	}
	return nil
}

func (x *SuggestionDeleteRequest) GetSuggestionId() string {
	if x != nil {
		return x.SuggestionId
	}
	return ""
}

func (x *SuggestionDeleteRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SuggestionDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestion *v0.Suggestion `protobuf:"bytes,4,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
}

func (x *SuggestionDeleteResponse) Reset() {
	*x = SuggestionDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionDeleteResponse) ProtoMessage() {}

func (x *SuggestionDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionDeleteResponse.ProtoReflect.Descriptor instead.
func (*SuggestionDeleteResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{37}
}

func (x *SuggestionDeleteResponse) GetSuggestion() *v0.Suggestion {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

type SuggestionApproveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemKey      *v0.ItemKey `protobuf:"bytes,1,opt,name=item_key,json=itemKey,proto3" json:"item_key,omitempty"`
	SuggestionId string      `protobuf:"bytes,2,opt,name=suggestion_id,json=suggestionId,proto3" json:"suggestion_id,omitempty"`
	Reason       string      `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SuggestionApproveRequest) Reset() {
	*x = SuggestionApproveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionApproveRequest) ProtoMessage() {}

func (x *SuggestionApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionApproveRequest.ProtoReflect.Descriptor instead.
func (*SuggestionApproveRequest) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{38}
}

func (x *SuggestionApproveRequest) GetItemKey() *v0.ItemKey {
	if x != nil {
		return x.ItemKey
	}
	return nil
}

func (x *SuggestionApproveRequest) GetSuggestionId() string {
	if x != nil {
		return x.SuggestionId
	}
	return ""
}

func (x *SuggestionApproveRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SuggestionApproveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suggestion *v0.Suggestion `protobuf:"bytes,1,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
	Item       *v0.Item       `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *SuggestionApproveResponse) Reset() {
	*x = SuggestionApproveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionApproveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionApproveResponse) ProtoMessage() {}

func (x *SuggestionApproveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saacs_chaincode_v0_chaincode_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionApproveResponse.ProtoReflect.Descriptor instead.
func (*SuggestionApproveResponse) Descriptor() ([]byte, []int) {
	return file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP(), []int{39}
}

func (x *SuggestionApproveResponse) GetSuggestion() *v0.Suggestion {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

func (x *SuggestionApproveResponse) GetItem() *v0.Item {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_saacs_chaincode_v0_chaincode_proto protoreflect.FileDescriptor

var file_saacs_chaincode_v0_chaincode_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x30, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x30, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x30, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x30, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x30, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xbf, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4b,
	0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x48, 0x0a, 0x0f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x32, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7e, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08,
	0x6e, 0x75, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x43, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x49, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x13, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x43, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x22, 0x43, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x47, 0x0a, 0x0f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3b,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x70, 0x49, 0x64, 0x73, 0x22, 0x7d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54,
	0x78, 0x52, 0x09, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x73, 0x22, 0x9c, 0x01, 0x0a,
	0x0d, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3e, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x54, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x4d, 0x73, 0x70, 0x22, 0x9b, 0x01, 0x0a, 0x0e,
	0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54,
	0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x4d, 0x73, 0x70, 0x22, 0x7c, 0x0a, 0x0f, 0x55, 0x6e, 0x48,
	0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x4d, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x10, 0x55, 0x6e, 0x48, 0x69,
	0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3c, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x09, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x4d, 0x73, 0x70, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x0d, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4b,
	0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a,
	0x16, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x21,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a,
	0x22, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x97, 0x01, 0x0a, 0x1b, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x1c, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x28,
	0x00, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01,
	0x0a, 0x1e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a,
	0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x17,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x18,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01,
	0x0a, 0x17, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x18,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01,
	0x0a, 0x18, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x93, 0x01,
	0x0a, 0x19, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x31, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x32, 0xe4, 0x0f, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18,
	0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x90, 0x02, 0x01, 0x12, 0x61, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x61, 0x61, 0x63,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d,
	0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0a, 0x90, 0x02, 0x01, 0x12, 0x58, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a,
	0x1c, 0x02, 0x08, 0x0a, 0x90, 0x02, 0x01, 0x12, 0x6d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c,
	0x02, 0x08, 0x0a, 0x90, 0x02, 0x01, 0x12, 0x5b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c,
	0x02, 0x08, 0x0b, 0x12, 0x5b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e,
	0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x30, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0c,
	0x12, 0x5b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x30, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0d, 0x12, 0x6a, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x73, 0x61,
	0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18, 0x02,
	0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x12, 0x90, 0x02, 0x01, 0x12, 0x6d, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x12, 0x26, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18, 0x02, 0xfa,
	0x9a, 0x1c, 0x02, 0x08, 0x13, 0x90, 0x02, 0x01, 0x12, 0x5b, 0x0a, 0x06, 0x48, 0x69, 0x64, 0x65,
	0x54, 0x78, 0x12, 0x21, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x48, 0x69, 0x64, 0x65, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa,
	0x9a, 0x1c, 0x02, 0x08, 0x14, 0x12, 0x61, 0x0a, 0x08, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54,
	0x78, 0x12, 0x23, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x6e, 0x48, 0x69, 0x64, 0x65, 0x54, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x6e, 0x48, 0x69,
	0x64, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7,
	0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x15, 0x12, 0x73, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x61, 0x61, 0x63,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d,
	0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0e, 0x90, 0x02, 0x01, 0x12, 0x9a, 0x01,
	0x0a, 0x1a, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x73,
	0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76,
	0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18,
	0x02, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0e, 0x90, 0x02, 0x01, 0x12, 0x88, 0x01, 0x0a, 0x14, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x2f, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c, 0x02,
	0x08, 0x0e, 0x90, 0x02, 0x01, 0x12, 0x8e, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x12, 0x31, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xe0, 0xd7, 0x18, 0x02, 0xfa, 0x9a, 0x1c,
	0x02, 0x08, 0x0e, 0x90, 0x02, 0x01, 0x12, 0x79, 0x0a, 0x10, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08,
	0x0f, 0x12, 0x79, 0x0a, 0x10, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0a, 0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x10, 0x12, 0x7c, 0x0a, 0x11,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x12, 0x2c, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a,
	0xe0, 0xd7, 0x18, 0x01, 0xfa, 0x9a, 0x1c, 0x02, 0x08, 0x0f, 0x42, 0xcf, 0x01, 0x0a, 0x16, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x30, 0x42, 0x0e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x61, 0x33, 0x38, 0x2f, 0x73, 0x61, 0x61, 0x63, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x73, 0x61, 0x61, 0x63, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x2f, 0x76, 0x30, 0xa2, 0x02, 0x03, 0x53, 0x43, 0x56, 0xaa, 0x02, 0x12, 0x53, 0x61, 0x61,
	0x63, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x30, 0xca,
	0x02, 0x12, 0x53, 0x61, 0x61, 0x63, 0x73, 0x5c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x5c, 0x56, 0x30, 0xe2, 0x02, 0x1e, 0x53, 0x61, 0x61, 0x63, 0x73, 0x5c, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5c, 0x56, 0x30, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x53, 0x61, 0x61, 0x63, 0x73, 0x3a, 0x3a, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x3a, 0x56, 0x30, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_saacs_chaincode_v0_chaincode_proto_rawDescOnce sync.Once
	file_saacs_chaincode_v0_chaincode_proto_rawDescData = file_saacs_chaincode_v0_chaincode_proto_rawDesc
)

func file_saacs_chaincode_v0_chaincode_proto_rawDescGZIP() []byte {
	file_saacs_chaincode_v0_chaincode_proto_rawDescOnce.Do(func() {
		file_saacs_chaincode_v0_chaincode_proto_rawDescData = protoimpl.X.CompressGZIP(file_saacs_chaincode_v0_chaincode_proto_rawDescData)
	})
	return file_saacs_chaincode_v0_chaincode_proto_rawDescData
}

var file_saacs_chaincode_v0_chaincode_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_saacs_chaincode_v0_chaincode_proto_goTypes = []interface{}{
	(*GetRequest)(nil),                         // 0: saacs.chaincode.v0.GetRequest
	(*GetResponse)(nil),                        // 1: saacs.chaincode.v0.GetResponse
	(*GetFullRequest)(nil),                     // 2: saacs.chaincode.v0.GetFullRequest
	(*GetFullResponse)(nil),                    // 3: saacs.chaincode.v0.GetFullResponse
	(*ListRequest)(nil),                        // 4: saacs.chaincode.v0.ListRequest
	(*ListResponse)(nil),                       // 5: saacs.chaincode.v0.ListResponse
	(*ListByAttrsRequest)(nil),                 // 6: saacs.chaincode.v0.ListByAttrsRequest
	(*ListByAttrsResponse)(nil),                // 7: saacs.chaincode.v0.ListByAttrsResponse
	(*CreateRequest)(nil),                      // 8: saacs.chaincode.v0.CreateRequest
	(*CreateResponse)(nil),                     // 9: saacs.chaincode.v0.CreateResponse
	(*BatchCreateRequest)(nil),                 // 10: saacs.chaincode.v0.BatchCreateRequest
	(*BatchCreateResponse)(nil),                // 11: saacs.chaincode.v0.BatchCreateResponse
	(*UpdateRequest)(nil),                      // 12: saacs.chaincode.v0.UpdateRequest
	(*UpdateResponse)(nil),                     // 13: saacs.chaincode.v0.UpdateResponse
	(*DeleteRequest)(nil),                      // 14: saacs.chaincode.v0.DeleteRequest
	(*DeleteResponse)(nil),                     // 15: saacs.chaincode.v0.DeleteResponse
	(*GetHistoryRequest)(nil),                  // 16: saacs.chaincode.v0.GetHistoryRequest
	(*GetHistoryResponse)(nil),                 // 17: saacs.chaincode.v0.GetHistoryResponse
	(*GetHiddenTxRequest)(nil),                 // 18: saacs.chaincode.v0.GetHiddenTxRequest
	(*GetHiddenTxResponse)(nil),                // 19: saacs.chaincode.v0.GetHiddenTxResponse
	(*HideTxRequest)(nil),                      // 20: saacs.chaincode.v0.HideTxRequest
	(*HideTxResponse)(nil),                     // 21: saacs.chaincode.v0.HideTxResponse
	(*UnHideTxRequest)(nil),                    // 22: saacs.chaincode.v0.UnHideTxRequest
	(*UnHideTxResponse)(nil),                   // 23: saacs.chaincode.v0.UnHideTxResponse
	(*GetSuggestionRequest)(nil),               // 24: saacs.chaincode.v0.GetSuggestionRequest
	(*GetSuggestionResponse)(nil),              // 25: saacs.chaincode.v0.GetSuggestionResponse
	(*SuggestionListRequest)(nil),              // 26: saacs.chaincode.v0.SuggestionListRequest
	(*SuggestionListResponse)(nil),             // 27: saacs.chaincode.v0.SuggestionListResponse
	(*SuggestionListByCollectionRequest)(nil),  // 28: saacs.chaincode.v0.SuggestionListByCollectionRequest
	(*SuggestionListByCollectionResponse)(nil), // 29: saacs.chaincode.v0.SuggestionListByCollectionResponse
	(*SuggestionListByItemRequest)(nil),        // 30: saacs.chaincode.v0.SuggestionListByItemRequest
	(*SuggestionListByItemResponse)(nil),       // 31: saacs.chaincode.v0.SuggestionListByItemResponse
	(*SuggestionByPartialKeyRequest)(nil),      // 32: saacs.chaincode.v0.SuggestionByPartialKeyRequest
	(*SuggestionByPartialKeyResponse)(nil),     // 33: saacs.chaincode.v0.SuggestionByPartialKeyResponse
	(*SuggestionCreateRequest)(nil),            // 34: saacs.chaincode.v0.SuggestionCreateRequest
	(*SuggestionCreateResponse)(nil),           // 35: saacs.chaincode.v0.SuggestionCreateResponse
	(*SuggestionDeleteRequest)(nil),            // 36: saacs.chaincode.v0.SuggestionDeleteRequest
	(*SuggestionDeleteResponse)(nil),           // 37: saacs.chaincode.v0.SuggestionDeleteResponse
	(*SuggestionApproveRequest)(nil),           // 38: saacs.chaincode.v0.SuggestionApproveRequest
	(*SuggestionApproveResponse)(nil),          // 39: saacs.chaincode.v0.SuggestionApproveResponse
	(*v0.ItemKey)(nil),                         // 40: saacs.common.v0.ItemKey
	(*v0.Item)(nil),                            // 41: saacs.common.v0.Item
	(*v0.HistoryOptions)(nil),                  // 42: saacs.common.v0.HistoryOptions
	(*v0.History)(nil),                         // 43: saacs.common.v0.History
	(*v0.Suggestion)(nil),                      // 44: saacs.common.v0.Suggestion
	(*v0.Pagination)(nil),                      // 45: saacs.common.v0.Pagination
	(*fieldmaskpb.FieldMask)(nil),              // 46: google.protobuf.FieldMask
	(*v0.HiddenOptions)(nil),                   // 47: saacs.common.v0.HiddenOptions
	(*v0.HiddenTx)(nil),                        // 48: saacs.common.v0.HiddenTx
	(*v0.HiddenTxList)(nil),                    // 49: saacs.common.v0.HiddenTxList
}
var file_saacs_chaincode_v0_chaincode_proto_depIdxs = []int32{
	40, // 0: saacs.chaincode.v0.GetRequest.key:type_name -> saacs.common.v0.ItemKey
	41, // 1: saacs.chaincode.v0.GetResponse.item:type_name -> saacs.common.v0.Item
	40, // 2: saacs.chaincode.v0.GetFullRequest.key:type_name -> saacs.common.v0.ItemKey
	42, // 3: saacs.chaincode.v0.GetFullRequest.history_options:type_name -> saacs.common.v0.HistoryOptions
	41, // 4: saacs.chaincode.v0.GetFullResponse.item:type_name -> saacs.common.v0.Item
	43, // 5: saacs.chaincode.v0.GetFullResponse.history:type_name -> saacs.common.v0.History
	44, // 6: saacs.chaincode.v0.GetFullResponse.suggestions:type_name -> saacs.common.v0.Suggestion
	40, // 7: saacs.chaincode.v0.ListRequest.key:type_name -> saacs.common.v0.ItemKey
	45, // 8: saacs.chaincode.v0.ListRequest.pagination:type_name -> saacs.common.v0.Pagination
	41, // 9: saacs.chaincode.v0.ListResponse.items:type_name -> saacs.common.v0.Item
	45, // 10: saacs.chaincode.v0.ListResponse.pagination:type_name -> saacs.common.v0.Pagination
	40, // 11: saacs.chaincode.v0.ListByAttrsRequest.key:type_name -> saacs.common.v0.ItemKey
	45, // 12: saacs.chaincode.v0.ListByAttrsRequest.pagination:type_name -> saacs.common.v0.Pagination
	41, // 13: saacs.chaincode.v0.ListByAttrsResponse.items:type_name -> saacs.common.v0.Item
	45, // 14: saacs.chaincode.v0.ListByAttrsResponse.pagination:type_name -> saacs.common.v0.Pagination
	41, // 15: saacs.chaincode.v0.CreateRequest.item:type_name -> saacs.common.v0.Item
	41, // 16: saacs.chaincode.v0.CreateResponse.item:type_name -> saacs.common.v0.Item
	41, // 17: saacs.chaincode.v0.BatchCreateRequest.items:type_name -> saacs.common.v0.Item
	41, // 18: saacs.chaincode.v0.BatchCreateResponse.items:type_name -> saacs.common.v0.Item
	41, // 19: saacs.chaincode.v0.UpdateRequest.item:type_name -> saacs.common.v0.Item
	46, // 20: saacs.chaincode.v0.UpdateRequest.update_mask:type_name -> google.protobuf.FieldMask
	41, // 21: saacs.chaincode.v0.UpdateResponse.item:type_name -> saacs.common.v0.Item
	40, // 22: saacs.chaincode.v0.DeleteRequest.key:type_name -> saacs.common.v0.ItemKey
	41, // 23: saacs.chaincode.v0.DeleteResponse.item:type_name -> saacs.common.v0.Item
	40, // 24: saacs.chaincode.v0.GetHistoryRequest.key:type_name -> saacs.common.v0.ItemKey
	47, // 25: saacs.chaincode.v0.GetHistoryRequest.history_options:type_name -> saacs.common.v0.HiddenOptions
	45, // 26: saacs.chaincode.v0.GetHistoryRequest.pagination:type_name -> saacs.common.v0.Pagination
	40, // 27: saacs.chaincode.v0.GetHistoryResponse.key:type_name -> saacs.common.v0.ItemKey
	43, // 28: saacs.chaincode.v0.GetHistoryResponse.history:type_name -> saacs.common.v0.History
	45, // 29: saacs.chaincode.v0.GetHistoryResponse.pagination:type_name -> saacs.common.v0.Pagination
	41, // 30: saacs.chaincode.v0.GetHiddenTxRequest.item:type_name -> saacs.common.v0.Item
	48, // 31: saacs.chaincode.v0.GetHiddenTxResponse.hidden_txs:type_name -> saacs.common.v0.HiddenTx
	40, // 32: saacs.chaincode.v0.HideTxRequest.key:type_name -> saacs.common.v0.ItemKey
	48, // 33: saacs.chaincode.v0.HideTxRequest.hidden_tx:type_name -> saacs.common.v0.HiddenTx
	40, // 34: saacs.chaincode.v0.HideTxResponse.key:type_name -> saacs.common.v0.ItemKey
	49, // 35: saacs.chaincode.v0.HideTxResponse.hidden_txs:type_name -> saacs.common.v0.HiddenTxList
	40, // 36: saacs.chaincode.v0.UnHideTxRequest.key:type_name -> saacs.common.v0.ItemKey
	40, // 37: saacs.chaincode.v0.UnHideTxResponse.key:type_name -> saacs.common.v0.ItemKey
	49, // 38: saacs.chaincode.v0.UnHideTxResponse.hidden_txs:type_name -> saacs.common.v0.HiddenTxList
	40, // 39: saacs.chaincode.v0.GetSuggestionRequest.item_key:type_name -> saacs.common.v0.ItemKey
	44, // 40: saacs.chaincode.v0.GetSuggestionResponse.suggestion:type_name -> saacs.common.v0.Suggestion
	40, // 41: saacs.chaincode.v0.SuggestionListRequest.key:type_name -> saacs.common.v0.ItemKey
	45, // 42: saacs.chaincode.v0.SuggestionListRequest.pagination:type_name -> saacs.common.v0.Pagination
	44, // 43: saacs.chaincode.v0.SuggestionListResponse.suggestions:type_name -> saacs.common.v0.Suggestion
	45, // 44: saacs.chaincode.v0.SuggestionListResponse.pagination:type_name -> saacs.common.v0.Pagination
	45, // 45: saacs.chaincode.v0.SuggestionListByCollectionRequest.pagination:type_name -> saacs.common.v0.Pagination
	44, // 46: saacs.chaincode.v0.SuggestionListByCollectionResponse.suggestions:type_name -> saacs.common.v0.Suggestion
	45, // 47: saacs.chaincode.v0.SuggestionListByCollectionResponse.pagination:type_name -> saacs.common.v0.Pagination
	40, // 48: saacs.chaincode.v0.SuggestionListByItemRequest.item_key:type_name -> saacs.common.v0.ItemKey
	45, // 49: saacs.chaincode.v0.SuggestionListByItemRequest.pagination:type_name -> saacs.common.v0.Pagination
	45, // 50: saacs.chaincode.v0.SuggestionListByItemResponse.pagination:type_name -> saacs.common.v0.Pagination
	44, // 51: saacs.chaincode.v0.SuggestionListByItemResponse.suggestions:type_name -> saacs.common.v0.Suggestion
	40, // 52: saacs.chaincode.v0.SuggestionByPartialKeyRequest.item_key:type_name -> saacs.common.v0.ItemKey
	45, // 53: saacs.chaincode.v0.SuggestionByPartialKeyRequest.pagination:type_name -> saacs.common.v0.Pagination
	45, // 54: saacs.chaincode.v0.SuggestionByPartialKeyResponse.pagination:type_name -> saacs.common.v0.Pagination
	44, // 55: saacs.chaincode.v0.SuggestionByPartialKeyResponse.suggestions:type_name -> saacs.common.v0.Suggestion
	44, // 56: saacs.chaincode.v0.SuggestionCreateRequest.suggestion:type_name -> saacs.common.v0.Suggestion
	44, // 57: saacs.chaincode.v0.SuggestionCreateResponse.suggestion:type_name -> saacs.common.v0.Suggestion
	40, // 58: saacs.chaincode.v0.SuggestionDeleteRequest.item_key:type_name -> saacs.common.v0.ItemKey
	44, // 59: saacs.chaincode.v0.SuggestionDeleteResponse.suggestion:type_name -> saacs.common.v0.Suggestion
	40, // 60: saacs.chaincode.v0.SuggestionApproveRequest.item_key:type_name -> saacs.common.v0.ItemKey
	44, // 61: saacs.chaincode.v0.SuggestionApproveResponse.suggestion:type_name -> saacs.common.v0.Suggestion
	41, // 62: saacs.chaincode.v0.SuggestionApproveResponse.item:type_name -> saacs.common.v0.Item
	0,  // 63: saacs.chaincode.v0.ItemService.Get:input_type -> saacs.chaincode.v0.GetRequest
	2,  // 64: saacs.chaincode.v0.ItemService.GetFull:input_type -> saacs.chaincode.v0.GetFullRequest
	4,  // 65: saacs.chaincode.v0.ItemService.List:input_type -> saacs.chaincode.v0.ListRequest
	6,  // 66: saacs.chaincode.v0.ItemService.ListByAttrs:input_type -> saacs.chaincode.v0.ListByAttrsRequest
	8,  // 67: saacs.chaincode.v0.ItemService.Create:input_type -> saacs.chaincode.v0.CreateRequest
	12, // 68: saacs.chaincode.v0.ItemService.Update:input_type -> saacs.chaincode.v0.UpdateRequest
	14, // 69: saacs.chaincode.v0.ItemService.Delete:input_type -> saacs.chaincode.v0.DeleteRequest
	16, // 70: saacs.chaincode.v0.ItemService.GetHistory:input_type -> saacs.chaincode.v0.GetHistoryRequest
	18, // 71: saacs.chaincode.v0.ItemService.GetHiddenTx:input_type -> saacs.chaincode.v0.GetHiddenTxRequest
	20, // 72: saacs.chaincode.v0.ItemService.HideTx:input_type -> saacs.chaincode.v0.HideTxRequest
	22, // 73: saacs.chaincode.v0.ItemService.UnHideTx:input_type -> saacs.chaincode.v0.UnHideTxRequest
	24, // 74: saacs.chaincode.v0.ItemService.GetSuggestion:input_type -> saacs.chaincode.v0.GetSuggestionRequest
	28, // 75: saacs.chaincode.v0.ItemService.SuggestionListByCollection:input_type -> saacs.chaincode.v0.SuggestionListByCollectionRequest
	30, // 76: saacs.chaincode.v0.ItemService.SuggestionListByItem:input_type -> saacs.chaincode.v0.SuggestionListByItemRequest
	32, // 77: saacs.chaincode.v0.ItemService.SuggestionByPartialKey:input_type -> saacs.chaincode.v0.SuggestionByPartialKeyRequest
	34, // 78: saacs.chaincode.v0.ItemService.SuggestionCreate:input_type -> saacs.chaincode.v0.SuggestionCreateRequest
	36, // 79: saacs.chaincode.v0.ItemService.SuggestionDelete:input_type -> saacs.chaincode.v0.SuggestionDeleteRequest
	38, // 80: saacs.chaincode.v0.ItemService.SuggestionApprove:input_type -> saacs.chaincode.v0.SuggestionApproveRequest
	1,  // 81: saacs.chaincode.v0.ItemService.Get:output_type -> saacs.chaincode.v0.GetResponse
	3,  // 82: saacs.chaincode.v0.ItemService.GetFull:output_type -> saacs.chaincode.v0.GetFullResponse
	5,  // 83: saacs.chaincode.v0.ItemService.List:output_type -> saacs.chaincode.v0.ListResponse
	7,  // 84: saacs.chaincode.v0.ItemService.ListByAttrs:output_type -> saacs.chaincode.v0.ListByAttrsResponse
	9,  // 85: saacs.chaincode.v0.ItemService.Create:output_type -> saacs.chaincode.v0.CreateResponse
	13, // 86: saacs.chaincode.v0.ItemService.Update:output_type -> saacs.chaincode.v0.UpdateResponse
	15, // 87: saacs.chaincode.v0.ItemService.Delete:output_type -> saacs.chaincode.v0.DeleteResponse
	17, // 88: saacs.chaincode.v0.ItemService.GetHistory:output_type -> saacs.chaincode.v0.GetHistoryResponse
	19, // 89: saacs.chaincode.v0.ItemService.GetHiddenTx:output_type -> saacs.chaincode.v0.GetHiddenTxResponse
	21, // 90: saacs.chaincode.v0.ItemService.HideTx:output_type -> saacs.chaincode.v0.HideTxResponse
	23, // 91: saacs.chaincode.v0.ItemService.UnHideTx:output_type -> saacs.chaincode.v0.UnHideTxResponse
	25, // 92: saacs.chaincode.v0.ItemService.GetSuggestion:output_type -> saacs.chaincode.v0.GetSuggestionResponse
	29, // 93: saacs.chaincode.v0.ItemService.SuggestionListByCollection:output_type -> saacs.chaincode.v0.SuggestionListByCollectionResponse
	31, // 94: saacs.chaincode.v0.ItemService.SuggestionListByItem:output_type -> saacs.chaincode.v0.SuggestionListByItemResponse
	33, // 95: saacs.chaincode.v0.ItemService.SuggestionByPartialKey:output_type -> saacs.chaincode.v0.SuggestionByPartialKeyResponse
	35, // 96: saacs.chaincode.v0.ItemService.SuggestionCreate:output_type -> saacs.chaincode.v0.SuggestionCreateResponse
	37, // 97: saacs.chaincode.v0.ItemService.SuggestionDelete:output_type -> saacs.chaincode.v0.SuggestionDeleteResponse
	39, // 98: saacs.chaincode.v0.ItemService.SuggestionApprove:output_type -> saacs.chaincode.v0.SuggestionApproveResponse
	81, // [81:99] is the sub-list for method output_type
	63, // [63:81] is the sub-list for method input_type
	63, // [63:63] is the sub-list for extension type_name
	63, // [63:63] is the sub-list for extension extendee
	0,  // [0:63] is the sub-list for field type_name
}

func init() { file_saacs_chaincode_v0_chaincode_proto_init() }
func file_saacs_chaincode_v0_chaincode_proto_init() {
	if File_saacs_chaincode_v0_chaincode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByAttrsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByAttrsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHiddenTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHiddenTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HideTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HideTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnHideTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnHideTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuggestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionListByCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionListByCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionListByItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionListByItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionByPartialKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionByPartialKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionApproveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saacs_chaincode_v0_chaincode_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionApproveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saacs_chaincode_v0_chaincode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saacs_chaincode_v0_chaincode_proto_goTypes,
		DependencyIndexes: file_saacs_chaincode_v0_chaincode_proto_depIdxs,
		MessageInfos:      file_saacs_chaincode_v0_chaincode_proto_msgTypes,
	}.Build()
	File_saacs_chaincode_v0_chaincode_proto = out.File
	file_saacs_chaincode_v0_chaincode_proto_rawDesc = nil
	file_saacs_chaincode_v0_chaincode_proto_goTypes = nil
	file_saacs_chaincode_v0_chaincode_proto_depIdxs = nil
}
