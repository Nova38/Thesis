export const SpecimenColDefs = [
  {
    field: 'specimenId',
    filter: true,
    headerName: 'Specimen ID',
    name: 'SpecimenID',
    pin: 'left',
    sortable: true,
  },
  {
    align: 'left',
    field: 'primary.catalogNumber',
    filter: true,
    headerName: 'Catalog Number',
    sortable: true,
  },
  {
    align: 'left',
    field: 'primary.accessionNumber',
    headerName: 'Accession Number',
    name: 'Accession Number',
    sortable: true,
  },
  {
    align: 'left',
    field: 'primary.fieldNumber',
    headerName: 'Field Number',
    name: 'Field Number',
    sortable: true,
  },
  {
    align: 'left',
    field: 'primary.tissueNumber',
    headerName: 'Tissue Number',
    name: 'tissueNumber',
    sortable: true,
  },
  {
    align: 'left',
    columnGroupShow: 'open',
    field: 'primary.cataloger',
    headerName: 'Cataloger',
    name: 'cataloger',
    sortable: true,
  },
  {
    align: 'left',
    columnGroupShow: 'open',
    field: 'primary.collector',
    headerName: 'Collector',
    name: 'collector',
    sortable: true,
  },
  {
    align: 'left',
    columnGroupShow: 'open',
    field: 'primary.determiner',
    headerName: 'Determiner',
    name: 'determiner',
    sortable: true,
  },
  {
    align: 'left',
    columnGroupShow: 'open',
    field: 'primary.fieldDate.verbatim',
    headerName: 'Field Date',
    name: 'Field Date',
    sortable: true,
  },
  {
    align: 'left',
    columnGroupShow: 'open',
    field: 'primary.determinedDate.verbatim',
    headerName: 'Determined Date',
    name: 'Determined Date',
    sortable: true,
  },
  {
    align: 'left',
    columnGroupShow: 'open',
    field: 'primary.determinedReason',
    headerName: 'Determined Reason',
    name: 'determinedReason',
    sortable: true,
  },
  {
    align: 'left',
    columnGroupShow: 'open',
    field: 'primary.originalDate.verbatim',
    headerName: 'Original Date',
    name: 'originalDate',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.kingdom',
    headerName: 'Kingdom',
    name: 'kingdom',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.phylum',
    headerName: 'Phylum',
    name: 'phylum',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.class',
    headerName: 'Class',
    name: 'class',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.order',
    headerName: 'Order',
    name: 'order',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.family',
    headerName: 'Family',
    name: 'family',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.genus',
    headerName: 'Genus',
    name: 'genus',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.species',
    headerName: 'Species',
    name: 'species',
    sortable: true,
  },
  {
    align: 'left',
    field: 'taxon.subspecies',
    headerName: 'Subspecies',
    name: 'subspecies',
    sortable: true,
  },
  {
    align: 'left',
    field: 'secondary.sex',
    headerName: 'Sex',
    name: 'sex',
    sortable: true,
  },
  {
    align: 'left',
    field: 'secondary.age',
    headerName: 'Age',
    name: 'age',
    sortable: true,
  },
  {
    align: 'left',
    field: 'secondary.weight',
    headerName: 'weight',
    name: 'weight',
    sortable: true,
  },
  {
    align: 'left',
    field: 'secondary.weightUnits',
    headerName: 'Weight Units',
    name: 'weightUnits',
    sortable: true,
  },
  {
    align: 'left',
    field: 'secondary.condition',
    headerName: 'condition',
    name: 'condition',
    sortable: true,
  },
  {
    align: 'left',
    field: 'secondary.molt',
    headerName: 'Molt',
    name: 'molt',
    sortable: true,
  },
  {
    align: 'left',
    field: 'secondary.notes',
    headerName: 'Secondary Notes',
    name: 'secondaryNotes',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.country',
    headerName: 'Country',
    name: 'country',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.stateProvince',
    headerName: 'State Province',
    name: 'stateProvince',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.county',
    headerName: 'County',
    name: 'county',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.locality',
    headerName: 'Locality',
    name: 'locality',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.latitude',
    headerName: 'Latitude',
    name: 'latitude',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.longitude',
    headerName: 'Longitude',
    name: 'longitude',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.habitat',
    headerName: 'Habitat',
    name: 'habitat',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.continent',
    headerName: 'Continent',
    name: 'continent',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.locationRemarks',
    headerName: 'Location Remarks',
    name: 'locationRemarks',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.coordinateUncertaintyInMeters',
    headerName: 'Coordinate Uncertainty In Meters',
    name: 'coordinateUncertaintyInMeters',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.georeferenceBy',
    headerName: 'Georeference By',
    name: 'georeferenceBy',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.georeferenceDate.verbatim',
    headerName: 'Georeference Date',
    name: 'GeoreferenceDate',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.georeferenceProtocol',
    headerName: 'Georeference Protocol',
    name: 'georeferenceProtocol',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.geodeticDatum',
    headerName: 'Geodetic Datum',
    name: 'geodeticDatum',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.footprintWkt',
    headerName: 'Footprint Wkt',
    name: 'footprintWkt',
    sortable: true,
  },
  {
    align: 'left',
    field: 'georeference.notes',
    headerName: 'Notes',
    name: 'notes',
    sortable: true,
  },
]
// export SpecimenColDefs as default
export default SpecimenColDefs

export const FlatColDefs = SpecimenColDefs.map((def) => {
  return {
    align: def.align,
    headerName: def.headerName,
    name: def.name,
    sortable: def.sortable,
    field: () => def.field || '',
  }
})
