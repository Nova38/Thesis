@startuml
namespace auth {
    class AuthTransactionObjects << (S,Aquamarine) >> {
        - ops *v1.Operation

        + User *v1.User
        + Identifier *v1.Identifier
        + Collection *v1.Collection

    }
    interface Authenticater  {
    }
    class BaseTxCtx << (S,Aquamarine) >> {
        - authorized bool
        - authChecked bool

        + Logger *slog.Logger
        + PageSize int32

        + GetACLEntryKey() (string, error)
        + HandelBefore() error
        + HandleFnError(err *error, r any)
        + GetLogger() *slog.Logger
        + GetPageSize() int32
        + SetPageSize(pageSize int32)
        + Validate(msg proto.Message) error
        + GetFnName() string
        + MakeLastModified() (*v1.StateActivity, error)
        + GetUserId() (*v1.User_Id, error)
        + GetUser() (*v1.User, error)
        + GetCollection() (*v1.Collection, error)
        + SetCollection(id *v1.Collection_Id) (*v1.Collection, error)
        + GetACLKey() (string, error)
        + SetOperation(op *v1.Operation) error
        + GetOperations() (*v1.Operation, error)
        + SetOperationsPaths(paths *fieldmaskpb.FieldMask) error
        + Authorize() (bool, error)
        + IsAuthorized() error

    }
    class GBaseTxCtx << (S,Aquamarine) >> {
        - authorized bool
        - authChecked bool

        + Logger *slog.Logger
        + PageSize int32

    }
    interface IAuthTxCtx  {
        + GetLogger() *slog.Logger
        + GetPageSize() int32
        + SetPageSize(pageSize int32)
        + Validate(msg proto.Message) error
        + GetFnName() string
        + HandelBefore() error
        + MakeLastModified() (*v1.StateActivity, error)
        + SetOperation(operation *v1.Operation) error
        + GetOperations() (*v1.Operation, error)
        + SetOperationsPaths(paths *fieldmaskpb.FieldMask) error
        + GetUserId() (*v1.User_Id, error)
        + GetUser() (*v1.User, error)
        + GetCollection() (*v1.Collection, error)
        + SetCollection(id *v1.Collection_Id) (*v1.Collection, error)
        + GetACLEntryKey() (string, error)
        + GetViewMask() (fieldmaskpb.FieldMask, error)
        + Authorize() (bool, error)

    }
    interface IStateObjectService  {
    }
    interface ProtoStateObject  {
    }
}
"auth.any" *-- "auth.Authenticater"
"auth.AuthTransactionObjects" *-- "auth.BaseTxCtx"
"contractapi.TransactionContext" *-- "auth.BaseTxCtx"
"auth.AuthTransactionObjects" *-- "auth.GBaseTxCtx"
"contractapi.TransactionContext" *-- "auth.GBaseTxCtx"

"contract.pageHolder" <|-- "auth.BaseTxCtx"
"state.InfoAbleTxCtxInterface" <|-- "auth.BaseTxCtx"
"state.PagedTxCtxInterface" <|-- "auth.BaseTxCtx"
"state.ValidateAbleTxCtxInterface" <|-- "auth.BaseTxCtx"

namespace context {
    class AuthTxContext << (S,Aquamarine) >> {
        + Logger *slog.Logger
        + User *v1.User
        + Collection *v1.Collection
        + Role v1.Role
        + Action *v1.Action
        + Authorized bool
        + AuthChecked bool

        + GetLogger() *slog.Logger
        + SetLogger(logger *slog.Logger) error
        + IsAuthorized() (bool, error)
        + InitViaRequest(req <font color=blue>interface</font>{}) error
        + MakeLastModified() (*v1.LastModified, error)
        + SetAction(action *v1.Action) error
        + GetActionDomains() []v1.Action_Domain
        + AddActionDomain(domain v1.Action_Domain)
        + GetUser() (*v1.User, error)
        + GetUserId() (*v1.User_Id, error)
        + SetCollection(collection *v1.Collection) error
        + GetCollection() (*v1.Collection, error)
        + GetRole() (v1.Role, error)
        + Authorize() (bool, error)
        + GetAction() (*v1.Action, error)
        + MakeClearedLastModified() *v1.LastModified

    }
    interface CollectionHolder  {
        + GetCollection() *v1.Collection

    }
    interface CollectionIDTypeHolder  {
        + GetId() *v1.Collection_Id

    }
    interface LastModifiedTxContext  {
        + MakeLastModified() (*v1.LastModified, error)
        + MakeClearedLastModified() *v1.LastModified

    }
    interface LoggingTxContext  {
        + GetLogger() *log.Logger
        + SetLogger(logger *log.Logger) error

    }
    interface SpecimenHolder  {
        + GetSpecimen() *v1.Specimen

    }
    interface SpecimenIDHolder  {
        + GetId() *v1.Specimen_Id

    }
    interface SuggestionsHolder  {
        + GetId() *v1.SuggestedUpdate_Id

    }
    interface SuggestionsIDHolder  {
        + GetId() *v1.SuggestedUpdate_Id

    }
    interface TxContext  {
        + GetUserId() (*v1.User_Id, error)
        + GetUser() (*v1.User, error)
        + MakeLastModified() (*v1.LastModified, error)
        + MakeClearedLastModified() *v1.LastModified
        + GetCollection() (*v1.Collection, error)
        + SetCollection(collection *v1.Collection) error
        + InitViaRequest(req <font color=blue>interface</font>{}) error
        + GetRole() (v1.Role, error)
        + Authorize() (bool, error)
        + IsAuthorized() (bool, error)
        + GetAction() (*v1.Action, error)
        + SetAction(action *v1.Action) error
        + AddActionDomain(domain v1.Action_Domain)

    }
}
"contractapi.TransactionContext" *-- "context.AuthTxContext"
"state.LoggedTxCtx" *-- "context.AuthTxContext"

"context.LastModifiedTxContext" <|-- "context.AuthTxContext"
"context.TxContext" <|-- "context.AuthTxContext"

namespace contract {
    class CCBioTxCtx << (S,Aquamarine) >> {
        + HandelBefore() error
        + InitViaReq(req proto.Message) error
        + FetchTransactionItems() error
        + ExtractTransactionItems(req <font color=blue>interface</font>{}) error

    }
    class SpecimenContractImpl << (S,Aquamarine) >> {
        + GetBeforeTransaction() <font color=blue>interface</font>{}
        + BeforeTransaction(ctx *CCBioTxCtx) error
        + SpecimenGet(ctx *CCBioTxCtx, req *v2.SpecimenGetRequest) (*v2.SpecimenGetResponse, error)
        + SpecimenGetList(ctx *CCBioTxCtx, req *v2.SpecimenGetListRequest) (*v2.SpecimenGetListResponse, error)
        + SpecimenGetByCollection(ctx *CCBioTxCtx, req *v2.SpecimenGetByCollectionRequest) (*v2.SpecimenGetByCollectionResponse, error)
        + SpecimenGetHistory(ctx *CCBioTxCtx, req *v2.SpecimenGetHistoryRequest) (*v2.SpecimenGetHistoryResponse, error)
        + SpecimenCreate(ctx *CCBioTxCtx, req *v2.SpecimenCreateRequest) (*v2.SpecimenCreateResponse, error)
        + SpecimenUpdate(ctx *CCBioTxCtx, req *v2.SpecimenUpdateRequest) (*v2.SpecimenUpdateResponse, error)
        + SpecimenDelete(ctx *CCBioTxCtx, req *v2.SpecimenDeleteRequest) (*v2.SpecimenDeleteResponse, error)
        + SpecimenHideTx(ctx *CCBioTxCtx, req *v2.SpecimenHideTxRequest) (*v2.SpecimenHideTxResponse, error)
        + SpecimenUnHideTx(ctx *CCBioTxCtx, req *v2.SpecimenUnHideTxRequest) (*v2.SpecimenUnHideTxResponse, error)
        + GetSuggestedUpdate(ctx *CCBioTxCtx, req *v2.GetSuggestedUpdateRequest) (*v2.GetSuggestedUpdateResponse, error)
        + GetSuggestedUpdateBySpecimen(ctx *CCBioTxCtx, req *v2.GetSuggestedUpdateBySpecimenRequest) (*v2.GetSuggestedUpdateBySpecimenResponse, error)
        + GetSuggestedUpdateByCollection(ctx *CCBioTxCtx, req *v2.GetSuggestedUpdateByCollectionRequest) (*v2.GetSuggestedUpdateByCollectionResponse, error)
        + GetSuggestedUpdateList(ctx *CCBioTxCtx, req *v2.GetSuggestedUpdateListRequest) (*v2.GetSuggestedUpdateListResponse, error)
        + SuggestedUpdateCreate(ctx *CCBioTxCtx, req *v2.SuggestedUpdateCreateRequest) (*v2.SuggestedUpdateCreateResponse, error)
        + SuggestedUpdateApprove(ctx *CCBioTxCtx, req *v2.SuggestedUpdateApproveRequest) (*v2.SuggestedUpdateApproveResponse, error)
        + SuggestedUpdateReject(ctx *CCBioTxCtx, req *v2.SuggestedUpdateRejectRequest) (*v2.SuggestedUpdateRejectResponse, error)

    }
    class TransactionObjects << (S,Aquamarine) >> {
        + Specimen *v2.Specimen
        + Suggested *v2.SuggestedUpdate
        + Mask *fieldmaskpb.FieldMask

    }
    interface collectionHolder  {
        + GetCollection() *rbac.Collection

    }
    interface collectionIdHolder  {
        + GetCollectionId() *rbac.Collection_Id

    }
    interface pageHolder  {
        + GetPageSize() int32

    }
    interface specimenHolder  {
        + GetSpecimen() *v2.Specimen

    }
    interface specimenIdHolder  {
        + GetId() *v2.Specimen_Id

    }
    interface suggestedUpdateHolder  {
        + GetSuggestedUpdate() *v2.SuggestedUpdate

    }
    interface suggestedUpdateIdHolder  {
        + GetId() *v2.SuggestedUpdate_Id

    }
    interface updatedMaskHolder  {
        + GetMask() *fieldmaskpb.FieldMask

    }
}
"contract.TransactionObjects" *-- "contract.CCBioTxCtx"
"contracts.TxCtx" *-- "contract.CCBioTxCtx"
"contractapi.Contract" *-- "contract.SpecimenContractImpl"
"v2.SpecimenServiceBase" *-- "contract.SpecimenContractImpl"


namespace contracts {
    class AuthContract << (S,Aquamarine) >> {
        + GetEvaluateTransactions() []string
        + GetIgnoredFunctions() []string
        + GetCurrentUser(ctx context.TxContext) (*v1.User, error)
        + GetCurrentUserId(ctx context.TxContext) (*v1.User_Id, error)
        + GetUser(ctx context.TxContext, id *v1.GetUserRequest) (*v1.User, error)
        + GetUserList(ctx context.TxContext) (*v1.User_List, error)
        + GetCollection(ctx context.TxContext, req *v1.GetCollectionRequest) (*v1.Collection, error)
        + GetCollectionList(ctx context.TxContext) (*v1.Collection_List, error)
        + UserRegister(ctx context.TxContext, req *v1.UserRegisterRequest) (*v1.User, error)
        + AddTestUsers(ctx context.TxContext) (*v1.User, error)
        + UserUpdateMembership(ctx context.TxContext, req *v1.UpdateMembershipRequest) (*v1.User, error)
        + CollectionCreate(ctx context.TxContext, req *v1.CollectionCreateRequest) (*v1.Collection, error)
        + CollectionUpdate(ctx context.TxContext, req *v1.CollectionUpdateRequest) (*v1.Collection, error)

    }
    class AuthContractImpl << (S,Aquamarine) >> {
        + CollectionGetList(ctx *AuthTxCtx) (*v1.CollectionGetListResponse, error)
        + CollectionGet(ctx *AuthTxCtx, req *v1.CollectionGetRequest) (*v1.CollectionGetResponse, error)
        + CollectionGetHistory(ctx *AuthTxCtx, req *v1.CollectionGetHistoryRequest) (*v1.CollectionGetHistoryResponse, error)
        + CollectionCreate(ctx *AuthTxCtx, req *v1.CollectionCreateRequest) (*v1.CollectionCreateResponse, error)
        + CollectionUpdateRoles(ctx *AuthTxCtx, req *v1.CollectionUpdateRolesRequest) (*v1.CollectionUpdateRolesResponse, error)
        + CollectionUpdatePermission(ctx *AuthTxCtx, req *v1.CollectionUpdatePermissionRequest) (*v1.CollectionUpdatePermissionResponse, error)
        + GetBeforeTransaction() <font color=blue>interface</font>{}
        + BeforeTransaction(ctx *AuthTxCtx) error
        + UserGetCurrent(ctx *AuthTxCtx) (*v1.UserGetCurrentResponse, error)
        + UserGetCurrentId(ctx *AuthTxCtx) (*v1.UserGetCurrentIdResponse, error)
        + UserGetList(ctx *AuthTxCtx) (*v1.UserGetListResponse, error)
        + UserGet(ctx *AuthTxCtx, req *v1.UserGetRequest) (*v1.UserGetResponse, error)
        + UserGetHistory(ctx *AuthTxCtx, req *v1.UserGetHistoryRequest) (*v1.UserGetHistoryResponse, error)
        + UserRegister(ctx *AuthTxCtx, req *v1.UserRegisterRequest) (*v1.UserRegisterResponse, error)
        + UserUpdateMembership(ctx *AuthTxCtx, req *v1.UserUpdateMembershipRequest) (*v1.UserUpdateMembershipResponse, error)

    }
    class AuthTxCtx << (S,Aquamarine) >> {
        + HandelBefore() error
        + ExtractAuthTransactionItems(req <font color=blue>interface</font>{}) error

    }
    interface AuthTxCtxInterface  {
        + ExtractAuthTransactionItems(req <font color=blue>interface</font>{}) error

    }
    interface ClearableFeild  {
        + GetLastModified() *v1.LastModified

    }
    interface CollectionHolder  {
        + GetCollection() *rbac.Collection

    }
    interface CollectionIdHolder  {
        + GetCollectionId() *rbac.Collection_Id

    }
    interface MappedProto  {
    }
    interface MessageFeild  {
        + GetLastModified() *v1.LastModified

    }
    class SpecimenContract << (S,Aquamarine) >> {
        + GetEvaluateTransactions() []string
        + GetSpecimen(ctx context.TxContext, req *v1.GetSpecimenRequest) (*v1.Specimen, error)
        + GetSpecimenList(ctx context.TxContext) ([]*v1.Specimen, error)
        + GetSpecimenByCollection(ctx context.TxContext, req *v1.GetSpecimenByCollectionRequest) ([]*v1.Specimen, error)
        + GetSpecimenHistory(ctx context.TxContext, req *v1.GetSpecimenHistoryRequest) (*v1.Specimen_History, error)
        + GetSuggestedUpdate(ctx context.TxContext, req *v1.GetSuggestedUpdateRequest) (*v1.SuggestedUpdate, error)
        + GetSuggestedUpdateList(ctx context.TxContext) ([]*v1.SuggestedUpdate, error)
        + GetSuggestedUpdateBySpecimen(ctx context.TxContext, req *v1.GetSuggestedUpdateBySpecimenRequest) ([]*v1.SuggestedUpdate, error)
        + GetSuggestedUpdateByCollectionRequest(ctx context.TxContext, req *v1.GetSuggestedUpdateByCollectionRequest) ([]*v1.SuggestedUpdate, error)
        + Stest(ctx context.TxContext, req *v1.STest)
        + SpecimenCreate(ctx context.TxContext, req *v1.SpecimenCreateRequest) (*v1.Specimen, error)
        + SpecimenUpdate(ctx context.TxContext, req *v1.SpecimenUpdateRequest) (*v1.Specimen, error)
        + SpecimenDelete(ctx context.TxContext, req *v1.SpecimenDeleteRequest) (*v1.Specimen, error)
        + SpecimenHideTx(ctx context.TxContext, req *v1.SpecimenHideTxRequest) (*v1.Specimen, error)
        + SpecimenUnHideTx(ctx context.TxContext, req *v1.SpecimenUnHideTxRequest) (*v1.Specimen, error)
        + SuggestedUpdateCreate(ctx context.TxContext, req *v1.SuggestedUpdateCreateRequest) (*v1.SuggestedUpdate, error)
        + SuggestedUpdateReject(ctx context.TxContext, req *v1.SuggestedUpdateRejectRequest) (*v1.SuggestedUpdate, error)
        + SuggestedUpdateApprove(ctx context.TxContext, req *v1.SuggestedUpdateApproveRequest) (*v1.SuggestedUpdate, error)

    }
    interface TimestampedProto  {
        + GetLastModified() *v1.LastModified

    }
    interface UserHolder  {
        + GetUser() *rbac.User

    }
    interface UserIdHolder  {
        + GetUserId() *rbac.User_Id

    }
}
"contractapi.Contract" *-- "contracts.AuthContract"
"contractapi.Contract" *-- "contracts.AuthContractImpl"
"v1.AuthServiceBase" *-- "contracts.AuthContractImpl"
"rbac.TxCtx" *-- "contracts.AuthTxCtx"
"contractapi.Contract" *-- "contracts.SpecimenContract"

"contracts.AuthTxCtxInterface" <|-- "contracts.AuthTxCtx"

namespace example {
    class NestedMessage << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Name string
        + SimpleMessage *SimpleMessage

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetName() string
        + GetSimpleMessage() *SimpleMessage
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class NestedMessageMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class NestedMessageValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SimpleMessage << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id string
        + IsSimple bool
        + SampleList []int32

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() string
        + GetIsSimple() bool
        + GetSampleList() []int32
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SimpleMessageMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SimpleMessageValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class example.NestedMessageMultiError << (T, #FF7700) >>  {
    }
    class example.SimpleMessageMultiError << (T, #FF7700) >>  {
    }
}


namespace generators {
    class DiffGenerator << (S,Aquamarine) >> {
        - handelField(g *protogen.GeneratedFile, f *protogen.Field)
        - wktLookup(t protoreflect.FullName) bool

        + GenerateFile(gen *protogen.Plugin, file *protogen.File) (*protogen.GeneratedFile, error)
        + GenerateMessage(g *protogen.GeneratedFile, msg *protogen.Message)

    }
    interface FileGenerator  {
        + GenerateFile(gen *protogen.Plugin, file *protogen.File) (*protogen.GeneratedFile, error)

    }
    class KeyGenerator << (S,Aquamarine) >> {
        + GenerateFile(gen *protogen.Plugin, file *protogen.File) (*protogen.GeneratedFile, error)
        + GenerateMessage(gen *protogen.Plugin, g *protogen.GeneratedFile, msg *protogen.Message) bool

    }
    class ServiceGenerator << (S,Aquamarine) >> {
        + GenerateFile(gen *protogen.Plugin, file *protogen.File) (*protogen.GeneratedFile, error)
        + GenerateService(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)
        + GenerateInterface(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)
        + GenerateStruct(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)
        + GenerateStructEvaluateTransactions(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)

    }
    class TextGenerater << (S,Aquamarine) >> {
        + GenerateFile(gen *protogen.Plugin, file *protogen.File) (*protogen.GeneratedFile, error)
        + GenerateService(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)
        + GenerateInterface(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)
        + GenerateStruct(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)
        + GenerateStructEvaluateTransactions(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)
        + GenerateOperationLookup(gen *protogen.Plugin, g *protogen.GeneratedFile, v *protogen.Service)

    }
}

"generators.FileGenerator" <|-- "generators.DiffGenerator"
"generators.FileGenerator" <|-- "generators.KeyGenerator"
"generators.FileGenerator" <|-- "generators.ServiceGenerator"
"generators.FileGenerator" <|-- "generators.TextGenerater"

namespace hlf {
    class DataField << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + IsData bool
        + UpdatedLog *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetIsData() bool
        + GetUpdatedLog() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class DataFieldMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class DataFieldValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class History << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Entries []*History_Entry

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetEntries() []*History_Entry
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class HistoryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class HistoryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class History_Entry << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Timestamp *timestamppb.Timestamp
        + IsDeleted bool
        + IsHidden bool
        + State *anypb.Any

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetTimestamp() *timestamppb.Timestamp
        + GetIsDeleted() bool
        + GetIsHidden() bool
        + GetState() *anypb.Any
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class History_EntryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class History_EntryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class KeySchema << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Namespace string
        + KeyPaths *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetNamespace() string
        + GetKeyPaths() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class KeySchemaMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class KeySchemaValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ObjectDiff << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + ObjectName string
        + AllFields bool
        + UpdatedFields []string
        + DeletedFields []string
        + AddedFields []string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetObjectName() string
        + GetAllFields() bool
        + GetUpdatedFields() []string
        + GetDeletedFields() []string
        + GetAddedFields() []string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ObjectDiffMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ObjectDiffValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class TransactionType << (S,Aquamarine) >> {
        + Enum() *TransactionType
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class hlf.DataFieldMultiError << (T, #FF7700) >>  {
    }
    class hlf.HistoryMultiError << (T, #FF7700) >>  {
    }
    class hlf.History_EntryMultiError << (T, #FF7700) >>  {
    }
    class hlf.KeySchemaMultiError << (T, #FF7700) >>  {
    }
    class hlf.ObjectDiffMultiError << (T, #FF7700) >>  {
    }
    class hlf.TransactionType << (T, #FF7700) >>  {
    }
}


namespace main {
    class ServerConfig << (S,Aquamarine) >> {
        + CCID string
        + Address string
        + CCID string
        + Address string
        + CCID string
        + Address string
        + CCID string
        + Address string

    }
}


namespace rbac {
    class ACL << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + RoleDefs *ACL_Policy_Roles
        + RolePermissions *ACL_Policy_Roles
        + Memberships *ACL_Policy_Roles
        + Object *ACL_Policy_Object
        + ObjectPaths *ACL_PathPermission

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetRoleDefs() *ACL_Policy_Roles
        + GetRolePermissions() *ACL_Policy_Roles
        + GetMemberships() *ACL_Policy_Roles
        + GetObject() *ACL_Policy_Object
        + GetObjectPaths() *ACL_PathPermission
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACLMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACLValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Action << (S,Aquamarine) >> {
        + Enum() *ACL_Action
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class ACL_Domain << (S,Aquamarine) >> {
        + Enum() *ACL_Domain
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class ACL_Operation << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Domain ACL_Domain
        + Action ACL_Action
        + Paths *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetDomain() ACL_Domain
        + GetAction() ACL_Action
        + GetPaths() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_OperationMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_OperationValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_PathPermission << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Path string
        + AllowSubPaths bool
        + SubPaths <font color=blue>map</font>[string]*ACL_PathPermission
        + Policy *ACL_Policy_ObjectField

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetPath() string
        + GetAllowSubPaths() bool
        + GetSubPaths() <font color=blue>map</font>[string]*ACL_PathPermission
        + GetPolicy() *ACL_Policy_ObjectField
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_PathPermissionMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_PathPermissionValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Policy isACL_Policy_Policy

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetPolicy() isACL_Policy_Policy
        + GetRoles() *ACL_Policy_Roles
        + GetMembership() *ACL_Policy_Roles
        + GetObject() *ACL_Policy_Object
        + GetObjectField() *ACL_Policy_ObjectField
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_PolicyMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_PolicyValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy_Membership << (S,Aquamarine) >> {
        + Membership *ACL_Policy_Roles

        - isACL_Policy_Policy()

    }
    class ACL_Policy_Object << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View bool
        + Create bool
        + Delete bool
        + ViewHistory bool
        + HiddenTx bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() bool
        + GetCreate() bool
        + GetDelete() bool
        + GetViewHistory() bool
        + GetHiddenTx() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_Policy_ObjectField << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View bool
        + Edit bool
        + SuggestEdit bool
        + SuggestApprove bool
        + SuggestReject bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() bool
        + GetEdit() bool
        + GetSuggestEdit() bool
        + GetSuggestApprove() bool
        + GetSuggestReject() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_Policy_ObjectFieldMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_Policy_ObjectFieldValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy_ObjectField_ << (S,Aquamarine) >> {
        + ObjectField *ACL_Policy_ObjectField

        - isACL_Policy_Policy()

    }
    class ACL_Policy_ObjectMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_Policy_ObjectValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy_Object_ << (S,Aquamarine) >> {
        + Object *ACL_Policy_Object

        - isACL_Policy_Policy()

    }
    class ACL_Policy_Roles << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View bool
        + Create bool
        + Edit bool
        + Delete bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() bool
        + GetCreate() bool
        + GetEdit() bool
        + GetDelete() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_Policy_RolesMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_Policy_RolesValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy_Roles_ << (S,Aquamarine) >> {
        + Roles *ACL_Policy_Roles

        - isACL_Policy_Policy()

    }
    class AuthTransactionObjects << (S,Aquamarine) >> {
        - ops *rbac.ACL_Operation

        + User *rbac.User
        + Collection *rbac.Collection

    }
    interface AuthTxCtxInterface  {
        + HandelBefore() error
        + GetFnName() string
        + MakeLastModified() (*rbac.StateActivity, error)
        + GetUserId() (*rbac.User_Id, error)
        + GetUser() (*rbac.User, error)
        + GetCollection() (*rbac.Collection, error)
        + SetCollection(id *rbac.Collection_Id) (*rbac.Collection, error)
        + GetRole() (string, error)
        + SetOperation(operation *rbac.ACL_Operation) error
        + GetOperations() (*rbac.ACL_Operation, error)
        + SetOperationsPaths(paths *fieldmaskpb.FieldMask) error
        + Authorize() (bool, error)

    }
    class Collection << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Collection_Id
        + ObjectNamespace string
        + ObjectType string
        + Roles <font color=blue>map</font>[string]string
        + Acl <font color=blue>map</font>[string]*ACL

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Collection_Id
        + GetObjectNamespace() string
        + GetObjectType() string
        + GetRoles() <font color=blue>map</font>[string]string
        + GetAcl() <font color=blue>map</font>[string]*ACL
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ContextHelpers << (S,Aquamarine) >> {
        + Logger *slog.Logger
        + PageSize int32
        + Validator *protovalidate.Validator

    }
    class Error << (S,Aquamarine) >> {
        + Enum() *Error
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    interface GenericAuthTxCtxInterface  {
    }
    class History << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Entries []*History_Entry

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetEntries() []*History_Entry
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class HistoryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class HistoryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class History_Entry << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Timestamp *timestamppb.Timestamp
        + IsDeleted bool
        + IsHidden bool
        + State *anypb.Any

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetTimestamp() *timestamppb.Timestamp
        + GetIsDeleted() bool
        + GetIsHidden() bool
        + GetState() *anypb.Any
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class History_EntryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class History_EntryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class StateActivity << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Note string
        + Timestamp *timestamppb.Timestamp
        + UserId *User_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetNote() string
        + GetTimestamp() *timestamppb.Timestamp
        + GetUserId() *User_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class StateActivityMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class StateActivityValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class TxCtx << (S,Aquamarine) >> {
        - authorized bool
        - authChecked bool

        + HandelBefore() error
        + BaseHandelBefore() error
        + HandleFnError(err *error, r any)
        + GetLogger() *slog.Logger
        + SetLogger(logger *slog.Logger) error
        + GetPageSize() int32
        + SetPageSize(pageSize int32)
        + GetValidator() (*protovalidate.Validator, error)
        + Validate(msg proto.Message) error
        + GetFnName() string
        + MakeLastModified() (*rbac.StateActivity, error)
        + GetUserId() (*rbac.User_Id, error)
        + GetUser() (*rbac.User, error)
        + GetCollection() (*rbac.Collection, error)
        + SetCollection(id *rbac.Collection_Id) (*rbac.Collection, error)
        + GetRole() (string, error)
        + SetOperation(op *rbac.ACL_Operation) error
        + GetOperations() (*rbac.ACL_Operation, error)
        + SetOperationsPaths(paths *fieldmaskpb.FieldMask) error
        + Authorize() (bool, error)
        + IsAuthorized() error

    }
    class User << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *User_Id
        + Name string
        + Roles <font color=blue>map</font>[string]*User_Role
        + Metadata <font color=blue>map</font>[string]string

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *User_Id
        + GetName() string
        + GetRoles() <font color=blue>map</font>[string]*User_Role
        + GetMetadata() <font color=blue>map</font>[string]string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class User_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + MspId string
        + Id string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetMspId() string
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class User_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class User_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class User_Role << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId *Collection_Id
        + RoleId string
        + GrantedBy *User_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() *Collection_Id
        + GetRoleId() string
        + GetGrantedBy() *User_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class User_RoleMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class User_RoleValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    interface isACL_Policy_Policy  {
        - isACL_Policy_Policy()

    }
    class rbac.ACLMultiError << (T, #FF7700) >>  {
    }
    class rbac.ACL_Action << (T, #FF7700) >>  {
    }
    class rbac.ACL_Domain << (T, #FF7700) >>  {
    }
    class rbac.ACL_OperationMultiError << (T, #FF7700) >>  {
    }
    class rbac.ACL_PathPermissionMultiError << (T, #FF7700) >>  {
    }
    class rbac.ACL_PolicyMultiError << (T, #FF7700) >>  {
    }
    class rbac.ACL_Policy_ObjectFieldMultiError << (T, #FF7700) >>  {
    }
    class rbac.ACL_Policy_ObjectMultiError << (T, #FF7700) >>  {
    }
    class rbac.ACL_Policy_RolesMultiError << (T, #FF7700) >>  {
    }
    class rbac.CollectionMultiError << (T, #FF7700) >>  {
    }
    class rbac.Collection_IdMultiError << (T, #FF7700) >>  {
    }
    class rbac.Error << (T, #FF7700) >>  {
    }
    class rbac.HistoryMultiError << (T, #FF7700) >>  {
    }
    class rbac.History_EntryMultiError << (T, #FF7700) >>  {
    }
    class rbac.StateActivityMultiError << (T, #FF7700) >>  {
    }
    class rbac.UserMultiError << (T, #FF7700) >>  {
    }
    class rbac.User_IdMultiError << (T, #FF7700) >>  {
    }
    class rbac.User_RoleMultiError << (T, #FF7700) >>  {
    }
}
"rbac.AuthTxCtxInterface" *-- "rbac.GenericAuthTxCtxInterface"
"contractapi.TransactionContext" *-- "rbac.TxCtx"
"rbac.AuthTransactionObjects" *-- "rbac.TxCtx"
"rbac.ContextHelpers" *-- "rbac.TxCtx"

"rbac.isACL_Policy_Policy" <|-- "rbac.ACL_Policy_Membership"
"rbac.isACL_Policy_Policy" <|-- "rbac.ACL_Policy_ObjectField_"
"rbac.isACL_Policy_Policy" <|-- "rbac.ACL_Policy_Object_"
"rbac.isACL_Policy_Policy" <|-- "rbac.ACL_Policy_Roles_"
"state.Object" <|-- "rbac.Collection"
"contracts.UserIdHolder" <|-- "rbac.StateActivity"
"contract.pageHolder" <|-- "rbac.TxCtx"
"rbac.AuthTxCtxInterface" <|-- "rbac.TxCtx"
"state.InfoAbleTxCtxInterface" <|-- "rbac.TxCtx"
"state.PagedTxCtxInterface" <|-- "rbac.TxCtx"
"state.ValidateAbleTxCtxInterface" <|-- "rbac.TxCtx"
"state.Object" <|-- "rbac.User"
"contract.collectionIdHolder" <|-- "rbac.User_Role"
"contracts.CollectionIdHolder" <|-- "rbac.User_Role"

namespace schemav1 {
    class Action << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Level Action_Level
        + Domains []Action_Domain

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetLevel() Action_Level
        + GetDomains() []Action_Domain
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ActionMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ActionValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Action_Domain << (S,Aquamarine) >> {
        + Enum() *Action_Domain
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class Action_Level << (S,Aquamarine) >> {
        + Enum() *Action_Level
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class AuthServiceBase << (S,Aquamarine) >> {
        + GetEvaluateTransactions() []string
        + GetIgnoredFunctions() []string

    }
    interface AuthServiceInterface  {
        + UserGetCurrent(ctx T) (*UserGetCurrentResponse, error)
        + UserGetCurrentId(ctx T) (*UserGetCurrentIdResponse, error)
        + UserGetList(ctx T) (*UserGetListResponse, error)
        + UserGet(ctx T, req *UserGetRequest) (*UserGetResponse, error)
        + UserGetHistory(ctx T, req *UserGetHistoryRequest) (*UserGetHistoryResponse, error)
        + UserRegister(ctx T, req *UserRegisterRequest) (*UserRegisterResponse, error)
        + UserUpdateMembership(ctx T, req *UserUpdateMembershipRequest) (*UserUpdateMembershipResponse, error)
        + CollectionGetList(ctx T) (*CollectionGetListResponse, error)
        + CollectionGet(ctx T, req *CollectionGetRequest) (*CollectionGetResponse, error)
        + CollectionGetHistory(ctx T, req *CollectionGetHistoryRequest) (*CollectionGetHistoryResponse, error)
        + CollectionCreate(ctx T, req *CollectionCreateRequest) (*CollectionCreateResponse, error)
        + CollectionUpdateRoles(ctx T, req *CollectionUpdateRolesRequest) (*CollectionUpdateRolesResponse, error)
        + CollectionUpdatePermission(ctx T, req *CollectionUpdatePermissionRequest) (*CollectionUpdatePermissionResponse, error)

    }
    class BiochainAuthServiceBase << (S,Aquamarine) >> {
        + GetEvaluateTransactions() []string
        + GetIgnoredFunctions() []string

    }
    interface BiochainAuthServiceInterface  {
        + GetCurrentUser(ctx T) (*User, error)
        + GetCurrentUserId(ctx T) (*User_Id, error)
        + GetUserList(ctx T, req *GetUserListRequest) (*GetUserListResponse, error)
        + GetUser(ctx T, req *GetUserRequest) (*User, error)
        + UserRegister(ctx T, req *UserRegisterRequest) (*User, error)
        + UserUpdateMembership(ctx T, req *UpdateMembershipRequest) (*User, error)
        + AddTestUsers(ctx T, req *User_Id) (*emptypb.Empty, error)
        + GetCollectionList(ctx T) (*CollectionList, error)
        + GetCollection(ctx T, req *GetCollectionRequest) (*Collection, error)
        + CollectionCreate(ctx T, req *CollectionCreateRequest) (*Collection, error)
        + CollectionUpdate(ctx T, req *CollectionUpdateRequest) (*Collection, error)

    }
    class BiochainSpecimenServiceBase << (S,Aquamarine) >> {
        + GetEvaluateTransactions() []string
        + GetIgnoredFunctions() []string

    }
    interface BiochainSpecimenServiceInterface  {
        + GetSpecimen(ctx T, req *GetSpecimenRequest) (*Specimen, error)
        + GetSpecimenList(ctx T) (*Specimen_List, error)
        + GetSpecimenByCollection(ctx T, req *GetSpecimenByCollectionRequest) (*Specimen_List, error)
        + GetSpecimenHistory(ctx T, req *GetSpecimenHistoryRequest) (*Specimen_History, error)
        + SpecimenCreate(ctx T, req *SpecimenCreateRequest) (*SpecimenCreateResponse, error)
        + SpecimenUpdate(ctx T, req *SpecimenUpdateRequest) (*Specimen, error)
        + SpecimenHideTransaction(ctx T, req *SpecimenHideTxRequest) (*Specimen, error)
        + SpecimenUnHideTransaction(ctx T, req *SpecimenUnHideTxRequest) (*Specimen, error)
        + SpecimenDelete(ctx T, req *SpecimenDeleteRequest) (*emptypb.Empty, error)
        + GetSuggestedUpdate(ctx T, req *GetSuggestedUpdateRequest) (*SuggestedUpdate, error)
        + GetSuggestedUpdateBySpecimen(ctx T, req *GetSuggestedUpdateBySpecimenRequest) (*SuggestedStateList, error)
        + GetSuggestedUpdateByCollection(ctx T, req *GetSuggestedUpdateByCollectionRequest) (*SuggestedStateList, error)
        + GetSuggestedUpdateList(ctx T) (*Specimen, error)
        + SuggestedUpdateCreate(ctx T, req *SuggestedUpdateCreateRequest) (*SuggestedUpdate, error)
        + SpecimenUpdateApprove(ctx T, req *SuggestedUpdateApproveRequest) (*Specimen, error)
        + SpecimenUpdateReject(ctx T, req *SuggestedUpdateRejectRequest) (*SuggestedUpdate, error)

    }
    class Collection << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Collection_Id
        + AccessControl *Collection_AccessControl

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Collection_Id
        + GetAccessControl() *Collection_AccessControl
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionCreateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collection *Collection
        + Collection *rbac.Collection

        - validate(all bool) error
        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollection() *Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollection() *rbac.Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionCreateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error
        + Error() string
        + AllErrors() []error

    }
    class CollectionCreateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string
        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionCreateResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collection *rbac.Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollection() *rbac.Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionCreateResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionCreateResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionGetHistoryRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId *rbac.Collection_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() *rbac.Collection_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionGetHistoryRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionGetHistoryRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionGetHistoryResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collections []*rbac.Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollections() []*rbac.Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionGetHistoryResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionGetHistoryResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionGetListResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collections []*rbac.Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollections() []*rbac.Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionGetListResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionGetListResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionGetRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId *rbac.Collection_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() *rbac.Collection_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionGetRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionGetRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionGetResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collection *rbac.Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollection() *rbac.Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionGetResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionGetResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionList << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Items []*Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetItems() []*Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionListMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionListValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionUpdatePermissionRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId *rbac.Collection_Id
        + Acl <font color=blue>map</font>[string]*rbac.ACL

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() *rbac.Collection_Id
        + GetAcl() <font color=blue>map</font>[string]*rbac.ACL
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionUpdatePermissionRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionUpdatePermissionRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionUpdatePermissionResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collection *rbac.Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollection() *rbac.Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionUpdatePermissionResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionUpdatePermissionResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionUpdateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collection *Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollection() *Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionUpdateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionUpdateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionUpdateRolesRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId *rbac.Collection_Id
        + RolesToAdd <font color=blue>map</font>[string]string
        + RolesToRemove <font color=blue>map</font>[string]string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() *rbac.Collection_Id
        + GetRolesToAdd() <font color=blue>map</font>[string]string
        + GetRolesToRemove() <font color=blue>map</font>[string]string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionUpdateRolesRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionUpdateRolesRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionUpdateRolesResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Collection *rbac.Collection
        + RolesAdded <font color=blue>map</font>[string]string
        + RolesRemoved <font color=blue>map</font>[string]string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollection() *rbac.Collection
        + GetRolesAdded() <font color=blue>map</font>[string]string
        + GetRolesRemoved() <font color=blue>map</font>[string]string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionUpdateRolesResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionUpdateRolesResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class CollectionValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_AccessControl << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Roles *Collection_AccessControl_AccessControlActions
        + Users *Collection_AccessControl_AccessControlActions
        + Specimen *Collection_AccessControl_SpecimenActions
        + Primary *Collection_AccessControl_SectionActions
        + Secondary *Collection_AccessControl_SectionActions
        + Taxon *Collection_AccessControl_SectionActions
        + Georeference *Collection_AccessControl_SectionActions
        + Images *Collection_AccessControl_SectionActions
        + Loans *Collection_AccessControl_SectionActions
        + Grants *Collection_AccessControl_SectionActions

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetRoles() *Collection_AccessControl_AccessControlActions
        + GetUsers() *Collection_AccessControl_AccessControlActions
        + GetSpecimen() *Collection_AccessControl_SpecimenActions
        + GetPrimary() *Collection_AccessControl_SectionActions
        + GetSecondary() *Collection_AccessControl_SectionActions
        + GetTaxon() *Collection_AccessControl_SectionActions
        + GetGeoreference() *Collection_AccessControl_SectionActions
        + GetImages() *Collection_AccessControl_SectionActions
        + GetLoans() *Collection_AccessControl_SectionActions
        + GetGrants() *Collection_AccessControl_SectionActions
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_AccessControlMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_AccessControlValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_AccessControl_AccessControlActions << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View []Role
        + Edit []Role

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() []Role
        + GetEdit() []Role
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_AccessControl_AccessControlActionsMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_AccessControl_AccessControlActionsValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_AccessControl_SectionActions << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View []Role
        + Edit []Role
        + SuggestEdit []Role
        + SuggestApprove []Role
        + SuggestReject []Role

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() []Role
        + GetEdit() []Role
        + GetSuggestEdit() []Role
        + GetSuggestApprove() []Role
        + GetSuggestReject() []Role
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_AccessControl_SectionActionsMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_AccessControl_SectionActionsValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_AccessControl_SpecimenActions << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View []Role
        + Create []Role
        + Delete []Role
        + HideTx []Role

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() []Role
        + GetCreate() []Role
        + GetDelete() []Role
        + GetHideTx() []Role
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_AccessControl_SpecimenActionsMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_AccessControl_SpecimenActionsValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_List << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Items []*Collection

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetItems() []*Collection
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_ListMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_ListValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetCollectionRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Collection_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Collection_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetCollectionRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetCollectionRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSpecimenByCollectionRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Collection_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Collection_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSpecimenByCollectionRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSpecimenByCollectionRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSpecimenHistoryRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + IncludeHidden bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetIncludeHidden() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSpecimenHistoryRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSpecimenHistoryRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSpecimenRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSpecimenRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSpecimenRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateByCollectionRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Collection_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Collection_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateByCollectionRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateByCollectionRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateBySpecimenRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateBySpecimenRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateBySpecimenRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetUserByCollectionRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Collection_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Collection_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetUserByCollectionRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetUserByCollectionRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetUserListRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetUserListRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetUserListRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetUserListResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Users []*User

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUsers() []*User
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetUserListResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetUserListResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetUserRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *User_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *User_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetUserRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetUserRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class LastModified << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + UserId *User_Id
        + UserName string
        + TxId string
        + UpdatedAt *timestamppb.Timestamp

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUserId() *User_Id
        + GetUserName() string
        + GetTxId() string
        + GetUpdatedAt() *timestamppb.Timestamp
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class LastModifiedMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class LastModifiedValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Permission << (S,Aquamarine) >> {
        + Enum() *Permission
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class Permissions << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Roles bool
        + RolePermissions bool
        + Users bool
        + Specimen bool
        + Primary bool
        + Secondary bool
        + Taxon bool
        + Georeference bool
        + Images bool
        + Loans bool
        + Grants bool
        + Hidden bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetRoles() bool
        + GetRolePermissions() bool
        + GetUsers() bool
        + GetSpecimen() bool
        + GetPrimary() bool
        + GetSecondary() bool
        + GetTaxon() bool
        + GetGeoreference() bool
        + GetImages() bool
        + GetLoans() bool
        + GetGrants() bool
        + GetHidden() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class PermissionsMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class PermissionsValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Role << (S,Aquamarine) >> {
        + Enum() *Role
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class STest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Georeference *Specimen_Georeference

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetGeoreference() *Specimen_Georeference
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class STestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class STestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Primary *Specimen_Primary
        + Secondary *Specimen_Secondary
        + Taxon *Specimen_Taxon
        + Georeference *Specimen_Georeference
        + Images <font color=blue>map</font>[string]*Specimen_Image
        + Loans string
        + Grants string
        + HiddenTxs <font color=blue>map</font>[string]*Specimen_HiddenTx
        + LastModified *LastModified

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetPrimary() *Specimen_Primary
        + GetSecondary() *Specimen_Secondary
        + GetTaxon() *Specimen_Taxon
        + GetGeoreference() *Specimen_Georeference
        + GetImages() <font color=blue>map</font>[string]*Specimen_Image
        + GetLoans() string
        + GetGrants() string
        + GetHiddenTxs() <font color=blue>map</font>[string]*Specimen_HiddenTx
        + GetLastModified() *LastModified
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenCreateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Taxon *Specimen_Taxon
        + Primary *Specimen_Primary
        + Secondary *Specimen_Secondary
        + Georeference *Specimen_Georeference
        + Images <font color=blue>map</font>[string]*Specimen_Image
        + Loans string
        + Grants string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetTaxon() *Specimen_Taxon
        + GetPrimary() *Specimen_Primary
        + GetSecondary() *Specimen_Secondary
        + GetGeoreference() *Specimen_Georeference
        + GetImages() <font color=blue>map</font>[string]*Specimen_Image
        + GetLoans() string
        + GetGrants() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenCreateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenCreateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenCreateResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenCreateResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenCreateResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenDeleteRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenDeleteRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenDeleteRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenHideTxRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Tx *Specimen_HiddenTx

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetTx() *Specimen_HiddenTx
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenHideTxRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenHideTxRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenUnHideTxRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Tx *Specimen_HiddenTx

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetTx() *Specimen_HiddenTx
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenUnHideTxRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenUnHideTxRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenUpdateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenUpdateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenUpdateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Georeference << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Country string
        + StateProvince string
        + County string
        + Locality string
        + Latitude string
        + Longitude string
        + Habitat string
        + Notes []string
        + LastModified *LastModified

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCountry() string
        + GetStateProvince() string
        + GetCounty() string
        + GetLocality() string
        + GetLatitude() string
        + GetLongitude() string
        + GetHabitat() string
        + GetNotes() []string
        + GetLastModified() *LastModified
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_GeoreferenceMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_GeoreferenceValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_HiddenTx << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Notes string
        + LastModified *LastModified

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetNotes() string
        + GetLastModified() *LastModified
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_HiddenTxMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_HiddenTxValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_History << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Entries []*Specimen_History_Entry

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetEntries() []*Specimen_History_Entry
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_HistoryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_HistoryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_History_Entry << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Timestamp *timestamppb.Timestamp
        + IsDeleted bool
        + IsHidden bool
        + State *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetTimestamp() *timestamppb.Timestamp
        + GetIsDeleted() bool
        + GetIsHidden() bool
        + GetState() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_History_EntryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_History_EntryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId string
        + Id string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() string
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Image << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id string
        + Url string
        + Notes string
        + Hash string
        + LastModified *LastModified

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() string
        + GetUrl() string
        + GetNotes() string
        + GetHash() string
        + GetLastModified() *LastModified
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_ImageMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_ImageValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_List << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Items []*Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetItems() []*Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_ListMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_ListValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Primary << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CatalogNumber string
        + AccessionNumber string
        + FieldNumber string
        + TissueNumber string
        + Cataloger string
        + Collector string
        + Determiner string
        + FieldDate *timestamppb.Timestamp
        + CatalogDate *timestamppb.Timestamp
        + DeterminedDate *timestamppb.Timestamp
        + DeterminedReason string
        + LastModified *LastModified

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCatalogNumber() string
        + GetAccessionNumber() string
        + GetFieldNumber() string
        + GetTissueNumber() string
        + GetCataloger() string
        + GetCollector() string
        + GetDeterminer() string
        + GetFieldDate() *timestamppb.Timestamp
        + GetCatalogDate() *timestamppb.Timestamp
        + GetDeterminedDate() *timestamppb.Timestamp
        + GetDeterminedReason() string
        + GetLastModified() *LastModified
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_PrimaryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_PrimaryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Secondary << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Preparation string
        + Condition string
        + Notes string
        + LastModified *LastModified

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetPreparation() string
        + GetCondition() string
        + GetNotes() string
        + GetLastModified() *LastModified
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_SecondaryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_SecondaryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Taxon << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Kingdom string
        + Phylum string
        + Class string
        + Order string
        + Family string
        + Genus string
        + Species string
        + Subspecies string
        + LastModified *LastModified

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetKingdom() string
        + GetPhylum() string
        + GetClass() string
        + GetOrder() string
        + GetFamily() string
        + GetGenus() string
        + GetSpecies() string
        + GetSubspecies() string
        + GetLastModified() *LastModified
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_TaxonMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_TaxonValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedStateList << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Items []*SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetItems() []*SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedStateListMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedStateListValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdate << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id
        + SuggestedBy *User_Id
        + SuggestedDate *timestamppb.Timestamp
        + SuggestedReason string
        + Primary *Specimen_Primary
        + Secondary *Specimen_Secondary
        + Taxon *Specimen_Taxon
        + Georeference *Specimen_Georeference
        + Loans string
        + Grants string

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + GetSuggestedBy() *User_Id
        + GetSuggestedDate() *timestamppb.Timestamp
        + GetSuggestedReason() string
        + GetPrimary() *Specimen_Primary
        + GetSecondary() *Specimen_Secondary
        + GetTaxon() *Specimen_Taxon
        + GetGeoreference() *Specimen_Georeference
        + GetLoans() string
        + GetGrants() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateApproveRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id
        + Comment string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + GetComment() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateApproveRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateApproveRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateCreateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SuggestedUpdate *SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSuggestedUpdate() *SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateCreateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateCreateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateRejectRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id
        + Comment string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + GetComment() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateRejectRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateRejectRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdate_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SpecimenId *Specimen_Id
        + Id string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimenId() *Specimen_Id
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdate_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdate_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class TestOperationRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId *rbac.Collection_Id
        + Operation *rbac.ACL_Operation

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() *rbac.Collection_Id
        + GetOperation() *rbac.ACL_Operation
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class TestOperationRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class TestOperationRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class TestOperationResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Result bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetResult() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class TestOperationResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class TestOperationResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UpdateMembershipRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + UserId *User_Id
        + CollectionId *Collection_Id
        + NewRole Role

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUserId() *User_Id
        + GetCollectionId() *Collection_Id
        + GetNewRole() Role
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UpdateMembershipRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UpdateMembershipRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class User << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *User_Id
        + Name string
        + Email string
        + Affiliation string
        + Memberships <font color=blue>map</font>[string]Role

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *User_Id
        + GetName() string
        + GetEmail() string
        + GetAffiliation() string
        + GetMemberships() <font color=blue>map</font>[string]Role
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetCurrentIdResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + UserId *rbac.User_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUserId() *rbac.User_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetCurrentIdResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserGetCurrentIdResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserGetCurrentResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + User *rbac.User

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUser() *rbac.User
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetCurrentResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserGetCurrentResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserGetHistoryRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *rbac.User_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *rbac.User_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetHistoryRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserGetHistoryRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserGetHistoryResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + UserId *rbac.User_Id
        + History *rbac.History

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUserId() *rbac.User_Id
        + GetHistory() *rbac.History
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetHistoryResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserGetHistoryResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserGetListResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Users []*rbac.User

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUsers() []*rbac.User
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetListResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserGetListResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserGetRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *rbac.User_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *rbac.User_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserGetRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserGetResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + User *rbac.User

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUser() *rbac.User
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserGetResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserGetResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserRegisterRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Name string
        + Email string
        + Affiliation string
        + Name string

        - validate(all bool) error
        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetName() string
        + GetEmail() string
        + GetAffiliation() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetName() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserRegisterRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error
        + Error() string
        + AllErrors() []error

    }
    class UserRegisterRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string
        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserRegisterResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + User *rbac.User

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUser() *rbac.User
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserRegisterResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserRegisterResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserUpdateMembershipRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *rbac.User_Id
        + CollectionId *rbac.Collection_Id
        + Role string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *rbac.User_Id
        + GetCollectionId() *rbac.Collection_Id
        + GetRole() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserUpdateMembershipRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserUpdateMembershipRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserUpdateMembershipResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + User *rbac.User

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetUser() *rbac.User
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserUpdateMembershipResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserUpdateMembershipResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class UserValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class User_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + MspId string
        + Id string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetMspId() string
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class User_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class User_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class User_List << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Items []*User

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetItems() []*User
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class User_ListMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class User_ListValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class schemav1.ActionMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Action_Domain << (T, #FF7700) >>  {
    }
    class schemav1.Action_Level << (T, #FF7700) >>  {
    }
    class schemav1.CollectionCreateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionCreateResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionGetHistoryRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionGetHistoryResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionGetListResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionGetRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionGetResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionListMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionUpdatePermissionRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionUpdatePermissionResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionUpdateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionUpdateRolesRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.CollectionUpdateRolesResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Collection_AccessControlMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Collection_AccessControl_AccessControlActionsMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Collection_AccessControl_SectionActionsMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Collection_AccessControl_SpecimenActionsMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Collection_IdMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Collection_ListMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetCollectionRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetSpecimenByCollectionRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetSpecimenHistoryRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetSpecimenRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetSuggestedUpdateByCollectionRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetSuggestedUpdateBySpecimenRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetSuggestedUpdateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetUserByCollectionRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetUserListRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetUserListResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.GetUserRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.LastModifiedMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Permission << (T, #FF7700) >>  {
    }
    class schemav1.PermissionsMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Role << (T, #FF7700) >>  {
    }
    class schemav1.STestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SpecimenCreateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SpecimenCreateResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SpecimenDeleteRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SpecimenHideTxRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SpecimenMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SpecimenUnHideTxRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SpecimenUpdateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_GeoreferenceMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_HiddenTxMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_HistoryMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_History_EntryMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_IdMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_ImageMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_ListMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_PrimaryMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_SecondaryMultiError << (T, #FF7700) >>  {
    }
    class schemav1.Specimen_TaxonMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SuggestedStateListMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SuggestedUpdateApproveRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SuggestedUpdateCreateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SuggestedUpdateMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SuggestedUpdateRejectRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.SuggestedUpdate_IdMultiError << (T, #FF7700) >>  {
    }
    class schemav1.TestOperationRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.TestOperationResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UpdateMembershipRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserGetCurrentIdResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserGetCurrentResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserGetHistoryRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserGetHistoryResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserGetListResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserGetRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserGetResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserRegisterRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserRegisterResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserUpdateMembershipRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav1.UserUpdateMembershipResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav1.User_IdMultiError << (T, #FF7700) >>  {
    }
    class schemav1.User_ListMultiError << (T, #FF7700) >>  {
    }
}

"state.Object" <|-- "schemav1.Collection"
"contract.collectionHolder" <|-- "schemav1.CollectionCreateRequest"
"contracts.CollectionHolder" <|-- "schemav1.CollectionCreateRequest"
"contract.collectionHolder" <|-- "schemav1.CollectionCreateResponse"
"contracts.CollectionHolder" <|-- "schemav1.CollectionCreateResponse"
"contract.collectionIdHolder" <|-- "schemav1.CollectionGetHistoryRequest"
"contracts.CollectionIdHolder" <|-- "schemav1.CollectionGetHistoryRequest"
"contract.collectionIdHolder" <|-- "schemav1.CollectionGetRequest"
"contracts.CollectionIdHolder" <|-- "schemav1.CollectionGetRequest"
"contract.collectionHolder" <|-- "schemav1.CollectionGetResponse"
"contracts.CollectionHolder" <|-- "schemav1.CollectionGetResponse"
"contract.collectionIdHolder" <|-- "schemav1.CollectionUpdatePermissionRequest"
"contracts.CollectionIdHolder" <|-- "schemav1.CollectionUpdatePermissionRequest"
"contract.collectionHolder" <|-- "schemav1.CollectionUpdatePermissionResponse"
"contracts.CollectionHolder" <|-- "schemav1.CollectionUpdatePermissionResponse"
"contract.collectionIdHolder" <|-- "schemav1.CollectionUpdateRolesRequest"
"contracts.CollectionIdHolder" <|-- "schemav1.CollectionUpdateRolesRequest"
"contract.collectionHolder" <|-- "schemav1.CollectionUpdateRolesResponse"
"contracts.CollectionHolder" <|-- "schemav1.CollectionUpdateRolesResponse"
"state.Object" <|-- "schemav1.Specimen"
"state.Object" <|-- "schemav1.SuggestedUpdate"
"contract.collectionIdHolder" <|-- "schemav1.TestOperationRequest"
"contracts.CollectionIdHolder" <|-- "schemav1.TestOperationRequest"
"state.Object" <|-- "schemav1.User"
"contracts.UserIdHolder" <|-- "schemav1.UserGetCurrentIdResponse"
"contracts.UserHolder" <|-- "schemav1.UserGetCurrentResponse"
"contracts.UserIdHolder" <|-- "schemav1.UserGetHistoryResponse"
"contracts.UserHolder" <|-- "schemav1.UserGetResponse"
"contracts.UserHolder" <|-- "schemav1.UserRegisterResponse"
"contract.collectionIdHolder" <|-- "schemav1.UserUpdateMembershipRequest"
"contracts.CollectionIdHolder" <|-- "schemav1.UserUpdateMembershipRequest"
"contracts.UserHolder" <|-- "schemav1.UserUpdateMembershipResponse"

namespace schemav2 {
    class GetSuggestedUpdateByCollectionRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *v1.Collection_Id
        + Bookmark string
        + PageSize int32

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *v1.Collection_Id
        + GetBookmark() string
        + GetPageSize() int32
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateByCollectionRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateByCollectionRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateByCollectionResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Bookmark string
        + SuggestedUpdates []*SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetBookmark() string
        + GetSuggestedUpdates() []*SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateByCollectionResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateByCollectionResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateBySpecimenRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Bookmark string
        + PageSize int32

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetBookmark() string
        + GetPageSize() int32
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateBySpecimenRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateBySpecimenRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateBySpecimenResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Bookmark string
        + SuggestedUpdates []*SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetBookmark() string
        + GetSuggestedUpdates() []*SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateBySpecimenResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateBySpecimenResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateListRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Bookmark string
        + PageSize int32

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetBookmark() string
        + GetPageSize() int32
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateListRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateListRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateListResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Bookmark string
        + SuggestedUpdates []*SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetBookmark() string
        + GetSuggestedUpdates() []*SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateListResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateListResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class GetSuggestedUpdateResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SuggestedUpdate *SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSuggestedUpdate() *SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class GetSuggestedUpdateResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class GetSuggestedUpdateResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Primary *Specimen_Primary
        + Secondary *Specimen_Secondary
        + Taxon *Specimen_Taxon
        + Georeference *Specimen_Georeference
        + Images <font color=blue>map</font>[string]*Specimen_Image
        + Loans <font color=blue>map</font>[string]*Specimen_Loan
        + Grants <font color=blue>map</font>[string]*Specimen_Grant
        + HiddenTxs <font color=blue>map</font>[string]*v1.HiddenTx
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetPrimary() *Specimen_Primary
        + GetSecondary() *Specimen_Secondary
        + GetTaxon() *Specimen_Taxon
        + GetGeoreference() *Specimen_Georeference
        + GetImages() <font color=blue>map</font>[string]*Specimen_Image
        + GetLoans() <font color=blue>map</font>[string]*Specimen_Loan
        + GetGrants() <font color=blue>map</font>[string]*Specimen_Grant
        + GetHiddenTxs() <font color=blue>map</font>[string]*v1.HiddenTx
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenCreateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenCreateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenCreateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenCreateResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenCreateResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenCreateResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenDeleteRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenDeleteRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenDeleteRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenDeleteResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenDeleteResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenDeleteResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetByCollectionRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *v1.Collection_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *v1.Collection_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetByCollectionRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetByCollectionRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetByCollectionResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimens []*Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimens() []*Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetByCollectionResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetByCollectionResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetHistoryRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + IncludeHidden bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetIncludeHidden() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetHistoryRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetHistoryRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetHistoryResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + History *v1.History

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetHistory() *v1.History
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetHistoryResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetHistoryResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetListRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Bookmark string
        + PageSize int32

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetBookmark() string
        + GetPageSize() int32
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetListRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetListRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetListResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Bookmark string
        + Specimens []*Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetBookmark() string
        + GetSpecimens() []*Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetListResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetListResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenGetResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenGetResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenGetResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenHideTxRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Tx *v1.HiddenTx

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetTx() *v1.HiddenTx
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenHideTxRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenHideTxRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenHideTxResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenHideTxResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenHideTxResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenServiceBase << (S,Aquamarine) >> {
        + GetEvaluateTransactions() []string
        + GetIgnoredFunctions() []string

    }
    interface SpecimenServiceInterface  {
        + SpecimenGet(ctx T, req *SpecimenGetRequest) (*SpecimenGetResponse, error)
        + SpecimenGetList(ctx T, req *SpecimenGetListRequest) (*SpecimenGetListResponse, error)
        + SpecimenGetByCollection(ctx T, req *SpecimenGetByCollectionRequest) (*SpecimenGetByCollectionResponse, error)
        + SpecimenGetHistory(ctx T, req *SpecimenGetHistoryRequest) (*SpecimenGetHistoryResponse, error)
        + SpecimenCreate(ctx T, req *SpecimenCreateRequest) (*SpecimenCreateResponse, error)
        + SpecimenUpdate(ctx T, req *SpecimenUpdateRequest) (*SpecimenUpdateResponse, error)
        + SpecimenDelete(ctx T, req *SpecimenDeleteRequest) (*SpecimenDeleteResponse, error)
        + SpecimenHideTx(ctx T, req *SpecimenHideTxRequest) (*SpecimenHideTxResponse, error)
        + SpecimenUnHideTx(ctx T, req *SpecimenUnHideTxRequest) (*SpecimenUnHideTxResponse, error)
        + GetSuggestedUpdate(ctx T, req *GetSuggestedUpdateRequest) (*GetSuggestedUpdateResponse, error)
        + GetSuggestedUpdateBySpecimen(ctx T, req *GetSuggestedUpdateBySpecimenRequest) (*GetSuggestedUpdateBySpecimenResponse, error)
        + GetSuggestedUpdateByCollection(ctx T, req *GetSuggestedUpdateByCollectionRequest) (*GetSuggestedUpdateByCollectionResponse, error)
        + GetSuggestedUpdateList(ctx T, req *GetSuggestedUpdateListRequest) (*GetSuggestedUpdateListResponse, error)
        + SuggestedUpdateCreate(ctx T, req *SuggestedUpdateCreateRequest) (*SuggestedUpdateCreateResponse, error)
        + SuggestedUpdateApprove(ctx T, req *SuggestedUpdateApproveRequest) (*SuggestedUpdateApproveResponse, error)
        + SuggestedUpdateReject(ctx T, req *SuggestedUpdateRejectRequest) (*SuggestedUpdateRejectResponse, error)

    }
    class SpecimenUnHideTxRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Specimen_Id
        + Tx *v1.HiddenTx

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Specimen_Id
        + GetTx() *v1.HiddenTx
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenUnHideTxRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenUnHideTxRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenUnHideTxResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenUnHideTxResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenUnHideTxResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenUpdateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen
        + UpdateMask *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + GetUpdateMask() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenUpdateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenUpdateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenUpdateResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Specimen *Specimen
        + UpdateMask *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimen() *Specimen
        + GetUpdateMask() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SpecimenUpdateResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SpecimenUpdateResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SpecimenValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Georeference << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Country string
        + StateProvince string
        + County string
        + Locality string
        + Latitude string
        + Longitude string
        + Habitat string
        + Notes []string
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCountry() string
        + GetStateProvince() string
        + GetCounty() string
        + GetLocality() string
        + GetLatitude() string
        + GetLongitude() string
        + GetHabitat() string
        + GetNotes() []string
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_GeoreferenceMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_GeoreferenceValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Grant << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id string
        + Description string
        + GrantedBy string
        + GrantedTo string
        + GrantedDate *timestamppb.Timestamp
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() string
        + GetDescription() string
        + GetGrantedBy() string
        + GetGrantedTo() string
        + GetGrantedDate() *timestamppb.Timestamp
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_GrantMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_GrantValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId string
        + Id string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() string
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Image << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id string
        + Url string
        + Notes string
        + Hash string
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() string
        + GetUrl() string
        + GetNotes() string
        + GetHash() string
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_ImageMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_ImageValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Loan << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id string
        + Description string
        + LoanedBy string
        + LoanedTo string
        + LoanedDate *timestamppb.Timestamp
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() string
        + GetDescription() string
        + GetLoanedBy() string
        + GetLoanedTo() string
        + GetLoanedDate() *timestamppb.Timestamp
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_LoanMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_LoanValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Primary << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CatalogNumber string
        + AccessionNumber string
        + FieldNumber string
        + TissueNumber string
        + Cataloger string
        + Collector string
        + Determiner string
        + FieldDate *timestamppb.Timestamp
        + CatalogDate *timestamppb.Timestamp
        + DeterminedDate *timestamppb.Timestamp
        + DeterminedReason string
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCatalogNumber() string
        + GetAccessionNumber() string
        + GetFieldNumber() string
        + GetTissueNumber() string
        + GetCataloger() string
        + GetCollector() string
        + GetDeterminer() string
        + GetFieldDate() *timestamppb.Timestamp
        + GetCatalogDate() *timestamppb.Timestamp
        + GetDeterminedDate() *timestamppb.Timestamp
        + GetDeterminedReason() string
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_PrimaryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_PrimaryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Secondary << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Preparation string
        + Condition string
        + Notes string
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetPreparation() string
        + GetCondition() string
        + GetNotes() string
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_SecondaryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_SecondaryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Specimen_Taxon << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Kingdom string
        + Phylum string
        + Class string
        + Order string
        + Family string
        + Genus string
        + Species string
        + Subspecies string
        + LastModified *v1.StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetKingdom() string
        + GetPhylum() string
        + GetClass() string
        + GetOrder() string
        + GetFamily() string
        + GetGenus() string
        + GetSpecies() string
        + GetSubspecies() string
        + GetLastModified() *v1.StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Specimen_TaxonMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Specimen_TaxonValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdate << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id
        + UpdateInfo *v1.StateActivity
        + Specimen *Specimen
        + Mask *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + GetUpdateInfo() *v1.StateActivity
        + GetSpecimen() *Specimen
        + GetMask() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateApproveRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id
        + Comment string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + GetComment() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateApproveRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateApproveRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateApproveResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SuggestedUpdate *SuggestedUpdate
        + Specimen *Specimen

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSuggestedUpdate() *SuggestedUpdate
        + GetSpecimen() *Specimen
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateApproveResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateApproveResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateCreateRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SuggestedUpdate *SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSuggestedUpdate() *SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateCreateRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateCreateRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateCreateResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SuggestedUpdate *SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSuggestedUpdate() *SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateCreateResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateCreateResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateRejectRequest << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *SuggestedUpdate_Id
        + Comment string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *SuggestedUpdate_Id
        + GetComment() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateRejectRequestMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateRejectRequestValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateRejectResponse << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SuggestedUpdate *SuggestedUpdate

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSuggestedUpdate() *SuggestedUpdate
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdateRejectResponseMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdateRejectResponseValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdateValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class SuggestedUpdate_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + SpecimenId *Specimen_Id
        + Id string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetSpecimenId() *Specimen_Id
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class SuggestedUpdate_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class SuggestedUpdate_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class schemav2.GetSuggestedUpdateByCollectionRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.GetSuggestedUpdateByCollectionResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.GetSuggestedUpdateBySpecimenRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.GetSuggestedUpdateBySpecimenResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.GetSuggestedUpdateListRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.GetSuggestedUpdateListResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.GetSuggestedUpdateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.GetSuggestedUpdateResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenCreateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenCreateResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenDeleteRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenDeleteResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetByCollectionRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetByCollectionResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetHistoryRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetHistoryResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetListRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetListResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenGetResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenHideTxRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenHideTxResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenUnHideTxRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenUnHideTxResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenUpdateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SpecimenUpdateResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_GeoreferenceMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_GrantMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_IdMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_ImageMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_LoanMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_PrimaryMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_SecondaryMultiError << (T, #FF7700) >>  {
    }
    class schemav2.Specimen_TaxonMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdateApproveRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdateApproveResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdateCreateRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdateCreateResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdateMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdateRejectRequestMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdateRejectResponseMultiError << (T, #FF7700) >>  {
    }
    class schemav2.SuggestedUpdate_IdMultiError << (T, #FF7700) >>  {
    }
}

"context.CollectionIDTypeHolder" <|-- "schemav2.GetSuggestedUpdateByCollectionRequest"
"contract.pageHolder" <|-- "schemav2.GetSuggestedUpdateByCollectionRequest"
"contract.pageHolder" <|-- "schemav2.GetSuggestedUpdateBySpecimenRequest"
"contract.pageHolder" <|-- "schemav2.GetSuggestedUpdateListRequest"
"state.Object" <|-- "schemav2.Specimen"
"context.CollectionIDTypeHolder" <|-- "schemav2.SpecimenGetByCollectionRequest"
"contract.pageHolder" <|-- "schemav2.SpecimenGetListRequest"
"contract.updatedMaskHolder" <|-- "schemav2.SuggestedUpdate"
"state.Object" <|-- "schemav2.SuggestedUpdate"

namespace state {
    class HistoryEntry << (S,Aquamarine) >> {
        + TxId string
        + Timestamp *timestamppb.Timestamp
        + IsDelete bool
        + IsHidden bool
        + State T

    }
    class HistoryList << (S,Aquamarine) >> {
        + Entries []*

    }
    interface InfoAbleTxCtxInterface  {
        + GetFnName() string

    }
    class KeyAlreadyExistsError << (S,Aquamarine) >> {
        + Key string
        + Namespace string
        + MSG string

        + Error() string

    }
    class KeyNotFoundError << (S,Aquamarine) >> {
        + Key string
        + Namespace string
        + MSG string

        + Error() string

    }
    class LoggedTxCtx << (S,Aquamarine) >> {
        + Logger *slog.Logger

        + GetLogger() *slog.Logger
        + HandleFnError(err *error, r any)

    }
    interface LoggedTxCtxInterface  {
        + GetLogger() *slog.Logger
        + HandleFnError(err *error, r any)

    }
    interface Object  {
        + Key() ([]string, error)
        + Namespace() string

    }
    class PagedTxCtx << (S,Aquamarine) >> {
        + PageSize int32

    }
    interface PagedTxCtxInterface  {
        + GetPageSize() int32
        + SetPageSize(pageSize int32)

    }
    interface ProtoObject  {
        + GetHiddenTxs()

    }
    class StateObjectList << (S,Aquamarine) >> {
        + Entries []T

    }
    class ValidateAbleTxCtx << (S,Aquamarine) >> {
        + Validator *protovalidate.Validator

        + GetValidator() (*protovalidate.Validator, error)
        + Validate(msg proto.Message) error

    }
    interface ValidateAbleTxCtxInterface  {
        + Validate(msg proto.Message) error

    }
}
"state.LoggedTxCtxInterface" *-- "state.LoggedTxCtx"
"state.LoggedTxCtxInterface" *-- "state.PagedTxCtx"
"state.LoggedTxCtxInterface" *-- "state.PagedTxCtxInterface"
"state.Object" *-- "state.ProtoObject"
"state.ValidateAbleTxCtxInterface" *-- "state.ValidateAbleTxCtx"

"state.LoggedTxCtxInterface" <|-- "state.LoggedTxCtx"
"state.ValidateAbleTxCtxInterface" <|-- "state.ValidateAbleTxCtx"

namespace v1 {
    class ACL << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Entries <font color=blue>map</font>[string]*ACL_Entry
        + Default *ACL_Entry
        + Public *ACL_Entry

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetEntries() <font color=blue>map</font>[string]*ACL_Entry
        + GetDefault() *ACL_Entry
        + GetPublic() *ACL_Entry
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACLMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACLValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Entry << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + RoleDefs *ACL_Policy_Permission
        + RolePermissions *ACL_Policy_Permission
        + Memberships *ACL_Policy_Permission
        + Object *ACL_Policy_Object
        + ObjectPaths *ACL_PathPermission
        + ViewMask *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetRoleDefs() *ACL_Policy_Permission
        + GetRolePermissions() *ACL_Policy_Permission
        + GetMemberships() *ACL_Policy_Permission
        + GetObject() *ACL_Policy_Object
        + GetObjectPaths() *ACL_PathPermission
        + GetViewMask() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_EntryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_EntryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_PathPermission << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Path string
        + AllowSubPaths bool
        + SubPaths <font color=blue>map</font>[string]*ACL_PathPermission
        + Policy *ACL_Policy_ObjectField

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetPath() string
        + GetAllowSubPaths() bool
        + GetSubPaths() <font color=blue>map</font>[string]*ACL_PathPermission
        + GetPolicy() *ACL_Policy_ObjectField
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_PathPermissionMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_PathPermissionValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_PolicyMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_PolicyValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy_Object << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View bool
        + Create bool
        + Delete bool
        + ViewHistory bool
        + HiddenTx bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() bool
        + GetCreate() bool
        + GetDelete() bool
        + GetViewHistory() bool
        + GetHiddenTx() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_Policy_ObjectField << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View bool
        + Edit bool
        + SuggestEdit bool
        + SuggestApprove bool
        + SuggestReject bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() bool
        + GetEdit() bool
        + GetSuggestEdit() bool
        + GetSuggestApprove() bool
        + GetSuggestReject() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_Policy_ObjectFieldMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_Policy_ObjectFieldValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy_ObjectMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_Policy_ObjectValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class ACL_Policy_Permission << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + View bool
        + Create bool
        + Edit bool
        + Delete bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetView() bool
        + GetCreate() bool
        + GetEdit() bool
        + GetDelete() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class ACL_Policy_PermissionMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class ACL_Policy_PermissionValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *Collection_Id
        + Settings *Collection_Settings
        + ObjectType string
        + ObjectNamespace string
        + Acl *ACL
        + Roles <font color=blue>map</font>[string]*Identifier

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *Collection_Id
        + GetSettings() *Collection_Settings
        + GetObjectType() string
        + GetObjectNamespace() string
        + GetAcl() *ACL
        + GetRoles() <font color=blue>map</font>[string]*Identifier
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class CollectionMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class CollectionValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_AuthType << (S,Aquamarine) >> {
        + Enum() *Collection_AuthType
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class Collection_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + CollectionId string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetCollectionId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Collection_Settings << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + AuthType Collection_AuthType
        + ViewRestrictionsEnabled bool
        + AclInheritanceEnabled bool

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetAuthType() Collection_AuthType
        + GetViewRestrictionsEnabled() bool
        + GetAclInheritanceEnabled() bool
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Collection_SettingsMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Collection_SettingsValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Error << (S,Aquamarine) >> {
        + Enum() *Error
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class HiddenTx << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Notes string
        + LastModified *StateActivity

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetNotes() string
        + GetLastModified() *StateActivity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class HiddenTxMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class HiddenTxValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class History << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Entries <font color=blue>map</font>[string]*History_Entry

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetEntries() <font color=blue>map</font>[string]*History_Entry
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class HistoryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class HistoryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class History_Entry << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Timestamp *timestamppb.Timestamp
        + IsDeleted bool
        + IsHidden bool
        + State *anypb.Any

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetTimestamp() *timestamppb.Timestamp
        + GetIsDeleted() bool
        + GetIsHidden() bool
        + GetState() *anypb.Any
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class History_EntryMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class History_EntryValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Identifier << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id isIdentifier_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() isIdentifier_Id
        + GetAttribute() *Identifier_Attribute
        + GetRole() *Identifier_Role
        + GetIdentity() *Identifier_Identity
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class IdentifierMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class IdentifierValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Identifier_Attribute << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Name string
        + MspId string
        + Value string
        + Parent string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetName() string
        + GetMspId() string
        + GetValue() string
        + GetParent() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Identifier_AttributeMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Identifier_AttributeValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Identifier_Attribute_ << (S,Aquamarine) >> {
        + Attribute *Identifier_Attribute

        - isIdentifier_Id()

    }
    class Identifier_Identity << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + MspId string
        + Id string

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetMspId() string
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Identifier_IdentityMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Identifier_IdentityValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Identifier_Identity_ << (S,Aquamarine) >> {
        + Identity *Identifier_Identity

        - isIdentifier_Id()

    }
    class Identifier_Role << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id string
        + Parent string

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() string
        + GetParent() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class Identifier_RoleMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class Identifier_RoleValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Identifier_Role_ << (S,Aquamarine) >> {
        + Role *Identifier_Role

        - isIdentifier_Id()

    }
    class Operation << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Domain Operation_Domain
        + Action Operation_Action
        + Paths *fieldmaskpb.FieldMask

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetDomain() Operation_Domain
        + GetAction() Operation_Action
        + GetPaths() *fieldmaskpb.FieldMask
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class OperationMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class OperationValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class Operation_Action << (S,Aquamarine) >> {
        + Enum() *Operation_Action
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class Operation_Domain << (S,Aquamarine) >> {
        + Enum() *Operation_Domain
        + String() string
        + Descriptor() protoreflect.EnumDescriptor
        + Type() protoreflect.EnumType
        + Number() protoreflect.EnumNumber
        + EnumDescriptor() ([]byte, []int)

    }
    class StateActivity << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + TxId string
        + Note string
        + Timestamp *timestamppb.Timestamp
        + UserId *User_Id

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetTxId() string
        + GetNote() string
        + GetTimestamp() *timestamppb.Timestamp
        + GetUserId() *User_Id
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class StateActivityMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class StateActivityValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class User << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + Id *User_Id
        + Name string
        + Memberships <font color=blue>map</font>[string]string

        - validate(all bool) error

        + Namespace() string
        + Key() ([]string, error)
        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetId() *User_Id
        + GetName() string
        + GetMemberships() <font color=blue>map</font>[string]string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class UserMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class UserValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    class User_Id << (S,Aquamarine) >> {
        - state protoimpl.MessageState
        - sizeCache protoimpl.SizeCache
        - unknownFields protoimpl.UnknownFields

        + MspId string
        + Id string

        - validate(all bool) error

        + Reset()
        + String() string
        + ProtoMessage()
        + ProtoReflect() protoreflect.Message
        + Descriptor() ([]byte, []int)
        + GetMspId() string
        + GetId() string
        + MarshalJSON() ([]byte, error)
        + UnmarshalJSON(b []byte) error
        + Validate() error
        + ValidateAll() error

    }
    class User_IdMultiError << (S,Aquamarine) >> {
        + Error() string
        + AllErrors() []error

    }
    class User_IdValidationError << (S,Aquamarine) >> {
        - field string
        - reason string
        - cause error
        - key bool

        + Field() string
        + Reason() string
        + Cause() error
        + Key() bool
        + ErrorName() string
        + Error() string

    }
    interface isIdentifier_Id  {
        - isIdentifier_Id()

    }
    class v1.ACLMultiError << (T, #FF7700) >>  {
    }
    class v1.ACL_EntryMultiError << (T, #FF7700) >>  {
    }
    class v1.ACL_PathPermissionMultiError << (T, #FF7700) >>  {
    }
    class v1.ACL_PolicyMultiError << (T, #FF7700) >>  {
    }
    class v1.ACL_Policy_ObjectFieldMultiError << (T, #FF7700) >>  {
    }
    class v1.ACL_Policy_ObjectMultiError << (T, #FF7700) >>  {
    }
    class v1.ACL_Policy_PermissionMultiError << (T, #FF7700) >>  {
    }
    class v1.CollectionMultiError << (T, #FF7700) >>  {
    }
    class v1.Collection_AuthType << (T, #FF7700) >>  {
    }
    class v1.Collection_IdMultiError << (T, #FF7700) >>  {
    }
    class v1.Collection_SettingsMultiError << (T, #FF7700) >>  {
    }
    class v1.Error << (T, #FF7700) >>  {
    }
    class v1.HiddenTxMultiError << (T, #FF7700) >>  {
    }
    class v1.HistoryMultiError << (T, #FF7700) >>  {
    }
    class v1.History_EntryMultiError << (T, #FF7700) >>  {
    }
    class v1.IdentifierMultiError << (T, #FF7700) >>  {
    }
    class v1.Identifier_AttributeMultiError << (T, #FF7700) >>  {
    }
    class v1.Identifier_IdentityMultiError << (T, #FF7700) >>  {
    }
    class v1.Identifier_RoleMultiError << (T, #FF7700) >>  {
    }
    class v1.OperationMultiError << (T, #FF7700) >>  {
    }
    class v1.Operation_Action << (T, #FF7700) >>  {
    }
    class v1.Operation_Domain << (T, #FF7700) >>  {
    }
    class v1.StateActivityMultiError << (T, #FF7700) >>  {
    }
    class v1.UserMultiError << (T, #FF7700) >>  {
    }
    class v1.User_IdMultiError << (T, #FF7700) >>  {
    }
}

"context.CollectionIDTypeHolder" <|-- "v1.Collection"
"state.Object" <|-- "v1.Collection"
"v1.isIdentifier_Id" <|-- "v1.Identifier_Attribute_"
"state.Object" <|-- "v1.Identifier_Identity"
"v1.isIdentifier_Id" <|-- "v1.Identifier_Identity_"
"state.Object" <|-- "v1.Identifier_Role"
"v1.isIdentifier_Id" <|-- "v1.Identifier_Role_"
"state.Object" <|-- "v1.User"

"__builtin__.[]error" #.. "example.NestedMessageMultiError"
"__builtin__.[]error" #.. "example.SimpleMessageMultiError"
"__builtin__.[]error" #.. "hlf.DataFieldMultiError"
"__builtin__.[]error" #.. "hlf.HistoryMultiError"
"__builtin__.[]error" #.. "hlf.History_EntryMultiError"
"__builtin__.[]error" #.. "hlf.KeySchemaMultiError"
"__builtin__.[]error" #.. "hlf.ObjectDiffMultiError"
"__builtin__.[]error" #.. "rbac.ACLMultiError"
"__builtin__.[]error" #.. "rbac.ACL_OperationMultiError"
"__builtin__.[]error" #.. "rbac.ACL_PathPermissionMultiError"
"__builtin__.[]error" #.. "rbac.ACL_PolicyMultiError"
"__builtin__.[]error" #.. "rbac.ACL_Policy_ObjectFieldMultiError"
"__builtin__.[]error" #.. "rbac.ACL_Policy_ObjectMultiError"
"__builtin__.[]error" #.. "rbac.ACL_Policy_RolesMultiError"
"__builtin__.[]error" #.. "rbac.CollectionMultiError"
"__builtin__.[]error" #.. "rbac.Collection_IdMultiError"
"__builtin__.[]error" #.. "rbac.HistoryMultiError"
"__builtin__.[]error" #.. "rbac.History_EntryMultiError"
"__builtin__.[]error" #.. "rbac.StateActivityMultiError"
"__builtin__.[]error" #.. "rbac.UserMultiError"
"__builtin__.[]error" #.. "rbac.User_IdMultiError"
"__builtin__.[]error" #.. "rbac.User_RoleMultiError"
"__builtin__.[]error" #.. "schemav1.ActionMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionCreateRequestMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionCreateResponseMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionGetHistoryRequestMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionGetHistoryResponseMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionGetListResponseMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionGetRequestMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionGetResponseMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionListMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionUpdatePermissionRequestMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionUpdatePermissionResponseMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionUpdateRequestMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionUpdateRolesRequestMultiError"
"__builtin__.[]error" #.. "schemav1.CollectionUpdateRolesResponseMultiError"
"__builtin__.[]error" #.. "schemav1.Collection_AccessControlMultiError"
"__builtin__.[]error" #.. "schemav1.Collection_AccessControl_AccessControlActionsMultiError"
"__builtin__.[]error" #.. "schemav1.Collection_AccessControl_SectionActionsMultiError"
"__builtin__.[]error" #.. "schemav1.Collection_AccessControl_SpecimenActionsMultiError"
"__builtin__.[]error" #.. "schemav1.Collection_IdMultiError"
"__builtin__.[]error" #.. "schemav1.Collection_ListMultiError"
"__builtin__.[]error" #.. "schemav1.GetCollectionRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetSpecimenByCollectionRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetSpecimenHistoryRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetSpecimenRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetSuggestedUpdateByCollectionRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetSuggestedUpdateBySpecimenRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetSuggestedUpdateRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetUserByCollectionRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetUserListRequestMultiError"
"__builtin__.[]error" #.. "schemav1.GetUserListResponseMultiError"
"__builtin__.[]error" #.. "schemav1.GetUserRequestMultiError"
"__builtin__.[]error" #.. "schemav1.LastModifiedMultiError"
"__builtin__.[]error" #.. "schemav1.PermissionsMultiError"
"__builtin__.[]error" #.. "schemav1.STestMultiError"
"__builtin__.[]error" #.. "schemav1.SpecimenCreateRequestMultiError"
"__builtin__.[]error" #.. "schemav1.SpecimenCreateResponseMultiError"
"__builtin__.[]error" #.. "schemav1.SpecimenDeleteRequestMultiError"
"__builtin__.[]error" #.. "schemav1.SpecimenHideTxRequestMultiError"
"__builtin__.[]error" #.. "schemav1.SpecimenMultiError"
"__builtin__.[]error" #.. "schemav1.SpecimenUnHideTxRequestMultiError"
"__builtin__.[]error" #.. "schemav1.SpecimenUpdateRequestMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_GeoreferenceMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_HiddenTxMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_HistoryMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_History_EntryMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_IdMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_ImageMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_ListMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_PrimaryMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_SecondaryMultiError"
"__builtin__.[]error" #.. "schemav1.Specimen_TaxonMultiError"
"__builtin__.[]error" #.. "schemav1.SuggestedStateListMultiError"
"__builtin__.[]error" #.. "schemav1.SuggestedUpdateApproveRequestMultiError"
"__builtin__.[]error" #.. "schemav1.SuggestedUpdateCreateRequestMultiError"
"__builtin__.[]error" #.. "schemav1.SuggestedUpdateMultiError"
"__builtin__.[]error" #.. "schemav1.SuggestedUpdateRejectRequestMultiError"
"__builtin__.[]error" #.. "schemav1.SuggestedUpdate_IdMultiError"
"__builtin__.[]error" #.. "schemav1.TestOperationRequestMultiError"
"__builtin__.[]error" #.. "schemav1.TestOperationResponseMultiError"
"__builtin__.[]error" #.. "schemav1.UpdateMembershipRequestMultiError"
"__builtin__.[]error" #.. "schemav1.UserGetCurrentIdResponseMultiError"
"__builtin__.[]error" #.. "schemav1.UserGetCurrentResponseMultiError"
"__builtin__.[]error" #.. "schemav1.UserGetHistoryRequestMultiError"
"__builtin__.[]error" #.. "schemav1.UserGetHistoryResponseMultiError"
"__builtin__.[]error" #.. "schemav1.UserGetListResponseMultiError"
"__builtin__.[]error" #.. "schemav1.UserGetRequestMultiError"
"__builtin__.[]error" #.. "schemav1.UserGetResponseMultiError"
"__builtin__.[]error" #.. "schemav1.UserMultiError"
"__builtin__.[]error" #.. "schemav1.UserRegisterRequestMultiError"
"__builtin__.[]error" #.. "schemav1.UserRegisterResponseMultiError"
"__builtin__.[]error" #.. "schemav1.UserUpdateMembershipRequestMultiError"
"__builtin__.[]error" #.. "schemav1.UserUpdateMembershipResponseMultiError"
"__builtin__.[]error" #.. "schemav1.User_IdMultiError"
"__builtin__.[]error" #.. "schemav1.User_ListMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateByCollectionRequestMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateByCollectionResponseMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateBySpecimenRequestMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateBySpecimenResponseMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateListRequestMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateListResponseMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateRequestMultiError"
"__builtin__.[]error" #.. "schemav2.GetSuggestedUpdateResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenCreateRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenCreateResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenDeleteRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenDeleteResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetByCollectionRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetByCollectionResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetHistoryRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetHistoryResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetListRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetListResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenGetResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenHideTxRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenHideTxResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenUnHideTxRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenUnHideTxResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenUpdateRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SpecimenUpdateResponseMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_GeoreferenceMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_GrantMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_IdMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_ImageMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_LoanMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_PrimaryMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_SecondaryMultiError"
"__builtin__.[]error" #.. "schemav2.Specimen_TaxonMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdateApproveRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdateApproveResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdateCreateRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdateCreateResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdateMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdateRejectRequestMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdateRejectResponseMultiError"
"__builtin__.[]error" #.. "schemav2.SuggestedUpdate_IdMultiError"
"__builtin__.[]error" #.. "v1.ACLMultiError"
"__builtin__.[]error" #.. "v1.ACL_EntryMultiError"
"__builtin__.[]error" #.. "v1.ACL_PathPermissionMultiError"
"__builtin__.[]error" #.. "v1.ACL_PolicyMultiError"
"__builtin__.[]error" #.. "v1.ACL_Policy_ObjectFieldMultiError"
"__builtin__.[]error" #.. "v1.ACL_Policy_ObjectMultiError"
"__builtin__.[]error" #.. "v1.ACL_Policy_PermissionMultiError"
"__builtin__.[]error" #.. "v1.CollectionMultiError"
"__builtin__.[]error" #.. "v1.Collection_IdMultiError"
"__builtin__.[]error" #.. "v1.Collection_SettingsMultiError"
"__builtin__.[]error" #.. "v1.HiddenTxMultiError"
"__builtin__.[]error" #.. "v1.HistoryMultiError"
"__builtin__.[]error" #.. "v1.History_EntryMultiError"
"__builtin__.[]error" #.. "v1.IdentifierMultiError"
"__builtin__.[]error" #.. "v1.Identifier_AttributeMultiError"
"__builtin__.[]error" #.. "v1.Identifier_IdentityMultiError"
"__builtin__.[]error" #.. "v1.Identifier_RoleMultiError"
"__builtin__.[]error" #.. "v1.OperationMultiError"
"__builtin__.[]error" #.. "v1.StateActivityMultiError"
"__builtin__.[]error" #.. "v1.UserMultiError"
"__builtin__.[]error" #.. "v1.User_IdMultiError"
"__builtin__.int32" #.. "hlf.TransactionType"
"__builtin__.int32" #.. "rbac.ACL_Action"
"__builtin__.int32" #.. "rbac.ACL_Domain"
"__builtin__.int32" #.. "rbac.Error"
"__builtin__.int32" #.. "schemav1.Action_Domain"
"__builtin__.int32" #.. "schemav1.Action_Level"
"__builtin__.int32" #.. "schemav1.Permission"
"__builtin__.int32" #.. "schemav1.Role"
"__builtin__.int32" #.. "v1.Collection_AuthType"
"__builtin__.int32" #.. "v1.Error"
"__builtin__.int32" #.. "v1.Operation_Action"
"__builtin__.int32" #.. "v1.Operation_Domain"
@enduml
