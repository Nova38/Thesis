version: 3

tasks:
  where:
    cmds:
      - pwd
  # network_setup:
  # cmds:
  # -  network.sh -ca up createChannel
  up:
    cmds:
      - bash -c "./network.sh up createChannel -ca -s couchdb -c mychannel"
      - python ./scripts/build_configs.py
      - docker-compose -f ./explorer/docker-compose.yaml up -d
      - docker-compose -f ./prometheus-grafana/docker-compose.yaml up -d
      # - ./network.sh deployCC -ccn Thesis -ccp ./apps/chaincode/sample -ccl go -ccep "OR('Org1MSP.peer','Org2MSP.peer')" -cccg ./apps/chaincode/sample/collections_config.json
  up:podman:
    env:
      CONTAINER_CLI: podman
    cmds:
      - bash -c "CONTAINER_CLI=podman ./network.sh up createChannel -ca -s
        couchdb -c mychannel"
      - python ./scripts/build_configs.py
      - podman compose -f ./explorer/docker-compose.yaml up -d
      - podman compose -f ./prometheus-grafana/docker-compose.yaml up -d
  down:
    cmds:
      - docker-compose -f ./explorer/docker-compose.yaml down -v
      - docker-compose -f ./prometheus-grafana/docker-compose.yaml down -v
      - bash -c "./network.sh down"

  create:channel:
    cmd: bash -c "network.sh createChannel -c {{.CLI_ARGS}}"

  cc:multi:
    cmds:
      - for: ["noauth", "noauth-no-sub", "identity", "roles"]
        # cmd: bash -c "echo {{ .ITEM }}"
        cmd:
          bash -c "./network.sh deployCCAAS -ccn {{ .ITEM }} -ccp ../pkg/saacs/
          "

  build:cc:
    cmd:
      docker build -t saacs_ccass:latest -f ../pkg/saacs/Dockerfile --build-arg
      CC_SERVER_PORT=9999 ../

  cc:redeploy:
    cmds:
      - for: ["noauth", "noauth-no-sub", "identity", "roles"]
        # cmd: bash -c "echo {{ .ITEM }}"
        cmd: bash -c " ./cc_restart/{{ .ITEM }}.sh "
